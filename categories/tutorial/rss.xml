<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial on Wimpy's World</title><link>https://wimpysworld.com/categories/tutorial/</link><description>Recent content in Tutorial on Wimpy's World</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><managingEditor>martin@wimpress.com (Martin Wimpress)</managingEditor><webMaster>martin@wimpress.com (Martin Wimpress)</webMaster><lastBuildDate>Mon, 15 Apr 2024 13:37:42 +0100</lastBuildDate><atom:link href="https://wimpysworld.com/categories/tutorial/rss.xml" rel="self" type="application/rss+xml"/><item><title>Fuzzel Colour Picker</title><link>https://wimpysworld.com/posts/fuzzel-hyprpicker/</link><pubDate>Mon, 15 Apr 2024 13:37:42 +0100</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/fuzzel-hyprpicker/</guid><description>&lt;p>We&amp;rsquo;ve all been there - you&amp;rsquo;re knee-deep in customizing your desktop, tweaking configs, perfecting that theme, and suddenly you need to grab a specific colour from somewhere on screen.
If you&amp;rsquo;re like me and recently made the jump to &lt;a href="https://hyprland.org/">Hyprland&lt;/a> (or other contemporary Wayland compositor), you might have found yourself missing some of those handy X11 utilities that &lt;em>&amp;ldquo;just worked&amp;rdquo;&lt;/em> ️™️&lt;/p>
&lt;h2 id="the-wayland-colour-picker-problem">The Wayland Colour Picker Problem&lt;/h2>
&lt;p>When I switched my daily driver to Hyprland back in August 2024, I was chuffed with the smooth animations, efficient tiling, and general polish.
But as with any big change, there were a few splinters in my workflow that needed sorting.&lt;/p>
&lt;p>One particular rough edge was the lack of a proper GUI colour picker.
On X11, I&amp;rsquo;d been spoiled by my mate &lt;a href="https://mastodon.social/@sil">Stuart Langridge&lt;/a>&amp;rsquo;s excellent tool &lt;strong>&lt;a href="https://www.kryogenix.org/code/pick/">Pick&lt;/a>&lt;/strong> - a proper colour picker that did exactly what it said on the tin.
But in Wayland? Well, I was left running &lt;a href="https://github.com/hyprwm/hyprpicker">&lt;code>hyprpicker&lt;/code>&lt;/a> from the terminal like some kind of savage! 😅&lt;/p>
&lt;p class="text-center">
&lt;img src="./hyprpicker.png" class="img-fluid" alt="hyprpicker in the terminal "/>
&lt;br />
&lt;em>hyprpicker in the terminal&lt;/em>
&lt;/p>
&lt;p>Don&amp;rsquo;t get me wrong - &lt;code>hyprpicker&lt;/code> works brilliantly for what it is.
But after seeing how well my recent integrations of &lt;a href="https://github.com/e-tho/bzmenu">&lt;strong>bzmenu&lt;/strong>&lt;/a> and &lt;a href="https://github.com/e-tho/iwmenu">&lt;strong>iwmenu&lt;/strong>&lt;/a> worked with &lt;a href="https://codeberg.org/dnkl/fuzzel">Fuzzel&lt;/a>, a lightbulb moment hit me: why not create a proper Fuzzel-based front-end for &lt;code>hyprpicker&lt;/code>? 💡&lt;/p>
&lt;h2 id="birth-of-fuzzel-hyprpicker">Birth of fuzzel-hyprpicker&lt;/h2>
&lt;p>After my second coffee one morning (the optimal programming fuel ☕💪), I decided to tackle this problem head-on.
If I was going to spend hours staring at my &lt;a href="https://catppuccin.com/">Catppuccin Mocha&lt;/a> themed desktop, I needed proper tools to maintain it! ‍🐈‍⬛🎨&lt;/p>
&lt;p>The goal was simple:&lt;/p>
&lt;ul>
&lt;li>Create a Fuzzel-based UI for &lt;code>hyprpicker&lt;/code>&lt;/li>
&lt;li>Maintain persistent colour history&lt;/li>
&lt;li>Make it keyboard-friendly&lt;/li>
&lt;li>Automatcially copy selected colours to clipboard&lt;/li>
&lt;/ul>
&lt;p>The result is &lt;a href="https://github.com/wimpysworld/nix-config/blob/main/home-manager/_mixins/desktop/hyprland/fuzzel/fuzzel-hyprpicker.sh">&lt;code>fuzzel-hyprpicker.sh&lt;/code>&lt;/a> - a little script that brings together the power of &lt;code>hyprpicker&lt;/code> with the elegant UI of Fuzzel.&lt;/p>
&lt;p class="text-center">
&lt;img src="./fuzzel-hyprpicker.png" class="img-fluid" alt="fuzzel-hyprpicker colour selection menu "/>
&lt;br />
&lt;em>fuzzel-hyprpicker showing the colour selection menu&lt;/em>
&lt;/p>
&lt;h2 id="how-it-works">How It Works&lt;/h2>
&lt;p>The magic behind &lt;code>fuzzel-hyprpicker.sh&lt;/code> is surprisingly straightforward.
Let me walk you through the key bits:&lt;/p>
&lt;h3 id="setting-up-the-basics">Setting Up the Basics&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0"># A tool to pick colours from the screen using hyprpicker and fuzzel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set +u &lt;span style="color:#0f0"># Disable nounset&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">APP_NAME&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;fuzzel-hyprpicker&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">NOTIFY&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;notify-desktop --app-name=&lt;/span>&lt;span style="color:#eedd82">$APP_NAME&lt;/span>&lt;span style="color:#87ceeb"> --icon=org.gnome.design.Palette&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Set up the storage directory and file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">CONFIG_DIR&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">XDG_CONFIG_HOME&lt;/span>&lt;span style="color:#f00">:-&lt;/span>&lt;span style="color:#eedd82">$HOME&lt;/span>/.config&lt;span style="color:#87ceeb">}&lt;/span>&lt;span style="color:#87ceeb">/&lt;/span>&lt;span style="color:#eedd82">$APP_NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">HISTORY_FILE&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$CONFIG_DIR&lt;/span>&lt;span style="color:#87ceeb">/colours.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">ICONS_DIR&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$CONFIG_DIR&lt;/span>&lt;span style="color:#87ceeb">/icons&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nothing fancy here - we&amp;rsquo;re just setting up our environment, defining where we&amp;rsquo;ll store our colour history, and setting up notifications.
Note that I properly follow the XDG spec here - it&amp;rsquo;s the little things! 😉&lt;/p>
&lt;h3 id="the-clever-bit-svg-icons">The Clever Bit: SVG Icons&lt;/h3>
&lt;p>Here&amp;rsquo;s where things get interesting.
Fuzzel supports icons in its menus, but I needed a way to show colour swatches.
The solution? Dynamically generated SVG files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">function&lt;/span> generate_svg_icon() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local &lt;span style="color:#eedd82">colour&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local &lt;span style="color:#eedd82">icon_path&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$ICONS_DIR&lt;/span>&lt;span style="color:#87ceeb">/&lt;/span>&lt;span style="color:#eedd82">$colour&lt;/span>&lt;span style="color:#87ceeb">.svg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Create an SVG for the colour if it doesn&amp;#39;t exist&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ ! -f &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$icon_path&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cat &amp;gt; &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$icon_path&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;lt;svg width=&amp;#34;128&amp;#34; height=&amp;#34;128&amp;#34; xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> &amp;lt;rect width=&amp;#34;128&amp;#34; height=&amp;#34;128&amp;#34; fill=&amp;#34;#$colour&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;lt;/svg&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;m rather pleased with myself for this solution.
Each time you pick a colour, it generates a tiny SVG file that&amp;rsquo;s just a coloured square.
Fuzzel then displays this next to the hex code in the menu. Well done brain! 🧠&lt;/p>
&lt;h3 id="menu-building">Menu Building&lt;/h3>
&lt;p>The menu itself is built dynamically, showing an eyedropper icon for picking a new colour followed by your colour history:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">function&lt;/span> build_menu() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo -e &lt;span style="color:#87ceeb">&amp;#34;Pick a colour\0icon\x1f&lt;/span>&lt;span style="color:#eedd82">$ICONS_DIR&lt;/span>&lt;span style="color:#87ceeb">/eyedropper.svg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Add history items if they exist&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -s &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HISTORY_FILE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">while&lt;/span> read -r colour; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># If the preview icon doesn&amp;#39;t exist, generate it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ ! -e &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$ICONS_DIR&lt;/span>&lt;span style="color:#87ceeb">/&lt;/span>&lt;span style="color:#eedd82">$colour&lt;/span>&lt;span style="color:#87ceeb">.svg&amp;#34;&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generate_svg_icon &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$colour&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Display the colour with a preview&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo -e &lt;span style="color:#87ceeb">&amp;#34;#&lt;/span>&lt;span style="color:#eedd82">$colour&lt;/span>&lt;span style="color:#87ceeb">\0icon\x1f&lt;/span>&lt;span style="color:#eedd82">$ICONS_DIR&lt;/span>&lt;span style="color:#87ceeb">/&lt;/span>&lt;span style="color:#eedd82">$colour&lt;/span>&lt;span style="color:#87ceeb">.svg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span> &amp;lt; &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HISTORY_FILE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This uses the &lt;a href="https://github.com/davatorium/rofi">&lt;code>rofi&lt;/code>&lt;/a> &amp;ldquo;protocol&amp;rdquo; for menu items, something Fuzzel has built-in support for 💖
The &lt;code>\0icon\x1f&lt;/code> bit is how you tell Fuzzel &lt;em>&amp;ldquo;hey, use this icon for this menu item&amp;rdquo;&lt;/em>.&lt;/p>
&lt;h3 id="putting-it-all-together">Putting It All Together&lt;/h3>
&lt;p>The full workflow goes like this:&lt;/p>
&lt;ol>
&lt;li>Press &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>Alt&lt;/kbd> + &lt;kbd>K&lt;/kbd> to open the picker&lt;/li>
&lt;li>Select &lt;strong>&amp;ldquo;Pick a colour&amp;rdquo;&lt;/strong> or choose one from your history&lt;/li>
&lt;li>If picking a new colour, &lt;code>hyprpicker&lt;/code> does it&amp;rsquo;s thing and click anywhere on screen&lt;/li>
&lt;li>The colour gets automatically copied to your clipboard&lt;/li>
&lt;li>A notification appears showing the selected colour&lt;/li>
&lt;/ol>
&lt;p class="text-center">
&lt;img src="./hyprpicker-select.png" class="img-fluid" alt="hyprpicker colour selection "/>
&lt;br />
&lt;em>hyprpicker colour selection&lt;/em>
&lt;/p>
&lt;h2 id="integrating-it-with-your-setup">Integrating It With Your Setup&lt;/h2>
&lt;p>Want to give this a try yourself?
Here&amp;rsquo;s how to adapt it to your wlroots-compatible desktop:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>First, make sure you have the following installed:&lt;/p>
&lt;ul>
&lt;li>&lt;code>hyprpicker&lt;/code>&lt;/li>
&lt;li>&lt;code>fuzzel&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/bugaevc/wl-clipboard">&lt;code>wl-clipboard&lt;/code>&lt;/a> (for clipboard management)&lt;/li>
&lt;li>&lt;a href="https://github.com/nowrep/notify-desktop">&lt;code>notify-desktop&lt;/code>&lt;/a> (for notifications)
&lt;ul>
&lt;li>Although I&amp;rsquo;m planning on switching to &lt;a href="https://codeberg.org/dnkl/fyi">&lt;code>fyi&lt;/code>&lt;/a> soon&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Save the script somewhere in your path (I&amp;rsquo;ve got mine as part of &lt;a href="https://github.com/wimpysworld/nix-config">my Nix configuration&lt;/a>) ️❄️&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make it executable:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chmod +x fuzzel-hyprpicker.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Bind it to a keyboard shortcut in your Hyprland config:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>bind = CTRL ALT, K, exec, fuzzel-hyprpicker.sh
&lt;/code>&lt;/pre>&lt;ol start="5">
&lt;li>Give it a whirl!&lt;/li>
&lt;/ol>
&lt;p>It should work with any wlroots-compatible compositor, not just Hyprland.&lt;/p>
&lt;h2 id="possible-enhancements">Possible Enhancements&lt;/h2>
&lt;p>This is very much a v1 and there&amp;rsquo;s plenty of room for improvement:&lt;/p>
&lt;ul>
&lt;li>Add support for different colour formats (RGB, HSL, etc.)&lt;/li>
&lt;li>Implement colour name lookup&lt;/li>
&lt;li>Create a proper project rather than just a script wedged in my Nix configuration&lt;/li>
&lt;/ul>
&lt;p>But for a morning hack, it&amp;rsquo;s been surprisingly useful!
Reaching for &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>Alt&lt;/kbd> + &lt;kbd>K&lt;/kbd> brings a smile to my face 😀&lt;/p>
&lt;h2 id="the-joy-of-keyboard-driven-workflows">The Joy of Keyboard-Driven Workflows&lt;/h2>
&lt;p>What I love about tools like this is how they contribute to a cohesive, keyboard-driven workflow.
Between Hyprland&amp;rsquo;s tiling, Waybar&amp;rsquo;s status info, and Fuzzel-based menus for everything from launching apps to picking colours, my fingers rarely stray from the keyboard these days.&lt;/p>
&lt;p>There&amp;rsquo;s something deeply satisfying about crafting your own tools to scratch your own itches.
It&amp;rsquo;s a long held Linux desktop tradition, isn&amp;rsquo;t it?
Taking what works, improving what doesn&amp;rsquo;t, and sharing the results with others.&lt;/p>
&lt;p class="text-center">
&lt;a href="https://linuxmatters.sh" target="_blank">&lt;img src="./hyprland-desktop.png" class="img-fluid" alt="hyprland desktop with fuzzel-hyprpicker "/>&lt;/a>
&lt;br />
&lt;em>My hyprland desktop with fuzzel-hyprpicker in action&lt;/em>
&lt;/p>
&lt;h2 id="more-fuzzel-based-tools">More Fuzzel-Based Tools?&lt;/h2>
&lt;p>I&amp;rsquo;ve created several other Fuzzel menus that integrate with my Hyprland desktop.
I should probably post about those as well - emoji picker and screenshot and screen recording being among my most useful.
Let me know in the comments if you&amp;rsquo;d be interested in seeing those! 👇&lt;/p>
&lt;p>In the meantime, give &lt;code>fuzzel-hyprpicker.sh&lt;/code> a try and let me know what you think.
&lt;strong>And if you improve upon it, &lt;em>please do share your changes!&lt;/em>&lt;/strong>&lt;/p>
&lt;p>The full script is available in my Nix config repository: &lt;a href="https://github.com/wimpysworld/nix-config/blob/main/home-manager/_mixins/desktop/hyprland/fuzzel/fuzzel-hyprpicker.sh">fuzzel-hyprpicker.sh&lt;/a>&lt;/p>
&lt;p>Happy colour picking! 🎨🤏&lt;/p>
&lt;hr>
&lt;p>&lt;em>Have you created any custom tools for your Wayland desktop? Are there any X11 utilities you miss since switching? Let me know in the comments below!&lt;/em>&lt;/p></description><summary>Creating a Proper Colour Picker for Hyprland with Fuzzel</summary></item><item><title>Install ZeroTier on Steam Deck</title><link>https://wimpysworld.com/posts/install-zerotier-on-steamdeck/</link><pubDate>Thu, 17 Aug 2023 12:15:45 +0100</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/install-zerotier-on-steamdeck/</guid><description>&lt;p>It took 9 episodes of &lt;a href="https://linuxmatters.sh">Linux Matters&lt;/a> for my friends and co-hosts &lt;a href="https://linuxmatters.sh/host/apope/">Alan&lt;/a> and &lt;a href="https://linuxmatters.sh/host/mjohnson/">Mark&lt;/a> to wear down 😅 my resolve to buy a &lt;a href="https://www.steamdeck.com/en/">Steam Deck&lt;/a>, even &lt;a href="https://wimpysworld.com/posts/steambox-vs-steamdeck/">after I passed on my original Steam Deck pre-order&lt;/a>.
I&amp;rsquo;m glad they did, it&amp;rsquo;s a great little device and a dream come true for Linux 🐧 nerds; excellent hardware and completely hackable 🧑‍💻&lt;/p>
&lt;p>I ordered the 64GB model via the recently announced &lt;a href="https://store.steampowered.com/sale/steamdeckrefurbished">Steam Deck™ Certified Refurbished&lt;/a> program.
I&amp;rsquo;m going to resist retrofitting a larger NVMe SSD, and have instead added a 1TB microSDXC card 💾
The 64GB internal eMMC storage will be used for SteamOS and the microSDXC card will be used exclusively for games 🕹️&lt;/p>
&lt;p>While I&amp;rsquo;m avoiding hardware modifications, I do want to install some software enhancements on the Steam Deck; specifically &lt;a href="https://www.zerotier.com/">ZeroTier&lt;/a>.
&lt;strong>I spoke enthusiastically about ZeroTier in &lt;a href="https://linuxmatters.sh/episodes/8/">Linux Matters: Picking Apart the Steam Deck (Episode 8)&lt;/a>&lt;/strong>; it is as essential as WiFi for me.
So, give that episode a listen to hear why I love ZeroTier so much 💖&lt;/p>
&lt;p class="text-center">
&lt;a href="https://linuxmatters.sh" target="_blank">&lt;img src="https://linuxmatters.sh/img/episode/linuxmatters-banner-3000x750.webp" class="img-fluid" alt="Linux Matters Podcast"/>&lt;/a>
&lt;br />
&lt;em>Linux Matters Podcast&lt;/em>
&lt;/p>
&lt;p>What follows is a guide to installing ZeroTier on the Steam Deck, &lt;strong>but this technique can be used to install any software on Steam Deck that is available for Arch Linux&lt;/strong> 👍️&lt;/p>
&lt;h1 id="installing-zerotier-on-steam-deck">Installing ZeroTier on Steam Deck&lt;/h1>
&lt;p>The Steam Deck has a (&lt;em>mostly&lt;/em>) read-only filesystem.
We&amp;rsquo;ll use &lt;a href="https://github.com/ValShaped/rwfus">Rwfus: Read-Write OverlayFS for your Steam Deck&lt;/a> to install ZeroTier so that it persists across reboots &lt;em>and&lt;/em> SteamOS updates.&lt;/p>
&lt;p>The author describes &lt;code>rwfus&lt;/code> as:&lt;/p>
&lt;blockquote>
&lt;p>a vinyl couch cover for your filesystem, Rwfus covers your Deck&amp;rsquo;s &lt;code>/usr/&lt;/code> directory (and some others) allowing you to initialize and use &lt;code>pacman&lt;/code> (the Arch Linux package manager) on the Steam Deck without losing packages when the next update comes out.&lt;/p>
&lt;/blockquote>
&lt;p>Perfect 👌️&lt;/p>
&lt;h2 id="enter-the-desktop">Enter the Desktop&lt;/h2>
&lt;p>The process of installing and configuring ZeroTier requires the use of the Steam Deck desktop mode.
Connecting a mouse 🖱️ and keyboard ⌨️ to the Steam Deck will make this process much easier.
After the Steam Deck has booted you should Switch to Desktop.&lt;/p>
&lt;ul>
&lt;li>Press the &amp;ldquo;Steam&amp;rdquo; button on the Steam Deck and scroll down through the menu and select &amp;ldquo;Power&amp;rdquo;.&lt;/li>
&lt;li>Then, select the &amp;ldquo;Switch to Desktop&amp;rdquo; option.&lt;/li>
&lt;li>Once the desktop has loaded, click on the Steam Deck logo in the lower-left corner of the desktop to bring up the menu.&lt;/li>
&lt;li>Select &amp;ldquo;System&amp;rdquo; in the left column and then &amp;ldquo;Konsole&amp;rdquo; from the right column.
&lt;ul>
&lt;li>You can also press the Super key and type in &amp;ldquo;Konsole&amp;rdquo; in the search bar.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Suddenly, as if by magic, the terminal appeared 🪄&lt;/li>
&lt;/ul>
&lt;p class="text-center">
&lt;img src="./magic-terminal.webp" class="img-fluid" alt="Konsole"/>
&lt;br />
&lt;em>Konsole on Steam Deck&lt;/em>
&lt;/p>
&lt;h2 id="set-a-password">Set a Password&lt;/h2>
&lt;p>By default, no password 🔓️ is set for the &lt;code>deck&lt;/code> user.
With no password set, it is not possible to run commands in the root context using &lt;code>sudo&lt;/code>.
Type &lt;code>passwd&lt;/code> in the terminal to set a password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>(deck@steamdeck ~) $ passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Retype New Password:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-rwfus">Install Rwfus&lt;/h2>
&lt;p>With that done we can install &lt;code>rwfus&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git clone https://github.com/ValShaped/rwfus.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd rwfus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./rwfus -iI
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-zerotier">Install ZeroTier&lt;/h2>
&lt;p>Run &lt;code>sudo pacman -Sy&lt;/code> to update your repositories 🌿
Now install ZeroTier.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo pacman -S zerotier-one
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enable-and-start-zerotier-service">Enable and Start ZeroTier service&lt;/h3>
&lt;p>ZeroTier installs its systemd unit in &lt;code>/usr/lib/systemd/system/&lt;/code>, but as we&amp;rsquo;re installing while Rwfus is active that service file is installed into the Rwfus overlay.
This is a problem because running &lt;code>systemctl enable zerotier-one&lt;/code> now would create a systemd unit in &lt;code>/etc/systemd/system/multi-user.target.wants/&lt;/code> that references a file in &lt;code>/usr&lt;/code>, and that file will not exist until Rwfus is running.
The effect is that the ZeroTier service will not start on boot as systemd will not be able to find the service file.&lt;/p>
&lt;p>But there is a simple workaround, copy the ZeroTier service file to &lt;code>/etc/systemd/system&lt;/code>, which is fine as &lt;code>/etc&lt;/code> is already a writable overlay.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cp /usr/lib/systemd/system/zerotier-one.service /etc/systemd/system/zerotier-one.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, enable and start the ZeroTier service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo systemctl enable zerotier-one --now
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="join-a-zerotier-network">Join a ZeroTier Network&lt;/h2>
&lt;p>Find your ZeroTier device ID (a 10-digit hexadecimal number) by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo zerotier-cli info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output will look 👀 something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>200 info deadbeef00 1.10.1 OFFLINE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Join a ZeroTier network using a network ID (a 16-digit hexadecimal number) which you can get from the &lt;a href="https://my.zerotier.com/">My ZeroTier page&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo zerotier-cli join &amp;lt;network id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Return to the &lt;a href="https://my.zerotier.com/">My ZeroTier page&lt;/a> select the network you joined, scroll down to the Members section and authorize the Steam Deck device ID.&lt;/p>
&lt;p>Verify that the Steam Deck is correctly allocated an IP address, this may take up to 30 seconds ⏳️&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ip --brief addr | grep ^zt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see 👁️ output similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>zta1b2c3d4 UNKNOWN 192.168.192.59/24 baad::4a4a:faff:fefe:5aa5/64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="use-your-zerotier-network">Use your ZeroTier network&lt;/h2>
&lt;p>You can now connect from your Steam Deck to other devices on the same ZeroTier network.
Or you could enable SSH on the Steam Deck and then log in to it from another device on the ZeroTier network 💪&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo systemctl enable sshd --now
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>With ZeroTier installed on the Steam Deck, it is part of my network where ever I may roam; and enables some interesting possibilities such as remote play from anywhere in the world or &lt;a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2632149295">playing LAN multi-player games with remote friends&lt;/a>.
Share in the comments how you&amp;rsquo;re using ZeroTier on your Steam Deck 💬&lt;/p>
&lt;p class="text-center">
&lt;img src="./SteamDeck-ZeroTier.webp" class="img-fluid" alt="Steam Deck with ZeroTier"/>
&lt;br />
&lt;em>Steam Deck&lt;/em>
&lt;/p>
&lt;p>I&amp;rsquo;ll be keeping my Steam Deck software modifications to a minimum 🤏 but where I do make changes I&amp;rsquo;ll be careful not to disrupt the SteamOS root file systems or potentially break SteamOS updates.
I&amp;rsquo;m glad solutions like Rwfus exist to allow me to install the software I need. But&amp;hellip;. 🤔&lt;/p>
&lt;p>&lt;a href="https://nixos.org">Nix&lt;/a> is what I work on as my day job at &lt;a href="https://determinate.systems">Determinate Systems&lt;/a> ❄️
I&amp;rsquo;m creating a little project that any Steam Deck owner can use to bring the power of Nix to Steam Deck while maintaining isolation from the SteamOS root file system.
That project depends on the &lt;a href="https://github.com/DeterminateSystems/nix-installer">Determinate Nix Installer&lt;/a>, &lt;strong>which natively supports Steam Deck&lt;/strong>.
So, if you want to get a head start with Nix on the Steam Deck then you can do that today 🙂&lt;/p></description><summary>How to persist software installation across SteamOS updates on the Steam Deck.</summary></item><item><title>Flash Stadia Controller Bluetooth Firmware on Linux</title><link>https://wimpysworld.com/posts/flash-stadia-controller-bluetooth-firmware-on-linux/</link><pubDate>Fri, 28 Apr 2023 16:00:00 +0100</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/flash-stadia-controller-bluetooth-firmware-on-linux/</guid><description>&lt;p>I was a &lt;a href="https://stadia.google.com/gg/">Google Stadia&lt;/a> &amp;ldquo;founder&amp;rdquo; and when it was shut down on January 18, 2023 I was left with 3 perfectly usable Stadia Controllers; provided I could connect them using a USB-C cable. I quite like the Stadia Controller, the form factor is similar to the PlayStation DualShock but with an Xbox style button layout.&lt;/p>
&lt;p class="text-center">
&lt;img src="./stadia-controller.webp" class="img-fluid" alt="Stadia Controller"/>
&lt;br />
&lt;em>Stadia Controller&lt;/em>
&lt;/p>
&lt;p>While using it via USB-C is great for PC, wireless connectivity would provide more options. Thankfully &lt;a href="https://stadia.google.com/controller">Google released Bluetooth firmware for the Stadia Controller&lt;/a> which disables Stadia&amp;rsquo;s proprietary Wi-Fi connectivity and enables Bluetooth® Low Energy (BLE). You can then use it like a standard wireless Bluetooth controller with other hardware and also still plug your Stadia Controller into a device with a USB-C cable.&lt;/p>
&lt;h2 id="compatibility-">Compatibility 🧩&lt;/h2>
&lt;p>The &lt;a href="https://support.google.com/stadia?p=controllerconnect#devicelist">Stadia Controller Device Compatibility List&lt;/a> says&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;Testing of Bluetooth mode was focused on the devices and systems listed below, but may not work with all hardware configurations.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Windows 10 and 11 + Steam&lt;/li>
&lt;li>MacOS® 13 + Steam&lt;/li>
&lt;li>ChromeOS&lt;/li>
&lt;li>Android&lt;/li>
&lt;/ul>
&lt;p>Most importantly, it says &lt;em>&lt;strong>&amp;ldquo;computers must have a Bluetooth Low Energy adapter in order to communicate with the Stadia Controller in Bluetooth mode and that hardware compatibility will vary.&amp;rdquo;&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="flash-stadia-controller-bluetooth-firmware-using-ubuntu-2204-">Flash Stadia Controller Bluetooth Firmware using Ubuntu 22.04 🐧&lt;/h2>
&lt;p>Here&amp;rsquo;s how I flashed that firmware on all 3 of my controllers using Linux; well Ubuntu 22.04 to be precise. The system requirements for the Bluetooth Firmware tool is stated to be Chrome 108 or newer. No problem! But, I was unable to get the controllers to show up in Chrome until some &lt;code>udev&lt;/code> rules were added. Open a terminal and run the following command from any directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>{ cat &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># SDP protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">KERNEL==&amp;#34;hidraw*&amp;#34;, ATTRS{idVendor}==&amp;#34;1fc9&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">ACTION==&amp;#34;add&amp;#34;, SUBSYSTEM==&amp;#34;usb&amp;#34;, ATTR{idVendor}==&amp;#34;1fc9&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">ACTION==&amp;#34;add&amp;#34;, SUBSYSTEM==&amp;#34;usb&amp;#34;, ATTR{idVendor}==&amp;#34;0d28&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># Flashloader
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">KERNEL==&amp;#34;hidraw*&amp;#34;, ATTRS{idVendor}==&amp;#34;15a2&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># Controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">KERNEL==&amp;#34;hidraw*&amp;#34;, SUBSYSTEM==&amp;#34;hidraw&amp;#34;, ATTRS{idVendor}==&amp;#34;18d1&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">SUBSYSTEMS==&amp;#34;usb&amp;#34;, ATTRS{idVendor}==&amp;#34;18d1&amp;#34;, ATTRS{idProduct}==&amp;#34;9400&amp;#34;, MODE=&amp;#34;0660&amp;#34;, TAG+=&amp;#34;uaccess&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} | sudo tee /etc/udev/rules.d/70-stadiacontroller-flash.rules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run the following to reload the &lt;code>udev&lt;/code> rules.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo udevadm control --reload-rules
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo udevadm trigger
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With that done, I restarted Google Chrome and followed the instructions on the &lt;a href="https://stadia.google.com/controller/index_en_GB.html">Stadia Controller Firmware Flashing Tool&lt;/a> page. I was able to flash the firmware on all 3 of my controllers. The process is pretty straightforward but I&amp;rsquo;ve included the instructions below for reference.&lt;/p>
&lt;h3 id="charge-your-controller">Charge your controller&lt;/h3>
&lt;p>Make sure that your controller has been charged for 30 minutes and that you&amp;rsquo;re using a USB data cable.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Verify_Plug_in_controller.svg" class="img-fluid" alt="Charge your controller"/>
&lt;br>
&lt;b>Charge your controller&lt;/b>
&lt;/p>
&lt;h3 id="unplug-your-controller-to-power-it-off">Unplug your controller to power it off&lt;/h3>
&lt;p>If it turns on again, hold the Stadia button for 4 seconds to power it off&lt;/p>
&lt;p class="text-center">
&lt;img src="./Unlock_Unplug.svg" class="img-fluid" alt="Unplug your controller to power it off"/>
&lt;br>
&lt;b>Unplug your controller to power it off&lt;/b>
&lt;/p>
&lt;h3 id="hold-the-option-button-three-dots-while-plugging-in-your-controller">Hold the option button (three dots) while plugging in your controller&lt;/h3>
&lt;p>The status light should remain off. If it turns on, unplug the controller and try again&lt;/p>
&lt;p class="text-center">
&lt;img src="./Unlock_Option_Plug.svg" class="img-fluid" alt="Hold the option button (three dots) while plugging in your controller"/>
&lt;br>
&lt;b>Hold the option button (three dots) while plugging in your controller&lt;/b>
&lt;/p>
&lt;h3 id="press-the-option-assistant-a-and-y-buttons-at-the-same-time">Press the Option, Assistant, A, and Y buttons at the same time&lt;/h3>
&lt;p>There won&amp;rsquo;t be any controller feedback, proceed to the next step to confirm the controller is unlocked&lt;/p>
&lt;p class="text-center">
&lt;img src="./Unlock_Four_buttons.svg" class="img-fluid" alt="Press the Option, Assistant, A, and Y buttons at the same time"/>
&lt;br>
&lt;b>Press the Option, Assistant, A, and Y buttons at the same time&lt;/b>
&lt;/p>
&lt;h3 id="select-your-controller-in-the-chrome-device-list-and-click-connect">Select your controller in the Chrome device list and click &amp;ldquo;Connect&amp;rdquo;.&lt;/h3>
&lt;p>The text in the flashing utility says the Stadia Controller should be named &lt;strong>&amp;ldquo;SP Blank RT Family&amp;rdquo;&lt;/strong> or &amp;ldquo;Stadia Controller&amp;rdquo; or &amp;ldquo;USB COMPOSITE DEVICE&amp;rdquo;.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Chrome_dialog_Download_en-GB.svg" class="img-fluid" alt="Select your controller in the Chrome device list again and click Connect"/>
&lt;br>
&lt;b>Select your controller in the Chrome device list again and click "Connect".&lt;/b>
&lt;/p>
&lt;h3 id="download-complete">Download complete&lt;/h3>
&lt;p>You&amp;rsquo;ve almost finished. Go to the final step to install the latest version of Bluetooth mode on your controller.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Download_Download_complete.svg" class="img-fluid" alt="Download complete"/>
&lt;br>
&lt;b>Download complete&lt;/b>
&lt;/p>
&lt;h3 id="install-bluetooth-mode">Install Bluetooth mode&lt;/h3>
&lt;p>One more time - select your controller in the Chrome device list, then click &amp;ldquo;Connect&amp;rdquo;. Installation will start automatically and should only take a minute.&lt;/p>
&lt;p>The text in the flashing utility says the Stadia Controller should be named &lt;strong>&amp;ldquo;USB COMPOSITE DEVICE&amp;rdquo;&lt;/strong> or &amp;ldquo;Stadia Controller&amp;rdquo; or &amp;ldquo;SP Blank RT Family&amp;rdquo;.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Chrome_dialog_Install_en-GB.svg" class="img-fluid" alt="Install Bluetooth mode"/>
&lt;br>
&lt;b>Install Bluetooth mode&lt;/b>
&lt;/p>
&lt;h3 id="installation-complete">Installation complete&lt;/h3>
&lt;p>Wait a minute or so for the firmware installation to complete.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Finish_Bluetooth_enabled.svg" class="img-fluid" alt="Installation complete"/>
&lt;br>
&lt;b>Installation complete&lt;/b>
&lt;/p>
&lt;h2 id="pairing-stadia-controller-with-bluetooth">Pairing Stadia Controller with Bluetooth&lt;/h2>
&lt;p>Hold the Y and Stadia buttons for 2 seconds until the status light flashes orange. It is now in pairing mode and visible to other devices.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Pairing_mode.svg" class="img-fluid" alt="Pairing Stadia Controller with Bluetooth"/>
&lt;br>
&lt;b>Pairing Stadia Controller with Bluetooth&lt;/b>
&lt;/p>
&lt;h2 id="hurray-up-">Hurray up! ⏳️&lt;/h2>
&lt;p>&lt;strong>After the shutdown in January 2023, you have until December 31, 2023, to update the controller so it can use Bluetooth mode.&lt;/strong>&lt;/p>
&lt;p>Fortunately, the &lt;a href="https://github.com/Scyne/stadiaRawBtFw">Stadia Controller firmware has been archived&lt;/a> and an &lt;a href="https://luigimannoni.github.io/stadia-controller-flasher/">Unofficial Stadia Controller Flashing utility&lt;/a> created which might prove useful after December 31, 2023.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://luigimannoni.github.io/stadia-controller-flasher/">&lt;strong>Unofficial Stadia Controller Flashing utility&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Your mileage may vary using the re-implementation of the &lt;a href="https://github.com/luigimannoni/stadia-controller-flasher">Utility for flashing Stadia Controllers&lt;/a>, so if you&amp;rsquo;re doing this before December 31, 2023, use the &lt;a href="https://stadia.google.com/controller/">official tool&lt;/a>.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>After updating my Stadia Controllers with Bluetooth firmware, I&amp;rsquo;ve successfully paired them with my Android tablet, iPhone 13 and &lt;a href="https://chimeraos.org/">ChimeraOS&lt;/a>; an operating system that provides an out-of-the-box couch gaming experience 🎮️ While Stadia might be dead and gone, I&amp;rsquo;m very happy to continue to get utility out of the controllers; which turned out to be free after the reimbursement Google offered when Stadia was shut down.&lt;/p></description><summary>How to flash Stadia Controller Bluetooth mode on Linux</summary></item><item><title>Creating Production-Ready Containers - Advanced Techniques</title><link>https://wimpysworld.com/posts/creating-production-ready-containers-advanced-techniques/</link><pubDate>Fri, 18 Jun 2021 12:18:15 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/creating-production-ready-containers-advanced-techniques/</guid><description>&lt;p>Creating production-ready containers for use in commercial-grade apps can be a far cry from the &amp;ldquo;get started with Node.js and Docker&amp;rdquo;-type of tutorials that are common around the Internet. Those guides are great for introducing all the advantages of Docker containers in modern cloud-native development, but creating a container that passes muster in a large-scale application in production is a different story.&lt;/p>
&lt;p>For production-ready containers, there are three key things you want to optimise for when creating a container:&lt;/p>
&lt;ol>
&lt;li>Image Size 📦&lt;/li>
&lt;li>Build Speed 🐢&lt;/li>
&lt;li>Security 🔐&lt;/li>
&lt;/ol>
&lt;p>Image size and build speed ensure that your containers can move through CI/CD and test pipelines easily and efficiently. Security is critical in today&amp;rsquo;s software supply chain, and containers have their own set of security issues. Thankfully, reducing container image size actually can alleviate some security issues in containers.&lt;/p>
&lt;p>&lt;a href="https://wimpysworld.com/posts/creating-production-ready-containers-the-basics">In my Basics article&lt;/a>, I showed you some easy techniques to improve your &lt;code>Dockerfile&lt;/code> using a sample &amp;ldquo;Hello World&amp;rdquo; Node.js application.&lt;/p>
&lt;p>These basics address all three optimisations, though they only scratch the surface.&lt;/p>
&lt;p>Let&amp;rsquo;s look at some more advanced techniques for Container Optimisation.&lt;/p>
&lt;h2 id="alpine-images">Alpine Images&lt;/h2>
&lt;p>The very first thing you&amp;rsquo;ll encounter when looking for techniques to create smaller containers is &lt;a href="https://alpinelinux.org/">Alpine Linux&lt;/a>. Alpine Linux is an open-source project whose goal is to create a bare-bones 🦴 version of Linux that lets developers &amp;ldquo;build from the ground up.&amp;rdquo;&lt;/p>
&lt;h3 id="pros-transitioning-to-alpine-can-be-an-easy-way-to-get-a-smaller-container">Pros: Transitioning to Alpine can be an easy way to get a smaller container&lt;/h3>
&lt;p>Reducing image size with Alpine can be incredibly simple - under the right circumstances. For some apps, it&amp;rsquo;s as easy as changing the base image in your &lt;code>Dockerfile&lt;/code>:&lt;/p>
&lt;h4 id="from">FROM&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.2.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="to">TO&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.2.0-alpine&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we build the new image, we see that the old image was 856MB and the new one is 114MB 🎉&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cotw-node-alpine latest 2cc7b4a7b09c 2 minutes ago 114MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cotw-node latest 873fb9fca53a 3 days ago 856MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Easy, right? Not so fast.&lt;/p>
&lt;h3 id="cons-using-alpine-images-can-lead-to-build-problems-now-and-in-the-future">Cons: Using Alpine images can lead to build problems, now and in the future&lt;/h3>
&lt;p>There are some not-so-obvious gotchas with using Alpine images that don&amp;rsquo;t crop up in our super simple example application, such as:&lt;/p>
&lt;h4 id="you-have-to-install-everything">You have to install everything&lt;/h4>
&lt;p>Those tiny base images have to sacrifice something, right? Alpine users will be installing everything they need, right down to time-zone data or development tools. You won&amp;rsquo;t need your development tools for your production image, most likely, but for most developers, the thought of a server without &lt;code>curl&lt;/code> or &lt;code>vim&lt;/code> is a bridge too far.&lt;/p>
&lt;h4 id="different-compilers-and-package-managers">Different compilers and package managers&lt;/h4>
&lt;p>You&amp;rsquo;ll also be installing any dependencies with the Alpine Package Keeper tool (&lt;code>apk&lt;/code>) instead of the more familiar &lt;code>apt&lt;/code> or &lt;code>rpm&lt;/code>. The differences are small but can trip up unsuspecting developers.&lt;/p>
&lt;h4 id="fewer-examples-less-documentation">Fewer examples; less documentation&lt;/h4>
&lt;p>Finally, while Alpine has been around for nine-plus years, it is and likely always will be a smaller and more specialised user base than established Linux distributions such as Ubuntu and Debian. To wit, at the time of this writing the &lt;code>alpine&lt;/code> tag on StackOverflow has just &lt;a href="https://stackoverflow.com/questions/tagged/alpine">1,280 questions&lt;/a>, compared with &lt;a href="https://stackoverflow.com/questions/tagged/ubuntu">over 54,000 for Ubuntu&lt;/a>.&lt;/p>
&lt;h2 id="multi-stage-builds">Multi-stage builds&lt;/h2>
&lt;p>The next tactic you are likely to encounter when searching for ways to reduce Docker image sizes is multi-stage 🏗 builds. This tactic, &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/">recommended by Docker and many in the Docker community&lt;/a>, is essentially building the image twice. The first set of commands builds your base application image, all things included. The second set of commands builds an image off of that base image, taking only what&amp;rsquo;s needed and leaving out anything that&amp;rsquo;s not.&lt;/p>
&lt;p>With a multi-stage build, our &lt;code>Dockerfile&lt;/code> would look like this. Notice the two &lt;code>FROM&lt;/code> statements. The first builds the application image; the second copies the necessary files from that image into the second, more production-ready version.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.2.0-alpine as builder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> package*.json ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">RUN&lt;/span> npm ci
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> app.js ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.2.0-alpine&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> --from=builder /usr/src/app .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">EXPOSE&lt;/span>&lt;span style="color:#87ceeb"> 3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">USER&lt;/span>&lt;span style="color:#87ceeb"> node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">CMD&lt;/span> [&lt;span style="color:#87ceeb">&amp;#34;node&amp;#34;&lt;/span>,&lt;span style="color:#87ceeb">&amp;#34;app.js&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pros-dev-and-prod-images-can-be-built-separately">Pros: Dev and Prod images can be built separately&lt;/h3>
&lt;p>When combined with &lt;a href="https://docs.docker.com/compose/">Docker Compose&lt;/a>, this approach gives developers a flexible development environment while reducing bloat in the production images. You can simply use your initial image for dev/test and the final version for production. Multi-stage builds work especially well for Go containers, significantly reducing image size, but also work well for static Node.js and React-type applications.&lt;/p>
&lt;h3 id="cons-added-complexity-use-case-specific">Cons: Added complexity; use-case specific&lt;/h3>
&lt;p>Multi-stage builds are still relatively new 🌱 on the scene. For most developers still new to containers, knowing what to copy over to the final production image and what to leave behind is a major barrier to entry. Further, this pattern can run into challenges.&lt;/p>
&lt;p>Since we&amp;rsquo;re already using an Alpine image, the size savings are relatively minor for our &amp;ldquo;Hello World&amp;rdquo; example. You&amp;rsquo;d expect to see greater gains in a full-blown React or Vue application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cotw-node-multistage latest 52bc33d14a87 3 minutes ago 114MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cotw-node-alpine latest 2cc7b4a7b09c 4 days ago 114MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cotw-node latest 873fb9fca53a 7 days ago 856MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="development-tools-and-distroless">Development tools and Distroless&lt;/h2>
&lt;p>There are several tools - and new ones emerging every day - that look to bypass or automate &lt;code>Dockerfile&lt;/code> authoring to make image creation easier. &lt;a href="https://buildpacks.io/">&lt;em>Buildpacks&lt;/em>&lt;/a> are the most mature of these technologies and can be used through tools like &lt;a href="https://buildpacks.io/docs/tools/pack/">Pack&lt;/a> or &lt;a href="https://www.waypointproject.io/plugins/pack">Waypoint&lt;/a>.&lt;/p>
&lt;p>There are builder options from multiple sources - Heroku, Google, and Paketo are common favourites - and each gives you a slightly different developer experience and final image when used.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ pack build cotw-node-bp-google --builder gcr.io/buildpacks/builder:v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pack build cotw-node-bp-heroku --builder heroku/buildpacks:18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pack build cotw-node-bp-pb-base --builder paketobuildpacks/builder:base
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pack build cotw-node-bp-pb-full --builder paketobuildpacks/builder:full
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pros-when-they-work-they-work">Pros: When they work, they work&lt;/h3>
&lt;p>In certain instances, Buildpacks can take the pain out of &lt;code>Dockerfile&lt;/code> authoring and just create container images of your application with no fuss. The pack tool is looking for &amp;ldquo;app-like&amp;rdquo; files in your source directory, and automatically figuring out what kind of application is there and how to containerize it. In the case of our Node sample, it sees &lt;code>package.json&lt;/code> and correctly assumes we have a Node.js application.&lt;/p>
&lt;h3 id="cons-when-they-dont">Cons: When they don&amp;rsquo;t…&lt;/h3>
&lt;p>Given the relative newness of this approach for Docker containers, there are a lot of gotchas with Buildpacks. Non-standard applications or operating systems can struggle, and we&amp;rsquo;ve had issues running them successfully on the new Silicon Macbook Pros. The resulting images vary a lot - we saw a range of 200MB to 800MB in our examples - and the results tend to be lower than what you&amp;rsquo;d get with other techniques.&lt;/p>
&lt;h2 id="automate-it-with-slimtoolkit">Automate it with SlimToolKit&lt;/h2>
&lt;p>The &lt;a href="https://slimtoolkit.org/">SlimToolKit&lt;/a> (&lt;em>formerly DockerSlim&lt;/em>) open-source project was created by &lt;a href="https://slim.ai">Slim.AI&lt;/a> CTO &lt;a href="https://twitter.com/kcqon">Kyle Quest&lt;/a> in 2015 as a way to automate container optimisation. Simply download and run &lt;code>slim build &amp;lt;myimage&amp;gt;&lt;/code> and SlimToolKit will examine the image, rebuild it with only the required dependencies, and give you a new image that can be run just like the original.&lt;/p>
&lt;h3 id="pros-its-automatic">Pros: It&amp;rsquo;s automatic&lt;/h3>
&lt;p>SlimToolKit means you can work with whatever base image you&amp;rsquo;d like (say, Ubuntu or Debian) and let SlimToolKit worry about removing unnecessary tools and files en route to production. The best part is that SlimToolKit can be used alongside any of these other techniques. Once tested, it can be integrated into your CI/CD pipeline for automatic container minification, and the reduction in size leads to faster build times and better security.&lt;/p>
&lt;h3 id="cons-steep-learning-curve">Cons: Steep learning curve&lt;/h3>
&lt;p>As with any open-source software, SlimToolKit can take some time to get working, especially for non-trivial applications. It works best for web-style applications, micro-services and APIs that have defined HTTP/HTTPS ports which the sensor can find and use to observe the container internals.&lt;/p>
&lt;p>For best results, spend some time getting to know the various command flags available to tune your image, and &lt;a href="https://github.com/slimtoolkit/examples">take a look at the examples for whatever framework you&amp;rsquo;re using&lt;/a>.&lt;/p>
&lt;h2 id="connecting-with-slimtoolkit">Connecting with SlimToolKit&lt;/h2>
&lt;p>There&amp;rsquo;s an &lt;a href="https://discord.gg/uBttmfyYNB">active Slim.AI Discord channel&lt;/a> full of experts who can help you triage issues as they arise.&lt;/p></description><summary>Advanced techniques for production-ready container best practice</summary></item><item><title>Creating Production-Ready Containers - The Basics</title><link>https://wimpysworld.com/posts/creating-production-ready-containers-the-basics/</link><pubDate>Thu, 03 Jun 2021 12:18:15 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/creating-production-ready-containers-the-basics/</guid><description>&lt;p>So you&amp;rsquo;ve coded an awesome app and you are ready to deploy it to the cloud. You&amp;rsquo;ve heard a lot about &lt;a href="https://www.docker.com/">Docker&lt;/a> and completed a few online tutorials to containerise your app. All set, right? But what do you need to know if you&amp;rsquo;re going to move that app to a production environment on the public Internet? What if you&amp;rsquo;re using it for your job and need to pass security scans and DevOps checks?&lt;/p>
&lt;p>In this series, I introduce some basic concepts for making production-ready containers. I also introduce the concept of &amp;ldquo;slimming&amp;rdquo; a container. &lt;strong>Slimming&lt;/strong> refers to both optimising and minifying your Docker containers, reducing them in size by up to 80-percent while also making them more secure by decreasing the attack surface. Slimming your container is also a great way to implement &lt;a href="https://www.slim.ai/blog/why-dont-we-practice-container-best-practices">container best practices&lt;/a> without re-engineering your entire workflow.&lt;/p>
&lt;p>There are many ways to slim a container, from basic security to fully automated open-source tools like &lt;a href="https://slimtoolkit.org/">SlimToolKit&lt;/a> (formerly &lt;a href="https://dockersl.im/">DockerSlim&lt;/a>). &lt;em>Full disclosure&lt;/em>: I used work for &lt;a href="https://slim.ai">Slim.AI&lt;/a>, a company founded on the SlimToolKit open source project. Let&amp;rsquo;s look at some of the common ways developers create production-ready container images today.&lt;/p>
&lt;p>I&amp;rsquo;ll explore each of these in a separate article using a simple &amp;ldquo;Hello World&amp;rdquo; Node.js example that can be found in many online tutorials.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">const&lt;/span> express = require(&lt;span style="color:#87ceeb">&amp;#39;express&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">const&lt;/span> app = express()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">const&lt;/span> port = &lt;span style="color:#f60">3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.get(&lt;span style="color:#87ceeb">&amp;#39;/&amp;#39;&lt;/span>, (req, res) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res.send(&lt;span style="color:#87ceeb">&amp;#39;Hello World!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.listen(port, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#87ceeb">`Example app listening at http://localhost:&lt;/span>&lt;span style="color:#87ceeb">${&lt;/span>port&lt;span style="color:#87ceeb">}&lt;/span>&lt;span style="color:#87ceeb">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s get started by simply improving your &lt;code>Dockerfile&lt;/code> to build a better Docker image.&lt;/p>
&lt;h2 id="creating-a-better-dockerfile">Creating a Better Dockerfile&lt;/h2>
&lt;p>Most &lt;code>Dockerfile&lt;/code> examples you&amp;rsquo;ll find are not &amp;ldquo;production ready&amp;rdquo; and they aren&amp;rsquo;t meant to be. They are for instructional purposes to help developers successfully build an image. But when one gets into production scenarios, there are several &amp;ldquo;good-to-know&amp;rdquo; and a few &amp;ldquo;have-to-know&amp;rdquo; techniques that will improve build times, security, and reliability.&lt;/p>
&lt;p>Let&amp;rsquo;s look at a typical example that you might run into if you&amp;rsquo;re a Node.js developer looking to get &amp;ldquo;Hello World&amp;rdquo; running with Docker. I won&amp;rsquo;t go through building an actual app - there are a lot of great examples out there to show you how to do this - but rather focus on what to do if you were going to ship this to production.&lt;/p>
&lt;p>The typical &lt;code>Dockerfile&lt;/code> in a &amp;ldquo;Hello World&amp;rdquo; example might look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> package*.json app.js ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">RUN&lt;/span> npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">EXPOSE&lt;/span>&lt;span style="color:#87ceeb"> 3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">CMD&lt;/span> [&lt;span style="color:#87ceeb">&amp;#34;node&amp;#34;&lt;/span>, &lt;span style="color:#87ceeb">&amp;#34;app.js&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It uses the latest version of the official Node.js image, sets a directory and copies your app into the container image, installs dependencies, exposes port 3000, and runs the app via &lt;code>CMD&lt;/code>.&lt;/p>
&lt;p>While this will run no problem on your local machine, and is great for learning the ropes, this approach is almost certainly going to run into issues when you ship it to production. Let&amp;rsquo;s take a look at some of these in order of severity.&lt;/p>
&lt;h3 id="major-issues">Major issues&lt;/h3>
&lt;h4 id="running-as-root">Running as Root&lt;/h4>
&lt;p>Since this example doesn&amp;rsquo;t set a &lt;code>USER&lt;/code> explicitly in the &lt;code>Dockerfile&lt;/code>, Docker runs the build and all commands as the &lt;code>root&lt;/code> user. While not an issue for local development, your friendly neighbourhood SysAdmin will tell you the myriad of issues that come with running applications as root on a server in production. And with Docker, a &lt;a href="https://medium.com/jobteaser-dev-team/docker-user-best-practices-a8d2ca5205f4">new set of attack methods&lt;/a> can arise.&lt;/p>
&lt;p>Thankfully, most major languages and frameworks have a predefined user for running applications. In Node.js, the user is just &lt;code>node&lt;/code> and can be invoked in the &lt;code>Dockerfile&lt;/code> explicitly.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> package*.json app.js ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">RUN&lt;/span> npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">USER&lt;/span>&lt;span style="color:#87ceeb"> node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">EXPOSE&lt;/span>&lt;span style="color:#87ceeb"> 3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">CMD&lt;/span> [&lt;span style="color:#87ceeb">&amp;#34;node&amp;#34;&lt;/span>, &lt;span style="color:#87ceeb">&amp;#34;app.js&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="using-latest-version">Using &lt;code>latest&lt;/code> version&lt;/h4>
&lt;p>Choosing a version number for your container is often called &lt;em>pinning&lt;/em>. While many tutorials - and even some experts - will counsel newcomers to pin their images to the &lt;code>latest&lt;/code> tag, which means you get whatever the most recently updated version is, using the &lt;code>latest&lt;/code> tag can cause issues in production.&lt;/p>
&lt;p>Containers are meant to be ephemeral, meaning they can be created, destroyed, started, stopped, and reproduced with ease and &lt;em>reliability&lt;/em>. Using the &lt;code>latest&lt;/code> tag means there isn&amp;rsquo;t a single source of truth for your container&amp;rsquo;s &amp;ldquo;bill of materials&amp;rdquo;. A new version or update of a dependency could introduce a breaking change, which may cause the build to fail somewhere in your CI/CD pipeline.&lt;/p>
&lt;p>&lt;strong>Example &lt;code>Dockerfile&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:latest&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Production &lt;code>Dockerfile&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.2.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Other tutorials I&amp;rsquo;ve seen pin only the major version. For example, using &lt;code>node:14&lt;/code>. This carries the same risks as using &lt;code>latest&lt;/code>, as minor versions can change dependencies as well.&lt;/p>
&lt;p>Now, pinning a specific major and minor version in your &lt;code>Dockerfile&lt;/code> is a trade-off decision - you&amp;rsquo;re choosing to not automatically receive security, fixes or performance improvements that come via new updates - but most DevSecOps teams prefer to employ security scanning and container management software as a way to control updates rather than dealing with the unpredictability that comes with container build failures in production CI/CD pipelines.&lt;/p>
&lt;h3 id="performance-improvements">Performance improvements&lt;/h3>
&lt;h4 id="better-layer-caching">Better layer caching&lt;/h4>
&lt;p>Docker works on the concept of &lt;em>layer caching&lt;/em>. It builds images sequentially. Layering dependencies on top of each other and only rebuilding them when something in the layer has changed.&lt;/p>
&lt;p>Layer 0 in a Docker image is often the base operating system, which rarely changes significantly; although commercial Linux vendors often publish new base images to incorporate security fixes.&lt;/p>
&lt;p>Application code, however, is highly likely to change during the software development cycle, as you iterate on features, refactor, and fix bugs. Dependencies in our core system, installed here by &lt;code>npm install&lt;/code>, change more often than the base OS, but less often than the application code.&lt;/p>
&lt;p>In our example &lt;code>Dockerfile&lt;/code>, we simply need to break the installation of the dependencies into separate instructions on their own lines.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> package*.json ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">RUN&lt;/span> npm ci
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">USER&lt;/span>&lt;span style="color:#87ceeb"> node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> app.js ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">EXPOSE&lt;/span>&lt;span style="color:#87ceeb"> 3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">CMD&lt;/span> [&lt;span style="color:#87ceeb">&amp;#34;node&amp;#34;&lt;/span>, &lt;span style="color:#87ceeb">&amp;#34;app.js&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We actually end up creating another layer by now having two &lt;code>COPY&lt;/code> commands. While adding layers is typically a no-no for build times and image sizes, the tax we pay on this optimisation is going to save us in the long run as we cycle through the QA process, since we aren&amp;rsquo;t reinstalling dependencies if we don’t have to.&lt;/p>
&lt;p>We also opt for the &lt;code>npm ci&lt;/code> command instead of &lt;code>npm install&lt;/code>, which is preferred for automated environments, such as CI/CD, and will help prevent breaking changes from dependencies. Read &lt;a href="https://docs.npmjs.com/cli/v7/commands/npm-ci">more about &lt;code>npm ci&lt;/code> here&lt;/a>.&lt;/p>
&lt;h4 id="use-entrypoint-instead-of-cmd">Use &lt;code>ENTRYPOINT&lt;/code> instead of &lt;code>CMD&lt;/code>&lt;/h4>
&lt;p>At a surface level, there isn&amp;rsquo;t a big difference between using &lt;code>ENTRYPOINT&lt;/code> with your app file versus running &lt;code>CMD&lt;/code> using the shell plus your app file. However, web- and API-type containers like Node.js applications are often running as executables in production, and there, proper signal handling - such as graceful shutdowns - are important.&lt;/p>
&lt;p>&lt;code>CMD&lt;/code> provides some flexibility for calling executables with flags or overwriting them, which is common in development. But that generally won&amp;rsquo;t be relevant to production instances and &lt;code>ENTRYPOINT&lt;/code> will likely provide better signal processing.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> package*.json ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">RUN&lt;/span> npm ci
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">USER&lt;/span>&lt;span style="color:#87ceeb"> node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> app.js ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">EXPOSE&lt;/span>&lt;span style="color:#87ceeb"> 3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">ENTRYPOINT&lt;/span> [&lt;span style="color:#87ceeb">&amp;#34;node&amp;#34;&lt;/span>, &lt;span style="color:#87ceeb">&amp;#34;app.js&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cleaning-up-cached-files">Cleaning up cached files&lt;/h3>
&lt;p>Most package managers have the ability to clean up their own cache. If you don’t do this, you&amp;rsquo;ll just be moving a bunch of unused files into your container for no reason. It might not save a lot of space depending on your application, but think of it as dropping your unused items at the charity shop &lt;em>before&lt;/em> you move rather than loading them in the moving van. It&amp;rsquo;s not a lot of effort and it&amp;rsquo;s the right thing to do. We do this by adding &lt;code>&amp;amp;&amp;amp; npm cache clean --force&lt;/code> to our &lt;code>RUN&lt;/code> instruction.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">FROM&lt;/span>&lt;span style="color:#87ceeb"> node:16.0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">WORKDIR&lt;/span>&lt;span style="color:#87ceeb"> /usr/src/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> package*.json ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">RUN&lt;/span> npm ci &amp;amp;&amp;amp; npm cache clean --force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">USER&lt;/span>&lt;span style="color:#87ceeb"> node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">COPY&lt;/span> app.js ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">EXPOSE&lt;/span>&lt;span style="color:#87ceeb"> 3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">ENTRYPOINT&lt;/span> [&lt;span style="color:#87ceeb">&amp;#34;node&amp;#34;&lt;/span>, &lt;span style="color:#87ceeb">&amp;#34;app.js&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="conclusions">Conclusions&lt;/h3>
&lt;p>Improving your &lt;code>Dockerfile&lt;/code> is the first step towards creating a slimmed and optimised container. It closes some major security loopholes that are likely to raise flags with downstream checks and adds baseline optimisations for build time and docker image size.&lt;/p>
&lt;p>If this is all you do to improve your containers prior to shipping to production, you won&amp;rsquo;t be in a bad spot, but there&amp;rsquo;s more - &lt;em>way more&lt;/em> - that you can do to optimise images. We&amp;rsquo;ll &lt;a href="https://wimpysworld.com/posts/creating-production-ready-containers-advanced-techniques/">explore those techniques in the next article&lt;/a>.&lt;/p></description><summary>Beginners guide to container best practices</summary></item><item><title>Raspberry Pi 3 Nextcloud Box running on Ubuntu Core</title><link>https://wimpysworld.com/posts/raspberry-pi-3-nextcloud-box-running-on-ubuntu-core/</link><pubDate>Tue, 13 Dec 2016 17:17:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/raspberry-pi-3-nextcloud-box-running-on-ubuntu-core/</guid><description>&lt;p>I recently bought the &lt;a href="https://nextcloud.com/box/">Nextcloud Box&lt;/a>. When
it came to setting it up I ran into a problem, I only had Raspberry Pi 3
computers available and at the time of writing the microSDHC card
provided with the Nextcloud Box only supports the Raspberry Pi 2. &lt;em>Bummer!&lt;/em>&lt;/p>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;p>This guide outlines how to use &lt;a href="https://www.ubuntu.com/core">Ubuntu Core&lt;/a>
on the &lt;a href="https://www.raspberrypi.org/">Raspberry Pi 3&lt;/a> to run &lt;a href="https://nextcloud.com/">Nextcloud&lt;/a>
provided as a &lt;a href="http://snapcraft.io">snap&lt;/a> from the Ubuntu store.&lt;/p>
&lt;p>If you&amp;rsquo;re not familiar with Ubuntu Core, here&amp;rsquo;s a quote:&lt;/p>
&lt;blockquote>
&lt;p>Ubuntu Core is a tiny, transactional version of Ubuntu for IoT devices and large container deployments. It runs a new breed of super-secure, remotely upgradeable Linux app packages known as snaps&lt;/p>
&lt;/blockquote>
&lt;p>After following this guide Ubuntu Core and any installed snaps (and
their data) will reside on the SD card and the 1TB hard disk in the
Nextcloud box will be available for file storage. This
guide explains how to:&lt;/p>
&lt;ul>
&lt;li>Install and configure Ubuntu Core 16 for the Raspberry Pi 3&lt;/li>
&lt;li>Format the 1TB hard disk in the Nextcloud Box and auto-mount it&lt;/li>
&lt;li>Install the Nextcloud snap and connect the &lt;code>removable-media&lt;/code> interface to allow access to the hard disk&lt;/li>
&lt;li>Activate and configure the Nextcloud &lt;em>External Storage&lt;/em> app so the hard disk can be used to store files&lt;/li>
&lt;li>Optional configuration of Email and HTTPS for Nextcloud&lt;/li>
&lt;/ul>
&lt;h2 id="prepare-a-microsdhc-card">Prepare a microSDHC card&lt;/h2>
&lt;p>I explained the main steps in this post but you &lt;em>really should&lt;/em> read and
follow the &lt;a href="https://developer.ubuntu.com/en/snappy/start/raspberry-pi-2/">Get started with a Raspberry Pi 2 or 3&lt;/a>
page as it fully explains how to use a desktop computer to download an
Ubuntu Core image for your Raspberry Pi 2 or 3 and copy it to an SD card
ready to boot.&lt;/p>
&lt;p>Here&amp;rsquo;s how to create an Ubuntu Core microSDHC card for the Raspberry Pi
3 using an Ubuntu desktop:&lt;/p>
&lt;ul>
&lt;li>Download &lt;a href="http://releases.ubuntu.com/ubuntu-core/16/ubuntu-core-16-pi3.img.xz">Ubuntu Core 16 image for Raspberry Pi 3&lt;/a>&lt;/li>
&lt;li>Insert the microSDHC card into your PC
&lt;ul>
&lt;li>Use &lt;a href="apt://gnome-disk-utility">GNOME Disks&lt;/a> and its &lt;em>Restore Disk Image&amp;hellip;&lt;/em> option, which &lt;strong>natively supports XZ compressed images.&lt;/strong>&lt;/li>
&lt;li>Select your SD card from the panel on the left&lt;/li>
&lt;li>Click the &amp;ldquo;burger menu&amp;rdquo; on the right and Select &lt;em>Restore Disk Image&amp;hellip;&lt;/em>&lt;/li>
&lt;li>Making sure the SD card is still selected, click the Power icon on the right.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Eject the SD card physically from your PC.&lt;/li>
&lt;/ul>
&lt;div class="text-center">&lt;img src="GNOME-Disks-Restore-Disk-Image.png" class="img-fluid" alt="GNOME Disks - Restore Disk Image" />&lt;/div>
&lt;h2 id="ubuntu-core-first-boot">Ubuntu Core first boot&lt;/h2>
&lt;p>An Ubuntu SSO account is required to setup the first user on Ubuntu Core:&lt;/p>
&lt;ul>
&lt;li>Start by creating an &lt;a href="https://login.ubuntu.com/">Ubuntu SSO account&lt;/a>&lt;/li>
&lt;li>Import an &lt;a href="https://login.ubuntu.com/ssh-keys">SSH Key into your Ubuntu SSO account&lt;/a>
&lt;ul>
&lt;li>Here are &lt;a href="https://help.ubuntu.com/community/SSH/OpenSSH/Keys">instructions to generate an SSH Key&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>You&amp;rsquo;ll need a keyboard and monitor connected to the Raspberry Pi 3 to go complete the first boot process and device configuration.&lt;/li>
&lt;/ul>
&lt;p>Insert the Ubuntu Core microSHDC into the Raspberry Pi, which should be
in the &lt;a href="https://nextcloud.com/wp-content/themes/next/assets/files/Box-Assembly-Guide.pdf?x16328">assembled Nextcloud Box&lt;/a>
with a keyboard and monitor connected. Plug in the power.&lt;/p>
&lt;ul>
&lt;li>The system will boot then become ready to configure&lt;/li>
&lt;li>The device will display the prompt &lt;em>&amp;ldquo;Press enter to configure&amp;rdquo;&lt;/em>&lt;/li>
&lt;li>Press enter then select &lt;em>&amp;ldquo;Start&amp;rdquo;&lt;/em> to begin configuring your network and an administrator account. Follow the instructions on the screen, you will be asked to configure your network and enter your Ubuntu SSO credentials&lt;/li>
&lt;li>At the end of the process, you will see your credentials to access your Ubuntu Core machine:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>This device is registered to &amp;lt;Ubuntu SSO email address&amp;gt;.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Remote access was enabled via authentication with the SSO user &amp;lt;Ubuntu SSO user name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Public SSH keys were added to the device for remote access.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="login">Login&lt;/h3>
&lt;p>Once setup is done, you can login to Ubuntu Core using ssh, from a
computer on the same network, using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh &amp;lt;Ubuntu SSO user name&amp;gt;@&amp;lt;device IP address&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The user name is your Ubuntu SSO user name.&lt;/p>
&lt;h3 id="reconfiguring-network">Reconfiguring network&lt;/h3>
&lt;p>Should you need to reconfigure the network at a later stage you can do
so with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo console-conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="prepare-1tb-hard-disk">Prepare 1TB hard disk&lt;/h2>
&lt;p>Log in to your Raspberry Pi 3 running Ubuntu Core via ssh.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh &amp;lt;Ubuntu SSO user name&amp;gt;@&amp;lt;device IP address&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="partition-and-format-the-nextcloud-box-hard-disk">Partition and format the Nextcloud Box hard disk&lt;/h3>
&lt;p>This will create a single partition formatted with the ext4 filesystem.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo fdisk /dev/sda
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Do the following to create the partition:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Command (m for help): o
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Created a new DOS disklabel with disk identifier 0x253fea38.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Command (m for help): n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Partition type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p primary (0 primary, 0 extended, 4 free)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e extended (container for logical partitions)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Select (default p): p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Partition number (1-4, default 1): 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>First sector (2048-1953458175, default 2048):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Last sector, +sectors or +size{K,M,G,T,P} (2048-1953458175, default 1953458175):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Created a new partition 1 of type &amp;#39;Linux&amp;#39; and of size 931.5 GiB.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Command (m for help): w
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now format the partition and give it the label &lt;strong>data&lt;/strong>. This label will
be used to reference it for mounting later:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mkfs.ext4 -L data /dev/sda1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="automatically-mount-the-partition">Automatically mount the partition&lt;/h3>
&lt;p>Most of the Ubuntu Core root file system is read-only, so it is not
possible to edit &lt;code>/etc/fstab&lt;/code>. Therefore we&amp;rsquo;ll use &lt;a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd&lt;/a>
to achieve that.&lt;/p>
&lt;p>Be aware of one of the &lt;code>systemd.mount&lt;/code> pitfalls:&lt;/p>
&lt;blockquote>
&lt;p>Mount units must be named after the mount point directories they control. Example: the mount point /home/lennart must be configured in a unit file home-lennart.mount.&lt;/p>
&lt;/blockquote>
&lt;p>Yes that&amp;rsquo;s right! &lt;strong>The unit filename must match the mount point path&lt;/strong>.&lt;/p>
&lt;p>Create the &lt;code>media-data.mount&lt;/code> unit:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo vi /writable/system-data/etc/systemd/system/media-data.mount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-systemd" data-lang="systemd">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description=&lt;span style="color:#87ceeb">Mount unit for data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Mount]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>What=&lt;span style="color:#87ceeb">/dev/disk/by-label/data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Where=&lt;span style="color:#87ceeb">/media/data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type=&lt;span style="color:#87ceeb">ext4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy=&lt;span style="color:#87ceeb">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reload systemd, scanning for new or changed units:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the &lt;code>media-data.mount&lt;/code> unit, which will mount the volume, and also
enable it so it will be automatically mounted on boot.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start media-data.mount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl enable media-data.mount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And just like any other unit, you can view its status using
&lt;code>systemctl status&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl status media-data.mount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="update-ubuntu-core">Update Ubuntu Core&lt;/h2>
&lt;p>Make sure Ubuntu Core is up-to-date and reboot.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo snap refresh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the reboot, make sure &lt;code>/media/data&lt;/code> is mounted. If not double
check the steps above.&lt;/p>
&lt;h2 id="install-nextcloud">Install Nextcloud&lt;/h2>
&lt;p>The Nextcloud snap uses the &lt;code>removable-media&lt;/code> interface, which grants
access to &lt;code>/media/*&lt;/code>, and requires manual connection:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo snap install nextcloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo snap connect nextcloud:removable-media core:removable-media
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Browse to the Nextcloud IP address and create the admin user account,
for example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nextcloud.local/">http://nextcloud.local/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="nextcloud-configuration">Nextcloud configuration&lt;/h2>
&lt;p>In the examples below replace &lt;code>nextcloud.local&lt;/code> with the IP address or
hostname of your Nextcloud Box and replace &lt;code>example.org&lt;/code> with your domain.&lt;/p>
&lt;h3 id="external-storage">External Storage&lt;/h3>
&lt;p>Enable the External Storge app via:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nextcloud.local/index.php/settings/apps?category=disabled#">http://nextcloud.local/index.php/settings/apps?category=disabled#&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Configure External Storage app via:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nextcloud.local/index.php/settings/admin/externalstorages">http://nextcloud.local/index.php/settings/admin/externalstorages&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Use these settings:&lt;/p>
&lt;ul>
&lt;li>Folder name: &lt;em>data&lt;/em>&lt;/li>
&lt;li>External storage: &lt;em>Local&lt;/em>&lt;/li>
&lt;li>Authentication: &lt;em>None&lt;/em>&lt;/li>
&lt;li>Configuration: &lt;code>/media/data&lt;/code>&lt;/li>
&lt;li>Available for: &lt;em>All&lt;/em>&lt;/li>
&lt;/ul>
&lt;h3 id="email">Email&lt;/h3>
&lt;p>Configure your outgoing email settings via:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nextcloud.local/index.php/settings/admin/additional">http://nextcloud.local/index.php/settings/admin/additional&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I use &lt;a href="https://sendgrid.com/">Sendgrid&lt;/a> for sending email alerts from my
servers and devices. These are the settings that work for me:&lt;/p>
&lt;ul>
&lt;li>Send mode: &lt;em>SMTP&lt;/em>&lt;/li>
&lt;li>Encryption: &lt;em>STARTTLS&lt;/em>&lt;/li>
&lt;li>From address: &lt;em>&lt;a href="mailto:nextcloud@example.org">nextcloud@example.org&lt;/a>&lt;/em>&lt;/li>
&lt;li>Authentication method: &lt;em>Plain&lt;/em>&lt;/li>
&lt;li>Authentication required: &lt;em>Yes&lt;/em>&lt;/li>
&lt;li>Server address: &lt;em>smtp.sendgrid.net:587&lt;/em>&lt;/li>
&lt;li>Username: &lt;code>apikey&lt;/code>&lt;/li>
&lt;li>Password: &lt;code>theactualapikey&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="enabling-https">Enabling HTTPS&lt;/h3>
&lt;p>It is strongly recommend that you use HTTPS if you intend to expose your
Nextcloud to the Internet.&lt;/p>
&lt;p>First do a test to see if you can install a Let&amp;rsquo;s Encrypt certificate:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nextcloud.enable-https -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Answer the questions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Have you met these requirements? (y/n) y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please enter an email address (for urgent notices or key recovery): name@example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please enter your domain name(s) (space-separated): nextcloud.example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to obtain certificates... done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Looks like you&amp;#39;re ready for HTTPS!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If everything went well, then install the certificate&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nextcloud.enable-https
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Answer the questions again:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Have you met these requirements? (y/n) y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please enter an email address (for urgent notices or key recovery): name@example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please enter your domain name(s) (space-separated): nextcloud.example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to obtain certificates... done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restarting apache... done
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If Let&amp;rsquo;s Encrypt didn&amp;rsquo;t work for you, you can always use Nextcloud with
a self-signed certificate.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nextcloud.enable-https -s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="manual-configuration-changes">Manual configuration changes&lt;/h3>
&lt;p>If you need to make any tweaks to the Nextcloud configuration file you
can edit it like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo vi /var/snap/nextcloud/current/nextcloud/config/config.php
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you have manually edited the Nextcloud configuration you may need to
restart nextcloud:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo snap disable nextcloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo snap enable nextcloud
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>So there it is, Nextcloud running on Ubuntu Core powered by a Raspberry
Pi 3. The performance is reasonable, obviously not stellar, but certainly
good enough to move some cloud services for a small family away from the
likes of Google and Dropbox. Now go and install some
&lt;a href="https://nextcloud.com/install/#install-clients">Nextcloud clients for your desktops and devices&lt;/a> :-)&lt;/p></description><summary>Creating a Pi 3 powered Nextcloud Box with Ubuntu Core</summary></item><item><title>ZNC IRC proxy</title><link>https://wimpysworld.com/posts/znc-irc-proxy/</link><pubDate>Sat, 02 Aug 2014 10:10:10 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/znc-irc-proxy/</guid><description>&lt;p>I have been using the &lt;a href="https://wimpysworld.com/posts/bip-irc-proxy/">BIP&lt;/a> IRC proxy that maintains a
persistent connection to a list of IRC channels. However, I&amp;rsquo;ve heard good things
about &lt;a href="http://znc.in">ZNC&lt;/a> and decided to give it a try.&lt;/p>
&lt;p>The purpose of an IRC proxy, or bouncer, is that you can then point your IRC
clients to them to maintain a transparent connection from multiple clients
and playback the conversations that took place while you were away.&lt;/p>
&lt;h2 id="installing-znc">Installing ZNC&lt;/h2>
&lt;p>The ZNC package for Debian Wheezy are very old, so I decide to install
from source.&lt;/p>
&lt;h3 id="install-required-packages">Install required packages&lt;/h3>
&lt;p>We first need to make sure we have all the packages required to build ZNC.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install build-essential libssl-dev libperl-dev pkg-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="compile-znc">Compile ZNC&lt;/h3>
&lt;p>Now download and compile ZNC.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget http://znc.in/releases/znc-1.4.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar zxvf znc-1.4.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd znc-1.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --with-openssl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-user">Create a user&lt;/h3>
&lt;p>Create a separate ZNC user so that ZNC does not need to run as root:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo groupadd znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo adduser --system --home /var/lib/znc --group znc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuring-znc">Configuring ZNC&lt;/h3>
&lt;p>You can use the interactive wizard to configure ZNC which really
help create the initial configuration.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo -u znc /usr/local/bin/znc --datadir=/var/lib/znc --makeconf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is a transcript of how I answered the initial configuration questions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[ .. ] Checking for list of available modules...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] Building new config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] First let&amp;#39;s start with some global settings...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] What port would you like ZNC to listen on? (1025 to 65535): 7778
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like ZNC to listen using SSL? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like ZNC to listen using both IPv4 and IPv6? (yes/no) [yes]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ .. ] Verifying the listener...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] Unable to locate pem file: [/var/lib/znc/znc.pem], creating it
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ .. ] Writing Pem file [/var/lib/znc/znc.pem]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] -- Global Modules --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +-----------+----------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | Name | Description |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +-----------+----------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | partyline | Internal channels and queries for users connected to znc |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | webadmin | Web based administration module |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +-----------+----------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] And 10 other (uncommon) modules. You can enable those later.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load global module &amp;lt;partyline&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load global module &amp;lt;webadmin&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] Now we need to set up a user...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Username (AlphaNumeric): yournick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Enter Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Confirm Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like this user to be an admin? (yes/no) [yes]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Nick [yournick]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Alt Nick [yournick_]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Ident [yournick]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Real Name [Got ZNC?]: Your Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Bind Host (optional):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Number of lines to buffer per channel [50]: 1024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like to clear channel buffers after replay? (yes/no) [yes]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Default channel modes [+stn]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] -- User Modules --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +--------------+------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | Name | Description |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +--------------+------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | chansaver | Keep config up-to-date when user joins/parts |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | controlpanel | Dynamic configuration through IRC. Allows editing only yourself if you&amp;#39;re not ZNC admin. |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | perform | Keeps a list of commands to be executed when ZNC connects to IRC. |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | webadmin | Web based administration module |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +--------------+------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] And 21 other (uncommon) modules. You can enable those later.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;chansaver&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;controlpanel&amp;gt;? (yes/no) [no]: tes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;controlpanel&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;perform&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;webadmin&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like to set up a network? (yes/no) [no]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like to set up another user? (yes/no) [no]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ .. ] Writing config [/var/lib/znc/configs/znc.conf]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]To connect to this ZNC you need to connect to it as your IRC server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]using the port that you supplied. You have to supply your login info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]as the IRC server password like this: user/network:pass.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]Try something like this in your IRC client...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]/server &amp;lt;znc_server_ip&amp;gt; +7778 flexiondotorg:&amp;lt;pass&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]And this in your browser...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]https://&amp;lt;znc_server_ip&amp;gt;:7778/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Launch ZNC now? (yes/no) [yes]: no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="running-znv-as-a-daemon">Running ZNV as a daemon&lt;/h3>
&lt;p>Here is a &lt;code>/etc/init.d/znc&lt;/code> for Debian based on this installation method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#! /bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Provides: znc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Start: $remote_fs $syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Stop: $remote_fs $syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Short-Description: ZNC IRC bouncer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Description: ZNC is an IRC bouncer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PATH&lt;/span>=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DESC&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;ZNC daemon&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">NAME&lt;/span>=znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON&lt;/span>=/usr/local/bin/&lt;span style="color:#eedd82">$NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DATADIR&lt;/span>=/var/lib/znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON_ARGS&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;--datadir=&lt;/span>&lt;span style="color:#eedd82">$DATADIR&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PIDDIR&lt;/span>=&lt;span style="color:#eedd82">$DATADIR&lt;/span>/run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PIDFILE&lt;/span>=&lt;span style="color:#eedd82">$PIDDIR&lt;/span>/&lt;span style="color:#eedd82">$NAME&lt;/span>.pid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SCRIPTNAME&lt;/span>=/etc/init.d/&lt;span style="color:#eedd82">$NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">USER&lt;/span>=znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">GROUP&lt;/span>=znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Exit if the package is not installed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ -x &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$DAEMON&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> ] || exit &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Read configuration variable file if it is present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ -r /etc/default/&lt;span style="color:#eedd82">$NAME&lt;/span> ] &amp;amp;&amp;amp; . /etc/default/&lt;span style="color:#eedd82">$NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Load the VERBOSE setting and other rcS variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. /lib/init/vars.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Define LSB log_* functions.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Depend on lsb-base (&amp;gt;= 3.2-14) to ensure that this file is present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># and status_of_proc is working.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. /lib/lsb/init-functions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Function that starts the daemon/service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do_start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 0 if daemon has been started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 1 if daemon was already running&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 2 if daemon could not be started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ ! -d &lt;span style="color:#eedd82">$PIDDIR&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir &lt;span style="color:#eedd82">$PIDDIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chown &lt;span style="color:#eedd82">$USER&lt;/span>:&lt;span style="color:#eedd82">$GROUP&lt;/span> &lt;span style="color:#eedd82">$PIDDIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --start --quiet --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --exec &lt;span style="color:#eedd82">$DAEMON&lt;/span> --test --chuid &lt;span style="color:#eedd82">$USER&lt;/span> &amp;gt; /dev/null || &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --start --quiet --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --exec &lt;span style="color:#eedd82">$DAEMON&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span> -- &lt;span style="color:#eedd82">$DAEMON_ARGS&lt;/span> &amp;gt; /dev/null || &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Function that stops the daemon/service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do_stop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 0 if daemon has been stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 1 if daemon was already stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 2 if daemon could not be stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># other if a failure occurred&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --name &lt;span style="color:#eedd82">$NAME&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">RETVAL&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$RETVAL&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> = &lt;span style="color:#f60">2&lt;/span> ] &amp;amp;&amp;amp; &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Wait for children to finish too if this is a daemon that forks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># and if the daemon is only ever run from this initscript.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># If the above conditions are not satisfied then add some other code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># that waits for the process to drop all resources that could be&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># needed by services started subsequently. A last resort is to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># sleep for some time.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec &lt;span style="color:#eedd82">$DAEMON&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> = &lt;span style="color:#f60">2&lt;/span> ] &amp;amp;&amp;amp; &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Many daemons don&amp;#39;t delete their pidfiles when they exit.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm -f &lt;span style="color:#eedd82">$PIDFILE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$RETVAL&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Function that sends a SIGHUP to the daemon/service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do_reload() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --stop --signal &lt;span style="color:#f60">1&lt;/span> --quiet --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --name &lt;span style="color:#eedd82">$NAME&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Starting &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0|1) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">0&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Stopping &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0|1) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">0&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status_of_proc -p &lt;span style="color:#eedd82">$PIDFILE&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$DAEMON&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &amp;amp;&amp;amp; exit &lt;span style="color:#f60">0&lt;/span> || exit &lt;span style="color:#eedd82">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Reloading &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_end_msg &lt;span style="color:#eedd82">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Restarting &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0|1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0) log_end_msg &lt;span style="color:#f60">0&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1) log_end_msg &lt;span style="color:#f60">1&lt;/span> ;; &lt;span style="color:#0f0"># Old process is still running&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *) log_end_msg &lt;span style="color:#f60">1&lt;/span> ;; &lt;span style="color:#0f0"># Failed to start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Failed to stop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_end_msg &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Usage: &lt;/span>&lt;span style="color:#eedd82">$SCRIPTNAME&lt;/span>&lt;span style="color:#87ceeb"> {status|start|stop|reload|restart}&amp;#34;&lt;/span> &amp;gt;&amp;amp;&lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#f60">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you&amp;rsquo;ve created the script, you must give it the proper permissions to run
and add the script to the startup/shutdown sequence.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">755&lt;/span> /etc/init.d/znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo update-rc.d znc defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service znc start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Stop the service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service znc stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="web-configuration">Web configuration&lt;/h3>
&lt;p>I love that ZNC comes bundled with a web based configuration tool. Just
login to &lt;a href="https://znc.example.org:7778">https://znc.example.org:7778&lt;/a> to add users, add networks to
users and to add channels to networks. Really simple stuff.&lt;/p>
&lt;h3 id="irc-client-configuration">IRC client configuration&lt;/h3>
&lt;p>I use &lt;a href="http://hexchat.github.io/">HexChat&lt;/a>, but other IRC clients are available.
Just add a new Network to HexChat for your ZNC server, use the username,
suffixed with the network name you configured in ZNC, and your ZNC password.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I much prefer ZNC to BIP.&lt;/p>
&lt;ul>
&lt;li>I really like the web and IRC configuration but I still have the option to
configure the config files directly.&lt;/li>
&lt;li>ZNC is far less cryptic with regard to setting up IRC client connections and
user management is much better implemented.&lt;/li>
&lt;li>When I add a new channel to an existing network in ZNC it automatically appears
in my connected clients without the need to restart anything.&lt;/li>
&lt;li>ZNC&amp;rsquo;s IRC backlogs don&amp;rsquo;t have the confusing double time stamps present in BIP
and ZNC is much faster re-establishing connections to my multiple IRC network and
channels.&lt;/li>
&lt;li>Most importantly, ZNC has been far more stable than BIP.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>References&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://wiki.znc.in/Installation">http://wiki.znc.in/Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.znc.in/Running_ZNC_as_a_system_daemon">http://wiki.znc.in/Running_ZNC_as_a_system_daemon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-znc-an-irc-bouncer-on-an-ubuntu-vps">https://www.digitalocean.com/community/tutorials/how-to-install-znc-an-irc-bouncer-on-an-ubuntu-vps&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raymii.org/s/tutorials/Install_the_Lastest_ZNC_from_Source_in_Ubuntu.html">https://raymii.org/s/tutorials/Install_the_Lastest_ZNC_from_Source_in_Ubuntu.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shellfish.io/tutorial/1/how-to-install-znc-on-debian-7/">https://shellfish.io/tutorial/1/how-to-install-znc-on-debian-7/&lt;/a>&lt;/li>
&lt;/ul></description><summary>How I install the ZNC IRC bouncer on Debian Wheezy</summary></item><item><title>Monitorix on Debian</title><link>https://wimpysworld.com/posts/monitorix-on-debian/</link><pubDate>Sat, 19 Jul 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/monitorix-on-debian/</guid><description>&lt;p>I have a few Debian servers that run at home and on VPSs. I wanted to add some
basic systems monitoring to them, but didn&amp;rsquo;t want anything too complicated to
look after. I found &lt;a href="http://www.monitorix.org/">Monitorix&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Monitorix is a free, open source, lightweight system monitoring tool
designed to monitor as many services and system resources as possible.
It has been created to be used under production Linux/UNIX servers,
but due to its simplicity and small size can be used on embedded devices
as well.&lt;/p>
&lt;/blockquote>
&lt;h1 id="install-monitorix">Install Monitorix&lt;/h1>
&lt;p>This install has been tested on Debian Squeeze and Wheezy. First install
the dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install rrdtool perl libwww-perl libmailtools-perl &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>libmime-lite-perl librrds-perl libdbi-perl libxml-simple-perl &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>libhttp-server-simple-perl libconfig-general-perl libio-socket-ssl-perl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now Monitorix itself.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -c &lt;span style="color:#87ceeb">&amp;#34;http://apt.izzysoft.de/ubuntu/dists/generic/index.php?file=monitorix_3.5.1-izzy1_all.deb&amp;#34;&lt;/span> -O monitorix_3.5.1-izzy1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i monitorix_3.5.1-izzy1_all.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point Monitorix is installed and running. Point your browser to
&lt;code>http://example.org:8080/monitorix/&lt;/code> and enjoy!&lt;/p>
&lt;h1 id="configuring-monitorix">Configuring Monitorix&lt;/h1>
&lt;p>Everything in &lt;code>/etc/monitorix/monitorix.conf&lt;/code> is comprehensively documented,
just get tweaking.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.monitorix.org/documentation.html">http://www.monitorix.org/documentation.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Each time you update the configuration Monitorix will require a restart.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service monitorix restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-status">nginx status&lt;/h2>
&lt;p>If you run &lt;a href="http://wiki.nginx.org/Main">nginx&lt;/a> then you&amp;rsquo;ll want to drop the
following into &lt;code>/etc/nginx/conf.d/status.conf&lt;/code> so that Monitorix can monitor
nginx.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">listen&lt;/span> localhost:&lt;span style="color:#f60">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">location&lt;/span> &lt;span style="color:#87ceeb">/nginx_status&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">stub_status&lt;/span> &lt;span style="color:#7fffd4">on&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">access_log&lt;/span> &lt;span style="color:#7fffd4">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">allow&lt;/span> &lt;span style="color:#f60">127&lt;/span>&lt;span style="color:#87ceeb">.0.0.1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">deny&lt;/span> &lt;span style="color:#87ceeb">all&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.monitorix.org/doc-debian.html">http://www.monitorix.org/doc-debian.html&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up Monitorix on Debian Squeeze &amp;amp; Wheezy</summary></item><item><title>subSonic on Debian</title><link>https://wimpysworld.com/posts/subsonic-on-debian/</link><pubDate>Sat, 12 Jul 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/subsonic-on-debian/</guid><description>&lt;p>Last year I removed all my music from Google Play Music and created my own
&lt;a href="http://www.subsonic.org/">subSonic&lt;/a> server. I really like subSonic but don&amp;rsquo;t
use it a huge amount, mostly for syncing some music to my phone prior to going
on holiday or business. Therefore, I&amp;rsquo;ve made a single one time donation to the
project rather than the ongoing monthly usage fee.&lt;/p>
&lt;h1 id="installing-subsonic-on-debian">Installing subSonic on Debian&lt;/h1>
&lt;p>This is how I install subSonic on Debian Wheezy.&lt;/p>
&lt;h2 id="install-tomcat">Install Tomcat.&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install tomcat7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-subsonic">Install subSonic.&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install ffmpeg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir /var/subsonic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown tomcat7: /var/subsonic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo wget -c https://github.com/KHresearch/subsonic/releases/download/v4.9-kang/subsonic.war
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo cp subsonic.war /var/lib/tomcat7/webapps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart Tomcat.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service tomcat7 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Login to subSonic by visiting &lt;a href="http://server.example.org:8080/subsonic">http://server.example.org:8080/subsonic&lt;/a> and
login with the credentials &lt;code>admin&lt;/code> and &lt;code>admin&lt;/code>. Make sure you change the
password straight away.&lt;/p>
&lt;p>Right, that is it. You can stop here and start filling subSonic with your
music.&lt;/p>
&lt;h1 id="subsonic-clients">subSonic clients&lt;/h1>
&lt;p>On the rare occasions that I listen to music via subSonic I use
&lt;a href="https://play.google.com/store/apps/details?id=com.thejoshwa.ultrasonic.androidapp">UltraSonic&lt;/a>
for Android and &lt;a href="https://www.clementine-player.org/">Clementine&lt;/a> on my Arch Linux
workstations.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.subsonic.org/pages/installation.jsp">http://www.subsonic.org/pages/installation.jsp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/KHresearch/subsonic/">https://github.com/KHresearch/subsonic/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up subSonic music streaming on Debian</summary></item><item><title>Headless cloudprint server on Debian for MFC-7360N</title><link>https://wimpysworld.com/posts/headless-cloudprint-server-on-debian-for-mfc-7360n/</link><pubDate>Sat, 05 Jul 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/headless-cloudprint-server-on-debian-for-mfc-7360n/</guid><description>&lt;p>I have a Brother MFC-7360N printer at home and there is also one at work.
I wanted to to get &lt;a href="http://www.google.co.uk/cloudprint/learn/">Cloudprint&lt;/a>
working with Android devices rather than use the Android app Brother
provide, which is great when it works but deeply frustrating (for my wife)
when it doesn&amp;rsquo;t.&lt;/p>
&lt;p>What I describe below is how to Cloudprint enable &amp;ldquo;Classic printers&amp;rdquo; using
Debian Wheezy.&lt;/p>
&lt;h1 id="install-cups">Install CUPS&lt;/h1>
&lt;p>Install CUPS and the Cloudprint requirements.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install cups python-cups python-daemon python-pkg-resources
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="install-the-mfc-7360n-drivers">Install the MFC-7360N Drivers&lt;/h1>
&lt;p>I used the URL below to access the &lt;code>.deb&lt;/code> files required.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://support.brother.com/g/b/downloadlist.aspx?c=gb&amp;amp;lang=en&amp;amp;prod=mfc7360n_all&amp;amp;os=128">http://support.brother.com/g/b/downloadlist.aspx?c=gb&amp;amp;lang=en&amp;amp;prod=mfc7360n_all&amp;amp;os=128&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re running a 64-bit Debian, then install &lt;code>ia32-libs&lt;/code> first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ia32-libs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Download and install the MFC-7360N drivers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -c http://download.brother.com/welcome/dlf006237/mfc7360nlpr-2.1.0-1.i386.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c http://download.brother.com/welcome/dlf006239/cupswrapperMFC7360N-2.0.4-2.i386.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i --force-all mfc7360nlpr-2.1.0-1.i386.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i --force-all cupswrapperMFC7360N-2.0.4-2.i386.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-cups">Configure CUPS&lt;/h2>
&lt;p>Edit the CUPS configuration file commonly located in &lt;code>/etc/cups/cupsd.conf&lt;/code>
and make the section that looks like this&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># Only listen for connections from the local machine.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Listen localhost:631
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Listen /var/run/cups/cups.sock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;is changed to look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># Listen on all interfaces
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Port 631
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Listen /var/run/cups/cups.sock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Modify the Apache specific directives to allow connections from everywhere as
well. Find the follow section in &lt;code>/etc/cups/cupsd.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-apacheconf" data-lang="apacheconf">&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the server...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the admin pages...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the configuration files...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin/conf&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthType Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Require &lt;span style="color:#f00">user&lt;/span> @SYSTEM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add &lt;code>Allow All&lt;/code> after each &lt;code>Order allow,deny&lt;/code> so it looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-apacheconf" data-lang="apacheconf">&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the server...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Allow &lt;span style="color:#f00">All&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the admin pages...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Allow &lt;span style="color:#f00">All&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the configuration files...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin/conf&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthType Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Require &lt;span style="color:#f00">user&lt;/span> @SYSTEM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Allow &lt;span style="color:#f00">All&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-the-mfc-7360n-to-cups">Add the MFC-7360N to CUPS&lt;/h2>
&lt;p>If your MFC-7360N is connected to your server via USB then you should be
all set. Login to the CUPS administration interface on &lt;a href="http://yourserver:631">http://yourserver:631&lt;/a>
and modify the MFC7360N printer (if one was created when the drivers where installed)
then &lt;strong>make sure you can print a test page via CUPS before proceeding.&lt;/strong>&lt;/p>
&lt;h1 id="install-cloudprint-and-cloudprint-service">Install Cloudprint and Cloudprint service&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -c http://davesteele.github.io/cloudprint-service/deb/cloudprint_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c http://davesteele.github.io/cloudprint-service/deb/cloudprint-service_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudprint_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudprint-service_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="authenticate">Authenticate&lt;/h2>
&lt;p>Google accounts with 2 step verification enabled need to use an
application-specific password.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.google.com/support/accounts/bin/static.py?page=guide.cs&amp;amp;guide=1056283&amp;amp;topic=1056286">http://www.google.com/support/accounts/bin/static.py?page=guide.cs&amp;amp;guide=1056283&amp;amp;topic=1056286&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Authenticate &lt;code>cloudprintd&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service cloudprintd login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see something like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Accounts with 2 factor authentication require an application-specific password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Google username: you@example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added Printer MFC7360N
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the Cloudprint daemon.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service cloudprintd start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If everything is working correctly you should see your printer the
following page:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.google.com/cloudprint#printers">https://www.google.com/cloudprint#printers&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="printing-from-mobile-devices">Printing from mobile devices&lt;/h1>
&lt;h2 id="android">Android&lt;/h2>
&lt;p>Add the &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.cloudprint">Google Cloud Print&lt;/a>
app to Android devices and you&amp;rsquo;ll be able to configure your printer
preferences and print from Android..&lt;/p>
&lt;h2 id="chrome-and-chromium">Chrome and Chromium&lt;/h2>
&lt;p>When printing from within Google Chrome and Chromium you can now select
Cloudprint as the destination and choose your printer.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/armooo/cloudprint">https://github.com/armooo/cloudprint&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://davesteele.github.io/cloudprint-service/">http://davesteele.github.io/cloudprint-service/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/davesteele/cloudprint-service">https://github.com/davesteele/cloudprint-service&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://injustfiveminutes.com/2013/11/07/remote-access-to-cups-admin-inter/">http://injustfiveminutes.com/2013/11/07/remote-access-to-cups-admin-inter/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ubuntuforums.org/showthread.php?t=1794179">http://ubuntuforums.org/showthread.php?t=1794179&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://support.google.com/a/answer/2906017?hl=en">https://support.google.com/a/answer/2906017?hl=en&lt;/a>&lt;/li>
&lt;/ul></description><summary>Create a headless Cloudprint server on Debian for MFC-7360N</summary></item><item><title>Integrating Dropbox photo syncing with Open Media Vault and Plex</title><link>https://wimpysworld.com/posts/integrating-dropbox-photo-syncing-with-open-media-vault-and-plex/</link><pubDate>Sat, 28 Jun 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/integrating-dropbox-photo-syncing-with-open-media-vault-and-plex/</guid><description>&lt;p>&lt;strong>This how-to was updated for Open Media Vault 2.x and 3.x on 22nd August 2016.&lt;/strong>&lt;/p>
&lt;p>I&amp;rsquo;ve installed &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a>
on a &lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>
and use it as media server for the house. OpenMediaVault (OMV) is a network
attached storage (NAS) solution based on &lt;a href="http://www.debian.org">Debian&lt;/a> Linux.&lt;/p>
&lt;p>I use a free Dropbox account to sync photos from mine and my wife&amp;rsquo;s Android
phones and wanted to automate to import of these photo upload into Plex, which
is also running on Open Media Vault.&lt;/p>
&lt;h1 id="installing-dropbox-on-open-media-vault">Installing Dropbox on Open Media Vault&lt;/h1>
&lt;p>I looked for a Dropbox Plugin for Open Media Vault and found this:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/lordldx/openmediavault-dropbox">https://github.com/lordldx/openmediavault-dropbox&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Sadly, at the time of writing, it is unfinished and I didn&amp;rsquo;t have the time to
go and learn the Open Media Vault plugin API.&lt;/p>
&lt;p>The Open Media Vault forum does include a &lt;a href="http://forums.openmediavault.org/viewtopic.php?f=13&amp;amp;t=70">Dropbox HOW-TO&lt;/a>
which is very similar to how &lt;a href="https://wimpysworld.com/posts/dropbox-is-my-nikola-publish-button/">I&amp;rsquo;ve run Dropbox on headless Linux servers&lt;/a>
in the past. So, I decided to adapt my existing notes to Open Media Vault.&lt;/p>
&lt;h2 id="create-a-dropbox-share">Create a Dropbox Share&lt;/h2>
&lt;p>Create a Dropbox share via the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>Access Right Management -&amp;gt; Shared Folders&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>I gave my the name &amp;ldquo;Dropbox&amp;rdquo;. I know, very original.&lt;/p>
&lt;h2 id="installing-dropbox-on-a-headless-server">Installing Dropbox on a headless server&lt;/h2>
&lt;p>Download and extract the latest Dropbox stable release.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd ~ &amp;amp;&amp;amp; wget -O - &lt;span style="color:#87ceeb">&amp;#34;https://www.dropbox.com/download?plat=lnx.x86_64&amp;#34;&lt;/span> | tar xzf -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -Rv &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">USER&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>: ~/.dropbox-dist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ln -s ~/.dropbox-dist/dropboxd /usr/local/bin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>dropboxd&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~/.dropbox-dist/dropboxd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see output like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>This client is not linked to any account... Please visit https://www.dropbox.com/cli_link?host_id=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx to link this machine.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visit the URL, login with your Dropbox account and link the account. You
should see the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Client successfully linked, Welcome Web!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>dropboxd&lt;/code> will now create a &lt;code>~/Dropbox&lt;/code> folder and start synchronizing. Stop
&lt;code>dropboxd&lt;/code> with CTRL+C.&lt;/p>
&lt;h2 id="symlink-the-dropbox-share">Symlink the Dropbox share&lt;/h2>
&lt;p>Login to the OMV server as &lt;code>root&lt;/code> and sym-link the Dropbox share you created
earlier to the Dropbox directory in the root home directory.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mv ~/Dropbox ~/Dropbox-old
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s /media/&amp;lt;UUID&amp;gt;/Dropbox ~/Dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rsync -a -W --progress ~/Dropbox-old/ ~/Dropbox/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="initd---open-media-vault-2x">init.d - Open Media Vault 2.x&lt;/h3>
&lt;p>If you are using Open Media Vault 2.x (based on Debian wheezy) the
you&amp;rsquo;ll need to create an init script.&lt;/p>
&lt;p>To run Dropbox as daemon with init.d. Create &lt;code>/etc/init.d/dropbox&lt;/code> with the
following content.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Provides: dropbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Start: $local_fs $remote_fs $network $syslog $named&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Stop: $local_fs $remote_fs $network $syslog $named&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># X-Interactive: false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Short-Description: dropbox service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DROPBOX_USERS&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;user_a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON&lt;/span>=.dropbox-dist/dropboxd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Starting dropbox...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>getent passwd &lt;span style="color:#eedd82">$dbuser&lt;/span> | cut -d: -f6&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -x &lt;span style="color:#eedd82">$DAEMON&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOME&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HOMEDIR&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> start-stop-daemon -b -o -c &lt;span style="color:#eedd82">$dbuser&lt;/span> -S -u &lt;span style="color:#eedd82">$dbuser&lt;/span> -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stop() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Stopping dropbox...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>getent passwd &lt;span style="color:#eedd82">$dbuser&lt;/span> | cut -d: -f6&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon -o -c &lt;span style="color:#eedd82">$dbuser&lt;/span> -K -u &lt;span style="color:#eedd82">$dbuser&lt;/span> -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">dbpid&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>pgrep -u &lt;span style="color:#eedd82">$dbuser&lt;/span> dropbox&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -z &lt;span style="color:#eedd82">$dbpid&lt;/span> ] ; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;dropboxd for USER &lt;/span>&lt;span style="color:#eedd82">$dbuser&lt;/span>&lt;span style="color:#87ceeb">: not running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;dropboxd for USER &lt;/span>&lt;span style="color:#eedd82">$dbuser&lt;/span>&lt;span style="color:#87ceeb">: running (pid &lt;/span>&lt;span style="color:#eedd82">$dbpid&lt;/span>&lt;span style="color:#87ceeb">)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart|reload|force-reload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Usage: /etc/init.d/dropbox {start|stop|reload|force-reload|restart|status}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the init.d script.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod +x /etc/init.d/dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo update-rc.d dropbox defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="starting-and-stopping-the-dropbox-daemon">Starting and Stopping the Dropbox daemon&lt;/h2>
&lt;p>Use &lt;code>/etc/init.d/dropbox start&lt;/code> to start and &lt;code>/etc/init.d/dropbox stop&lt;/code> to stop.&lt;/p>
&lt;h3 id="systemd---openmediavault-3x">systemd - OpenMediaVault 3.x&lt;/h3>
&lt;p>If you are using Open Media Vault 3.x (based on Debian jessie) then
you&amp;rsquo;ll need to create a systemd unit. Create the systemd service file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /lib/systemd/system/dropbox.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-systemd" data-lang="systemd">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description=&lt;span style="color:#87ceeb">Dropbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After=&lt;span style="color:#87ceeb">local-fs.target network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type=&lt;span style="color:#87ceeb">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WorkingDirectory=&lt;span style="color:#87ceeb">%h/.dropbox-dist&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart=&lt;span style="color:#87ceeb">/usr/local/bin/dropboxd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecReload=&lt;span style="color:#87ceeb">/bin/kill -HUP $MAINPID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KillMode=&lt;span style="color:#87ceeb">process&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart=&lt;span style="color:#87ceeb">on-failure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User=&lt;span style="color:#87ceeb">%I&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy=&lt;span style="color:#87ceeb">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the dropbox service for a given user.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl enable dropbox@user_a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start dropbox@user_a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dropbox-client">Dropbox client&lt;/h2>
&lt;p>It is recommended to download the official Dropbox client to configure
Dropbox and get its status.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget &lt;span style="color:#87ceeb">&amp;#34;http://www.dropbox.com/download?dl=packages/dropbox.py&amp;#34;&lt;/span> -O dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">755&lt;/span> dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mv dropbox /usr/local/bin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can check on Dropbox status by running the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dropbox status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For usage instructions run &lt;code>dropbox help&lt;/code>.&lt;/p>
&lt;h1 id="photo-importing">Photo importing&lt;/h1>
&lt;p>So, the reason for doing all this is that I now have a Dropbox instance
running on my home file server and everyday it runs a script, that I wrote,
to automatically import new photos into a directory that Plex monitors.
I&amp;rsquo;ll post details about my photo sorting script, &lt;a href="https://github.com/flexiondotorg/Phort">Phort&lt;/a>,
at a later date.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.dropboxwiki.com/Text_Based_Linux_Install">http://www.dropboxwiki.com/Text_Based_Linux_Install&lt;/a>&lt;/li>
&lt;/ul></description><summary>Integrating Dropbox on a headless Open Media Vault server.</summary></item><item><title>OpenMediaVault on Debian</title><link>https://wimpysworld.com/posts/openmediavault-on-debian/</link><pubDate>Sun, 22 Jun 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/openmediavault-on-debian/</guid><description>&lt;p>At the time of writing &lt;a href="http://www.openmediavault.org/">OpenMediaVault&lt;/a> 0.6 is
pre-release. But it is possible to install OpenMediaVault on Debian Wheezy in
order to get some testing done.&lt;/p>
&lt;p>Install Debian Wheezy on your target VM or test server. Go with the defaults
until the &amp;lsquo;Software selection&amp;rsquo; dialogue. Make sure everything is unselected, like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[ ] Debian desktop environment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Web server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Print server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] SQL database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] DNS Server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] File server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Mail server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] SSH server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Laptop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Standard system utilities
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the install is complete, reboot and login to the new Debian system
as &lt;code>root&lt;/code>.&lt;/p>
&lt;p>Update the repository sources and add the &lt;code>contrib&lt;/code> and &lt;code>non-free&lt;/code>
repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nano /etc/apt/sources.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It should look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://ftp.uk.debian.org/debian/ wheezy main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://ftp.uk.debian.org/debian/ wheezy main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://security.debian.org/ wheezy/updates main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://security.debian.org/ wheezy/updates main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># wheezy-updates, previously known as &amp;#39;volatile&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://ftp.uk.debian.org/debian/ wheezy-updates main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://ftp.uk.debian.org/debian/ wheezy-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now add the OpenMediaVault repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;deb http://packages.openmediavault.org/public kralizec main&amp;#34;&lt;/span> &amp;gt; /etc/apt/sources.list.d/openmediavault.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the OpenMediaVault repository key and Postfix.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install openmediavault-keyring postfix
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>When the &amp;lsquo;Postfix Configuration&amp;rsquo; dialogue is displayed choose &lt;code>No configuration&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Update again and install OpenMediaVault.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install openmediavault
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>When the &amp;lsquo;Configuring mdadm&amp;rsquo; dialogue is displayed enter &lt;code>none&lt;/code>.&lt;/li>
&lt;li>Do you want to start MD arrays automatically? &lt;code>YES&lt;/code>&lt;/li>
&lt;li>When the &amp;lsquo;ProFTPD configuration&amp;rsquo; dialogue is displayed choose
&lt;code>standalone&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Initialise OpenMediaVault and reboot.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>omv-initsystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the reboot you should be able to connect to the OpenMediaVault WebUI and
login as &lt;code>admin&lt;/code> with the password of &lt;code>openmediavault&lt;/code>. That&amp;rsquo;s it. Get testing.&lt;/p></description><summary>Manually installing OpenMediaVault on Debian Wheezy</summary></item><item><title>Setting up BitSync on Debian</title><link>https://wimpysworld.com/posts/setting-up-bitsync-on-debian/</link><pubDate>Sat, 21 Jun 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/setting-up-bitsync-on-debian/</guid><description>&lt;p>I&amp;rsquo;ve replaced Dropbox with &lt;a href="http://www.bittorrent.com/sync">BitTorrent Sync&lt;/a>.
In order to do this I&amp;rsquo;ve have &lt;code>btsync&lt;/code> running on a VPS (2CPU, 2GB, 400GB), my
home server and assorted Arch Linux workstations.&lt;/p>
&lt;p>I had a couple of reasons for migrating away from Dropbox.&lt;/p>
&lt;ul>
&lt;li>Dropbox was costing $100 per year.&lt;/li>
&lt;li>Dropbox encryption model is weak and I have data security/privacy.&lt;/li>
&lt;/ul>
&lt;p>The VPS I am running BitTorrent Sync on costs $50 per year and provides four
times the storage. I run &lt;code>btsync&lt;/code> on a VPS so that there is always a server
&lt;em>&amp;ldquo;in the cloud&amp;rdquo;&lt;/em> that is available to sync with so that my setup emulates what
Dropbox used to do.&lt;/p>
&lt;p>All my servers are running Debian and this is how I install &lt;code>btsync&lt;/code> on
Debian.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sh -c &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#f00">$(&lt;/span>curl -fsSL http://debian.yeasoft.net/add-btsync-repository.sh&lt;span style="color:#f00">)&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install btsync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is how I respond to the prompts:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>* Do you want to define a default BitTorrent Sync instance? : YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* BitTorrent Sync Daemon Credentials: yourusername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* BitTorrent Sync Daemon Group: yourusername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Niceness of the BitTorrent Sync Daemon: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* On which portnumber should BitTorrent Sync listen? 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* BitTorrent Sync Listen Port: 12345
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Do you want BitTorrent Sync to request port mapping via UPNP? NO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Download Bandwith Limit: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Upload Bandwith Limit: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Web Interface Bind IP Address: 0.0.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Web Interface Listen Port: 8888
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* The username for accessing the web interface: yourusername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* The password for accessing the web interface: yourpassword
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you&amp;rsquo;ll see, I don&amp;rsquo;t use UPNP on my VPS. I elect a specific port (not
actually 12345 by the way) and open that port up with &lt;code>ufw&lt;/code>. I also only
allow access to the WebUI port from another server I own which reverse
proxies via &lt;code>nginx&lt;/code>.&lt;/p>
&lt;p>&lt;code>btsync&lt;/code> works really well, I have it syncing hundreds of thousands of
files that amount to several hundred gigabytes of data. On my Arch Linux
workstations I use the brilliant &lt;a href="http://www.yeasoft.com/site/projects:btsync-deb:btsync-gui">btsync-gui&lt;/a>
and &lt;a href="https://play.google.com/store/apps/details?id=com.bittorrent.sync">BitTorrent Sync is also available for Android&lt;/a>.&lt;/p>
&lt;p>That said, I still use a free Dropbox account to sync photos from mine and my
wife&amp;rsquo;s Android phones. I have a Dropbox instance running on my home file server
and everyday it runs a script to automatically import these photos into Plex.&lt;/p>
&lt;p>Such a shame, that at the time of writing, &lt;code>btsync&lt;/code> is closed source :-(
Maybe that will change but if it doesn&amp;rsquo;t &lt;a href="http://syncthing.net/">syncthing&lt;/a>
may well be the answer when it has matured a little.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.yeasoft.com/site/projects:btsync-deb:btsync-server">http://www.yeasoft.com/site/projects:btsync-deb:btsync-server&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://forum.bittorrent.com/topic/18974-debian-and-ubuntu-server-packages-for-bittorrent-sync/">http://forum.bittorrent.com/topic/18974-debian-and-ubuntu-server-packages-for-bittorrent-sync/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up BitTorrent Sync on Debian</summary></item><item><title>MATE Desktop on Debian Wheezy</title><link>https://wimpysworld.com/posts/mate-desktop-on-debian-wheezy/</link><pubDate>Thu, 19 Jun 2014 22:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/mate-desktop-on-debian-wheezy/</guid><description>&lt;p>I&amp;rsquo;m a member of the &lt;a href="http://mate-desktop.org">MATE Desktop&lt;/a> team and until
recently the majority of my involvement has been focused around &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a>.&lt;/p>
&lt;p>However, I&amp;rsquo;m working on a MATE project that is based on a &lt;a href="http://www.debian.org">Debian&lt;/a>
derivative. MATE has recently been accepted into the &lt;a href="backports.debian.org/">Debian Backports&lt;/a>
repository for Wheezy, so I decided to do a &lt;em>&amp;ldquo;MATE from scratch&amp;rdquo;&lt;/em> on Debian using
an old netbook to get familiar with the MATE package naming differences between
Arch Linux and Debian.&lt;/p>
&lt;h1 id="install-debian">Install Debian&lt;/h1>
&lt;p>I installed Debian Wheezy from the &lt;a href="https://www.debian.org/CD/netinst/">netinst&lt;/a>
ISO to ensure the target install was as minimal as possible. I went with
the defaults until the &amp;lsquo;Software selection&amp;rsquo; dialogue, at this point
unselect everything except &amp;ldquo;SSH server&amp;rdquo;. Like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[ ] Debian desktop environment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Web server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Print server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] SQL database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] DNS Server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] File server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Mail server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[X] SSH server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Laptop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Standard system utilities
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="debian-iso-with-firmware">Debian ISO with Firmware&lt;/h2>
&lt;p>If you&amp;rsquo;re installing on hardware that requires additional firmware in
order for it to work with Linux then use the netinst ISO that includes
firmware.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/current/">http://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/current/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="configure-debian">Configure Debian&lt;/h1>
&lt;p>When the install is finished, reboot and configure Debian a little.&lt;/p>
&lt;h2 id="repositories">Repositories&lt;/h2>
&lt;p>You&amp;rsquo;ll need to install &lt;code>lsb-release&lt;/code> for the following to work.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install lsb-release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is what I put in &lt;code>/etc/apt/sources.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list&lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># $(lsb_release -cs)-updates, previously known as &amp;#39;volatile&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="backports">Backports&lt;/h2>
&lt;p>MATE is only available in the wheezy-backports repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list.d/backports.list &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>All backports are deactivated by default (i.e. the packages are pinned to 100
by using ButAutomaticUpgrades: yes in the Release files. If you want to install
something from backports run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get -t wheezy-backports install &lt;span style="color:#87ceeb">&amp;#34;package&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="install-mate-desktop">Install MATE Desktop&lt;/h1>
&lt;p>First install the LightDM display manager.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install accountsservice lightdm lightdm-gtk-greeter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now for the MATE Desktop itself.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get -t wheezy-backports install mate-desktop-environment-extras
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="networkmanager">NetworkManager&lt;/h2>
&lt;p>I typically use NetworkManager, so lets install that too.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install network-manager-gnome
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="supplementary">Supplementary&lt;/h2>
&lt;p>Depending on your hardware you may require CPU frequency utilities or
additional firmware.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install cpufreqd cpufrequtil firmware-linux firmware-linux-nonfree
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And, that&amp;rsquo;s it! Reboot and you&amp;rsquo;ll see the LightDM greeter waiting for your
login credentials.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://wiki.mate-desktop.org/download?s%5B%5D=debian">http://wiki.mate-desktop.org/download?s[]=debian&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.debian.org/InstallingDebianOn/HP/HP2133">https://wiki.debian.org/InstallingDebianOn/HP/HP2133&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up MATE Desktop on Debian Wheezy</summary></item><item><title>BIP IRC proxy</title><link>https://wimpysworld.com/posts/bip-irc-proxy/</link><pubDate>Wed, 16 Apr 2014 07:07:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/bip-irc-proxy/</guid><description>&lt;p>&lt;strong>I switched from BIP to &lt;a href="http://wiki.znc.in/ZNC">ZNC&lt;/a>, and &lt;a href="https://wimpysworld.com/posts/znc-irc-proxy/">recommend you use ZNC instead&lt;/a>!&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://bip.milkypond.org/">BIP&lt;/a> is an IRC proxy that maintains a persistent
connection(s) to a list of IRC channels. You can then point your IRC client to
BIP each time you log in and playback the conversations that took place while
you were away.&lt;/p>
&lt;p>I&amp;rsquo;ve found bBIP to be so useful that I now &lt;a href="https://www.archlinux.org/packages/community/x86_64/bip/">maintain BIP for Arch Linux&lt;/a>,
although I now run my BIP proxy on Debian because my new VPS provider doesn&amp;rsquo;t
offer Arch Linux as an option.&lt;/p>
&lt;h2 id="installing-bip">Installing BIP&lt;/h2>
&lt;p>Installing BIP is simple for both Arch Linux and Debian.&lt;/p>
&lt;h3 id="debian">Debian&lt;/h3>
&lt;p>I run BIP on Debian Wheezy with the backport repository enabled.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get -t wheezy-backports install bip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/ENABLED=0/ENABLED=1/&amp;#39;&lt;/span> /etc/default/bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="arch-linux">Arch Linux&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -S bip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl enable bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-user">Create a user&lt;/h2>
&lt;p>The next thing to do is create a username and password and BIP provides it&amp;rsquo;s
own utility for doing this called &lt;code>bipmkpw&lt;/code>. Replace &amp;lsquo;username&amp;rsquo; with whatever
you want your BIP &amp;lsquo;username&amp;rsquo; to be. This name has no relation to any IRC
usernames so it can be anything.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bipmkpw username
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enter a password when prompted. The password will then be output as a hash.
Make a note of both the hashed and un-hashed values somewhere, you will need
them later.&lt;/p>
&lt;h2 id="create-a-certificate">Create a certificate&lt;/h2>
&lt;p>We don&amp;rsquo;t want the username and password being sent as clear-text, so we will
create an SSL certificate for BIP to use.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>openssl req -new -newkey rsa:4096 -nodes -x509 -keyout bip.pem -out bip.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Move the certificate to &lt;code>/var/lib/bip&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mv bip.pem /var/lib/bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change ownership and permissions of the certificate to the user &lt;code>bip&lt;/code> which was
created automatically when the package was installed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chown bip:bip /var/lib/bip/bip.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">600&lt;/span> /var/lib/bip/bip.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-bip">Configure BIP&lt;/h2>
&lt;p>Here is example configuration for BIP. Copy it to &lt;code>/etc/bip.conf&lt;/code>, modify it
accordingly and then change the ownership and permissions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chown bip:bip /etc/bip.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">640&lt;/span> /etc/bip.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example-configuration">Example configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># bip default config file.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Thou shoult change thy password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip = &amp;#34;0.0.0.0&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># To connect a client to bip, try the port below, and
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># be sure to set the password to the value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># specified in the network you want to connect to.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port = 7778;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># If you set this to true, you&amp;#39;ll only be able to connect to bip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># with a SSL capable IRC client. Be sure to generate a certificate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># for bip with &amp;#39;make cert&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>client_side_ssl = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log_level = 3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pid_file=&amp;#34;/var/run/bip/bip.pid&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># This is where logs go. Channel and private messages will use that
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># configuration value as a prefix, and then log_format to determine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># full log filename.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log_root = &amp;#34;/var/log/bip/&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Log format allows you to make log filenames depend on the log line&amp;#39;s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># attributes. Here&amp;#39;s a list :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %u -&amp;gt; user name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %n -&amp;gt; network name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %Y -&amp;gt; 4 digit year
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %m -&amp;gt; 2 digit month
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %d -&amp;gt; 2 digit day
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %c -&amp;gt; destination (#chan, privates, ...)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#log_format = &amp;#34;%n/%Y-%m/%c.%d.log&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Sets the frequency (in seconds) of log syncing (real write to kernel)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#log_sync_interval = 5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Makes bip send the log of each channel and privates while
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># you were not connected to the proxy upon connection.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backlog = true; # enable backlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backlog_lines = 0; # number of lines in backlog, 0 means no limit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backlog_always = false; # backlog even lines already backlogged
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># If blreset_on_talk talking on an irc network has the same effect of issuing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># /bip blreset, meaning that stuffed logged before the command won&amp;#39;t be read
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># back on backlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>blreset_on_talk = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Network definition, a name and server info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>network {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;freenode&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server { host = &amp;#34;chat.freenode.net&amp;#34;; port = 6667; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>network {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;blitzed&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server { host = &amp;#34;irc.blitzed.org&amp;#34;; port = 6667; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Configuration example with one user who connects to two irc networks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># To use the multi-server feature:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - define the connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - chose and setup a different login for each connection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># on your irc client:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - Use the multi server feature of your client, the server being each time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># the server where bip is running. In your client setup server password to:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># username:password:connectionname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - do not store the password in clear here, use the bipmkpw util to generate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># a hash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># User structure is grouping information for a given user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # The name in bip of the user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # This is used by bip only
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;USERNAME; #BIP User account created with bipmkpw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = &amp;#34;00000000000000000000000000000000000000&amp;#34;; # the hash bipmkpw created
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_check_mode = &amp;#34;none&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # These will be the default for each connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_nick = &amp;#34;NICKNAME&amp;#34;; #IRC Nick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_user = &amp;#34;IRCUSERNAME&amp;#34;; #IRC User
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_realname = &amp;#34;REALNAME&amp;#34;; #IRC Real Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> admin = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backlog_msg_only = true; # When true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # A user can have mutiple connections to irc networks.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # define a connection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;freenode&amp;#34;; # used by bip only
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network = &amp;#34;freenode&amp;#34;; # which ircnet to connect to
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # these will be sent to the real IRC server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user = &amp;#34;IRCUSERNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> realname = &amp;#34;IRCREALNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = &amp;#34;serverpassword&amp;#34;; #can be commented out if not needed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Some options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> follow_nick = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ignore_first_nick = false;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #on_connect_send = &amp;#34;PRIVMSG NickServ :IDENTIFY nspassword&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Autojoined channels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#cat&amp;#34;; }; # Join #cat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#dog&amp;#34;; backlog = false; }; # Join #dog but don&amp;#39;t backlog it.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#pig&amp;#34;; key = &amp;#34;01nk01nk&amp;#34;; }; # Join #pig that has a password.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;blitzed&amp;#34;; # used by bip only
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network = &amp;#34;blitzed&amp;#34;; # which ircnet to connect to
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # these will be sent to the real IRC server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user = &amp;#34;IRCUSERNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> realname = &amp;#34;IRCREALNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = &amp;#34;serverpassword&amp;#34;; #can be commented out if not needed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Some options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> follow_nick = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ignore_first_nick = false;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #on_connect_send = &amp;#34;PRIVMSG NickServ :IDENTIFY nspassword&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Autojoined channels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#bar&amp;#34;; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#foo&amp;#34;; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you require any clarification about what the configuration options do then
&lt;code>man bip.conf&lt;/code> is your friend.&lt;/p>
&lt;h2 id="start-bip">Start BIP&lt;/h2>
&lt;p>Now that BIP is configured, it can be started.&lt;/p>
&lt;h3 id="debian-1">Debian&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/bip start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="arch-linux-1">Arch Linux&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="client-configuration">Client configuration&lt;/h2>
&lt;p>I use &lt;a href="http://hexchat.github.io/">HexChat&lt;/a>, but other IRC clients are available.
I add a new Network to HexChat for each of the IRC networks I defined in
&lt;code>/etc/bip.conf&lt;/code>. The screen shot below shows how I configure a BIP network in
HexChat.&lt;/p>
&lt;p>&lt;img src="BIP-freenode.png" alt="HexChat BIP Configuration" title="Example HexChat Network Configuration to a BIP proxy">&lt;/p>
&lt;h3 id="password-format">Password format&lt;/h3>
&lt;p>The Password is the most important and confusing item. &lt;strong>This is for BIP,
not for any IRC network&lt;/strong>. Remember the unhashed password? That goes here but
with a twist. The format for the password is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>bipusername:unhashedbippassword:bipnetwork
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bipnetwork? What is that? It is from the following section of &lt;code>/etc/bip.conf&lt;/code>
on the server?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>network {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;freenode&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server { host = &amp;#34;chat.freenode.net&amp;#34;; port = 6667; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A more practical example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>myuser:S3cr3tP@$$w0rd:freenode
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>And that&amp;rsquo;s it! We are now perpetually connected to IRC, can connect to BIP
proxy from multiple devices in a completely transparent and seamless manner.
Moreover, the logs for all channels are saved and automatically rotated on the
server.&lt;/p>
&lt;p>If you looking for an alternative to BIP, then try &lt;a href="http://wiki.znc.in/ZNC">ZNC&lt;/a>.&lt;/p>
&lt;p>&lt;strong>References&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://wiki.linaro.org/Resources/HowTo/BIP">https://wiki.linaro.org/Resources/HowTo/BIP&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://nerderati.com/2010/11/perpetual-irc-the-proxy-edition/">http://nerderati.com/2010/11/perpetual-irc-the-proxy-edition/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stevengorrell.com/bip-irc-proxy/">http://stevengorrell.com/bip-irc-proxy/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing BIP IRC Proxy on Debian Wheezy &amp;amp; Arch Linux</summary></item><item><title>LXC on Arch Linux</title><link>https://wimpysworld.com/posts/lxc-on-arch-linux/</link><pubDate>Tue, 15 Apr 2014 02:44:11 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/lxc-on-arch-linux/</guid><description>&lt;p>At some point last year I was experimenting with Linux Containers (LXC) on
Arch Linux. &lt;strong>I never finished the blog post but somehow it was briefly published
and then unplublished&lt;/strong>. I have no idea how accurate this blog post is but someone
did see it and bookmarked it. &lt;strong>They recently emailed me to ask where the blog has
disappeared to, so here it is in all its unfinished glory&lt;/strong>.&lt;/p>
&lt;h1 id="install-lxc">Install LXC&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -Syy --needed --noconfirm arch-install-scripts bridge-utils lxc netctl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="netctl-bridge">netctl Bridge&lt;/h1>
&lt;p>The guest containers will connect to the LAN via a bridged network deviced.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/netctl/bridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">Description&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;Bridge&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">Interface&lt;/span>=br0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">Connection&lt;/span>=bridge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">BindsToInterfaces&lt;/span>=(eth0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">IP&lt;/span>=dhcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">## sets forward delay time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">FwdDelay&lt;/span>=&lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">## sets max age of hello message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#MaxAge=10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable and start the bridge.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo netctl enable bridge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo netctl start bridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="creating-containers">Creating Containers&lt;/h1>
&lt;p>I&amp;rsquo;m only interested in running Arch Linux or Debian containers.&lt;/p>
&lt;h2 id="container-configurations">Container Configurations&lt;/h2>
&lt;p>Each container should have a matching configuration file, they look something like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>lxc.arch = i686
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.utsname = myhostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.type = veth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.flags = up
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.link = br0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.ipv4 = 0.0.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.name = eth0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>lxc.arch&lt;/code> Architecture for the container, valid options are &lt;code>x86&lt;/code>, &lt;code>i686&lt;/code>, &lt;code>x86_64&lt;/code>, &lt;code>amd64&lt;/code>.&lt;/li>
&lt;li>&lt;code>lxc.utsman&lt;/code> Container name, should also be used when naming the configuration file&lt;/li>
&lt;li>&lt;code>lxc_network.type&lt;/code> Type of network virtualization to be used for the
container. The option &lt;code>veth&lt;/code> defines a peer network device. It is created
with one side assigned to the container and the other side is attached to a
bridge by the &lt;code>lxc.network.link&lt;/code> option.&lt;/li>
&lt;li>&lt;code>lxc_network.flags&lt;/code> Network actions. The value &lt;code>up&lt;/code> in this case activates the network.&lt;/li>
&lt;li>&lt;code>lxc.network.link&lt;/code> Host network interface to be used for the container.&lt;/li>
&lt;li>&lt;code>lxc.network.ipv4&lt;/code> IPv4 address assigned to the virtualized interface. Use
the address 0.0.0.0 to make use of DHCP. Use &lt;code>lxc.network.ipv6&lt;/code> if you need
IPv6 support.&lt;/li>
&lt;li>&lt;code>lxc.network.name&lt;/code> Dynamically allocated interface name. This option will
rename the interface in the container.&lt;/li>
&lt;/ul>
&lt;p>More example files can be found in &lt;code>/usr/share/doc/lxc/examples/&lt;/code>.
Find details about all options via &lt;code>man lxc.conf&lt;/code>.&lt;/p>
&lt;h2 id="arch-linux">Arch Linux&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-create -t archlinux -n arch-01 -f ~/arch-01.conf -- --packages netctl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am unable to get DHCP to work for a Arch Linux LXC container, therefore
my dirty hack is to alway use a statis IP address in the &lt;code>netctl&lt;/code> profile. There
is also a bug (&lt;a href="https://bugs.archlinux.org/task/35715">#35715&lt;/a>) was helpful in
narrowing down the problem, but wasn&amp;rsquo;t the solution in my case. Use
&lt;code>/var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/example/ethernet-static&lt;/code> as a template.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo cp /var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/example/ethernet-static /var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/static
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Modify &lt;code>/var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/static&lt;/code> accordingly. Now
create a hook, with the same name as the &lt;code>netctl&lt;/code> profile.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/hooks/static
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">if&lt;/span> [[ &lt;span style="color:#f00">$(&lt;/span>systemd-detect-virt&lt;span style="color:#f00">)&lt;/span> != none ]]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">BindsToInterfaces&lt;/span>=()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">ForceConnect&lt;/span>=yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the container and enable the &lt;code>netctl&lt;/code> profile.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>netctl enable static
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netctl start static
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="debian-containers">Debian Containers.&lt;/h2>
&lt;p>Install &lt;code>debobootstrap&lt;/code> and &lt;code>dpkg&lt;/code> so that Debian containers can be created.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>packer -S --noedit dpkg debootstrap
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="squeeze">Squeeze&lt;/h3>
&lt;p>Create a Debian container, &lt;code>squeeze&lt;/code> is the default.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-create -t debian -n squeeze-01 -f ~/squeeze-01.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change the &lt;code>root&lt;/code> password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chroot /var/lib/lxc/squeeze/rootfs/ passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="wheezy">Wheezy&lt;/h3>
&lt;p>Much the same as the Squeeze exaple above but use the following template.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/simonvanderveldt/lxc-debian-wheezy-template">https://github.com/simonvanderveldt/lxc-debian-wheezy-template&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="using-containers">Using containers&lt;/h1>
&lt;p>Start a container&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-start -d -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Connect to the container and log in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-console -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To halt a container cleanly by the containers initv-system:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-halt -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Stop and remove your container always with the two steps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-stop -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo lxc-destroy -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://nurupoga.org/articles/archlinux-on-lxc-with-netctl/">http://nurupoga.org/articles/archlinux-on-lxc-with-netctl/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=164753">https://bbs.archlinux.org/viewtopic.php?id=164753&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://andyortlieb.wordpress.com/2013/03/15/practical-use-of-lxc-in-arch-linux-in-march-of-2013/">http://andyortlieb.wordpress.com/2013/03/15/practical-use-of-lxc-in-arch-linux-in-march-of-2013/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Linux_Containers">https://wiki.archlinux.org/index.php/Linux_Containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Lxc-systemd">https://wiki.archlinux.org/index.php/Lxc-systemd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Netctl">https://wiki.archlinux.org/index.php/Netctl&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.suse.com/documentation/sles11/singlehtml/lxc_quickstart/lxc_quickstart.html">https://www.suse.com/documentation/sles11/singlehtml/lxc_quickstart/lxc_quickstart.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.gentoo.org/wiki/LXC">http://wiki.gentoo.org/wiki/LXC&lt;/a>&lt;/li>
&lt;/ul></description><summary>A rough guide to running Debian containers on Arch Linux with LXC</summary></item><item><title>Installing Nikola on Debian</title><link>https://wimpysworld.com/posts/installing-nikola-on-debian/</link><pubDate>Mon, 31 Mar 2014 16:19:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/installing-nikola-on-debian/</guid><description>&lt;p>Nikola is a static site and blog generator written in &lt;a href="http://www.python.org">Python&lt;/a>
that I&amp;rsquo;ve been using for a good while now. This blog post describes how to install
&lt;a href="http://getnikola.com/">Nikola&lt;/a> on Debian. Now, this may look like a long winded way
to install Nikola, given that Debian .deb package exist, but in my opinion it is
the correct way to install Nikola on Debian.&lt;/p>
&lt;h2 id="installing-python">Installing Python&lt;/h2>
&lt;p>First you&amp;rsquo;ll need Python and &lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install libpython2.7 python2.7 python2.7-dev python2.7-minimal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove any &lt;code>apt&lt;/code> installed Python packages that we are about to replace. The
versions of these packages in the Debian repositories soon get stale.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge python-setuptools python-virtualenv python-pip python-profiler
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>pip&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://bootstrap.pypa.io/get-pip.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.7 get-pip.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>pip&lt;/code> to install &lt;code>virtualenv&lt;/code> and &lt;code>virtualenvwrapper&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pip install virtualenv --upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pip install virtualenvwrapper
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-snakepit">The Snakepit&lt;/h2>
&lt;p>Create a &amp;ldquo;Snakepit&amp;rdquo; directory for storing all the virtualenvs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir ~/Snakepit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following your &lt;code>~/.bashrc&lt;/code> to enable &lt;code>virtualenvwrapper&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WORKON_HOME&lt;/span>=&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/Snakepit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">if&lt;/span> [ -f /usr/local/bin/virtualenvwrapper.sh ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source /usr/local/bin/virtualenvwrapper.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">elif&lt;/span> [ -f /usr/bin/virtualenvwrapper.sh ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source /usr/bin/virtualenvwrapper.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-virtualenv-for-nikola">Create a virtualenv for Nikola&lt;/h2>
&lt;p>Open a new shell to ensure that the &lt;code>virtualenvwrapper&lt;/code> configuration is active.
The following will create a new virtualenv called &lt;code>nikola&lt;/code> based on Python 2.7.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkvirtualenv -p /usr/bin/python2.7 ~/Snakepit/nikola-640
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="working-on-a-virtualenv">Working on a virtualenv&lt;/h3>
&lt;p>To activate an existing virtualenv do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>workon nikola-640
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can switch to another virtualenv at any time, just use &lt;code>workon envname&lt;/code>.
Your shell prompt will change while a virtualenv is being worked on to
indicate which virtualenv is currently active.&lt;/p>
&lt;p>While working on a virtualenv you can &lt;code>pip&lt;/code> install what you need or manually
install any Python libraries safe in the knowledge you will not adversely
damage any other virtualenvs or the global packages in the process. Very
useful for developing a new branch which may have different library requirements
than the master/head.&lt;/p>
&lt;p>When you are finished working in a virtualenv you can deactivate it by
simply executing &lt;code>deactivate&lt;/code>.&lt;/p>
&lt;h2 id="install-nikola-requirements">Install Nikola requirements&lt;/h2>
&lt;p>Nikola is will be powered by Python 2.7 and some additional packages will
be required.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install python2.7-dev libfreetype6-dev libjpeg8-dev libxslt1-dev libxml2-dev libyaml-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="what-are-these-requirements-for">What are these requirements for?&lt;/h3>
&lt;ul>
&lt;li>&lt;code>python2.7-dev&lt;/code> provides the header files for Python 2.7 so that Python
modules with C extensions can be built.&lt;/li>
&lt;/ul>
&lt;p>The following are required to build &lt;code>pillow&lt;/code>, the Python imaging library.&lt;/p>
&lt;ul>
&lt;li>&lt;code>libjpeg8-dev&lt;/code>&lt;/li>
&lt;li>&lt;code>libfreetype6-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The following are required to build &lt;code>lxml&lt;/code>, a Python XML library.&lt;/p>
&lt;ul>
&lt;li>&lt;code>libxml2-dev&lt;/code>&lt;/li>
&lt;li>&lt;code>libxslt1-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The following are required to build &lt;code>python-coveralls&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>&lt;code>libyaml-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="install-nikola">Install Nikola&lt;/h2>
&lt;p>Download Nikola.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">VIRTUAL_ENV&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">VIRTUAL_ENV&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://github.com/getnikola/nikola/archive/v6.4.0.tar.gz -O nikola-640.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar zxvf nikola-640.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd nikola-6.4.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the Nikola requirements.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install -r requirements-full.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you intend to use the Nikola planetoid (Planet generator) plugin you&amp;rsquo;ll also
need to following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install peewee feedparser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Actually install nikola.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nikola is now installed. &lt;code>nikola help&lt;/code> and the &lt;a href="http://getnikola.com/handbook.html">Nikola Handbook&lt;/a>
will assist you from here on.&lt;/p></description><summary>How to install Nikola static site generator on Debian</summary></item><item><title>Linux Mint LMDE on Hybrid Disk Laptop</title><link>https://wimpysworld.com/posts/linux-mint-lmde-on-hybrid-disk-laptop/</link><pubDate>Wed, 28 Aug 2013 20:10:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/linux-mint-lmde-on-hybrid-disk-laptop/</guid><description>&lt;p>I have an old Thinkpad T43p that I am trying to extend the life of. So I recently
fitted a cheap 60GB IDE Solid State Drive (SSD) and put a 320GB SATA Hard Disk
Drive (HDD) in the Ultrabay. This is not a true hybrid disk, but the principles
are similar. The root partition will go on the SDD (for performance) and the
home partition will be located on the HDD (for capacity).&lt;/p>
&lt;p>I&amp;rsquo;ve been running &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a> on the T43p and the SDD
improves system responsiveness and boot time considerably, especially when using
&lt;a href="http://en.wikipedia.org/wiki/F2FS">F2FS&lt;/a> or
&lt;a href="https://btrfs.wiki.kernel.org/index.php/Main_Page">btrfs&lt;/a> (with LZO
compression and SSD mount options) on the root filesystem.&lt;/p>
&lt;p>I am also testing &lt;a href="http://www.linuxmint.com/download_lmde.php">Linux Mint Debian Edition&lt;/a> (LMDE)
with the &lt;a href="http://mate-desktop.org/">MATE Desktop&lt;/a> desktop to determine if this
is a suitable operating system for my family to use. It appears they find
&lt;a href="http://www.gnome.org/gnome-3/">GNOME 3&lt;/a> confusing and would prefer a familiar
desktop experience.&lt;/p>
&lt;p>While testing LMDE 201203 I ran into a few issues, so I&amp;rsquo;ve decided to capture
my notes here for future reference.&lt;/p>
&lt;h1 id="fix-the-installer">Fix the installer&lt;/h1>
&lt;p>In order to install LMDE using partitions on multiple drives you must
use the ADVANCED USER install mode. However, the ADVANCED USER install mode
has a bug that prevents the installer from completing, so that needs to be
fixed first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /usr/lib/live-installer/frontend/gtk_interface.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Find the following on line 1765.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>self.wTree.get_widget(&lt;span style="color:#87ceeb">&amp;#34;button_next&amp;#34;&lt;/span>).show()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After it add the following line, making sure the indentation is correct.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>self.wTree.get_widget(&lt;span style="color:#87ceeb">&amp;#34;button_next&amp;#34;&lt;/span>).set_sensitive(&lt;span style="color:#f00">True&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="installing-lmde">Installing LMDE&lt;/h1>
&lt;ul>
&lt;li>Double click the &lt;code>Install Linux Mint&lt;/code> icon on the desktop.&lt;/li>
&lt;li>Select your &lt;em>Language&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Select your &lt;em>Timezone&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Select your &lt;em>Keyboard layout&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Enter your &lt;em>User info&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>From the &lt;em>Hard drive&lt;/em> window Select &lt;code>Manually mount partitions (ADVANCED USERS ONLY)&lt;/code> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>The &lt;em>Please make sure you wish to manually manage partitions&lt;/em> window will
appear. On my system the SSD is detected on &lt;code>/dev/sda&lt;/code> and the HDD is detected
on &lt;code>/dev/sdb&lt;/code>. Start &lt;code>GParted&lt;/code> and partition and format the drives as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span> /dev/sda1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: 256MiB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: ext4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /dev/sda2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: 2048MiB (or the size you prefer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: linux-swap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: swap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /dev/sda3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: Remainder
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: btrfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /dev/sdb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: All
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: ext4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: home
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Apply the changes and close GParted.&lt;/p>
&lt;p>I use ext4 for the &lt;code>/boot&lt;/code> partition because GRUB can&amp;rsquo;t currently boot from btrfs
in LMDE. I use ext4 for &lt;code>/home&lt;/code> because it offers the best performance on rotational
drives on my Thinkpad T43p. I use btrfs on the &lt;code>/root&lt;/code> partition because performs
best (by some margin) on solid state drives in my Thinkpad T43p.&lt;/p>
&lt;p>The filesystems need mounting under &lt;code>/target&lt;/code> so the installer can install the
OS. Open a Terminal and do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mkdir /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -t btrfs -o &lt;span style="color:#eedd82">compress&lt;/span>=lzo,ssd /dev/disk/by-label/root /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir /target/{boot,home}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -t ext4 /dev/disk/by-label/boot /target/boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -t ext4 /dev/disk/by-label/home /target/home
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Return to the Linux Mint Debian Installer.&lt;/p>
&lt;ul>
&lt;li>Click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>From the &lt;em>Advanced options&lt;/em> check &lt;code>Install GRUB&lt;/code> and select &lt;code>/dev/sda&lt;/code>. Click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Confirm the &lt;em>Summary&lt;/em> is correct and click &lt;code>Install&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Time for a cup of tea while the install runs. A pop-up, titled &lt;em>Installation
Paused&lt;/em>, will appear. Click &lt;code>OK&lt;/code>.&lt;/p>
&lt;h2 id="create-targetetcfstab">Create &lt;code>/target/etc/fstab&lt;/code>&lt;/h2>
&lt;p>Do as the installer says and create &lt;code>/target/etc/fstab&lt;/code>. Open a Terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /target/etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following &lt;code>fstab&lt;/code> works for my T43p.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># /etc/fstab: static file system information.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>proc /proc proc defaults 0 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=root / btrfs defaults,noatime,compress=lzo,ssd 0 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=boot /boot ext4 defaults,noatime 0 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=home /home ext4 defaults,relatime 0 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=swap none swap sw 0 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="upgrade-mate-16-and-remove-legacy-mate-14-packages">Upgrade MATE 1.6 and remove legacy MATE 1.4 packages&lt;/h2>
&lt;p>MATE 1.6 has been released for LMDE 201203 so it is a good idea to upgrade
and remove legacy packages before the first boot to ensure a clean
configuration. Open a Terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chroot /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install apt-show-versions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get dist-upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some MATE 1.4 packages will be left behind that are no longer required. The
following can help identify them.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-show-versions | grep 1&lt;span style="color:#87ceeb">\.&lt;/span>4&lt;span style="color:#87ceeb">\.&lt;/span>[0-9]&lt;span style="color:#87ceeb">\-&lt;/span>[0-9]&lt;span style="color:#87ceeb">\+&lt;/span>wheezy | cut -f1 -d&lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Purge the old MATE 1.4 packages.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PKGS&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>apt-show-versions | grep 1&lt;span style="color:#87ceeb">\.&lt;/span>4&lt;span style="color:#87ceeb">\.&lt;/span>[0-9]&lt;span style="color:#87ceeb">\-&lt;/span>[0-9]&lt;span style="color:#87ceeb">\+&lt;/span>wheezy | cut -f1 -d&lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get purge &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">PKGS&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exit the &lt;code>chroot&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="finish-the-install">Finish the install&lt;/h2>
&lt;p>Return to the Linux Mint Debian Installer.&lt;/p>
&lt;ul>
&lt;li>Click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Some final installation steps will now complete.&lt;/li>
&lt;li>A pop-up, titled &lt;em>Installation finished&lt;/em>, will appear. Click &lt;code>Yes&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Your computer will reboot and start LMDE.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://forums.linuxmint.com/viewtopic.php?f=189&amp;amp;t=129381">http://forums.linuxmint.com/viewtopic.php?f=189&amp;amp;t=129381&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://forums.linuxmint.com/viewtopic.php?f=185&amp;amp;t=143547">http://forums.linuxmint.com/viewtopic.php?f=185&amp;amp;t=143547&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Linux Mint Debian Edition (LMDE) on a Laptop with Hybrid Disk</summary></item><item><title>Plex Media Server on Open Media Vault</title><link>https://wimpysworld.com/posts/plex-media-server-on-open-media-vault/</link><pubDate>Tue, 27 Aug 2013 21:11:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/plex-media-server-on-open-media-vault/</guid><description>&lt;p>I&amp;rsquo;ve recently started using &lt;a href="http://www.plexapp.com">Plex Media Server&lt;/a> to
handle most media streaming duties around the house. I run in on
&lt;a href="http://www.openmediavault.org">Open Media Vault&lt;/a> 0.5.x. At the time of writing
Open Media Vault is based on &lt;a href="http://www.debian.org">Debian&lt;/a> (Squeeze) 6.0.&lt;/p>
&lt;h1 id="plex-media-server">Plex Media Server&lt;/h1>
&lt;p>Anyway, it turns out that installing Plex Media Server on Open Media Vault is
super simple thanks to the &lt;a href="http://forums.plexapp.com/index.php/topic/51427-plex-media-server-for-debian/">hard work of Christian Svedin&lt;/a>
who has packaged everything and made it available via an &lt;code>apt&lt;/code> repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install curl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;deb http://shell.ninthgate.se/packages/debian squeeze main&amp;#34;&lt;/span> | sudo tee -a /etc/apt/sources.list.d/plexmediaserver.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl http://shell.ninthgate.se/packages/shell-ninthgate-se-keyring.key | sudo apt-key add -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install plexmediaserver
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The instructions above also work for Debian Wheezy, just change &lt;code>squeeze&lt;/code> to
&lt;code>wheezy&lt;/code> in &lt;code>/etc/apt/sources.list.d/plexmediaserver.list&lt;/code>.&lt;/p>
&lt;p>When the install is complete point your browser at Plex/Web, for example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://plex.example.org:32400/web">http://plex.example.org:32400/web&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Replace &lt;code>plex.example.org&lt;/code> with your Plex Media Server hostname/ip address.&lt;/p>
&lt;p>If you have PlexPass then head over to the &lt;a href="http://forums.plexapp.com/index.php/topic/48865-debian-package/">Preview Releases for Debian&lt;/a>
and download and install the latest &lt;code>.deb&lt;/code>.&lt;/p>
&lt;h1 id="plex-clients">Plex Clients&lt;/h1>
&lt;p>I use the Plex Client for Android on phone and tablet, a Roku 2 XS in the lounge
and Roku 2 LT in the bedroom.&lt;/p>
&lt;p>I&amp;rsquo;ve successfully tested Plex Home Theatre on Ubuntu 12.04 and Raspbmc with
the PleXBMC plug-in on Raspberry Pi.&lt;/p>
&lt;h3 id="references">References&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://forums.plexapp.com/index.php/topic/51427-plex-media-server-for-debian/">http://forums.plexapp.com/index.php/topic/51427-plex-media-server-for-debian/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://forums.plexapp.com/index.php/topic/48865-debian-package/">http://forums.plexapp.com/index.php/topic/48865-debian-package/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Plex Media Server on Open Media Vault (Squeeze) 6.0</summary></item><item><title>Setting up MiniDLNA on Open Media Vault</title><link>https://wimpysworld.com/posts/setting-up-minidlna-on-open-media-vault/</link><pubDate>Mon, 26 Aug 2013 21:49:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/setting-up-minidlna-on-open-media-vault/</guid><description>&lt;p>I have &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a> running on a
&lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>.&lt;/p>
&lt;p>OpenMediaVault (OMV) is a network attached storage (NAS) solution based on
&lt;a href="http://www.debian.org">Debian&lt;/a> Linux. At the time of writing OMV 0.5.x is
based on Debian 6.0 (Squeeze).&lt;/p>
&lt;p>In recent months &lt;a href="http://www.plexapp.com">Plex&lt;/a> has taken over just about all
media streaming duties in our house, with the expectation of streaming music
because Plex music playback and streaming is seriously lacking (no playlists!).
So, &lt;a href="http://sourceforge.net/projects/minidlna/">MiniDLNA&lt;/a> is still required for
serving up music around the house.&lt;/p>
&lt;h1 id="install-minidlna-on-omv">Install MiniDLNA on OMV&lt;/h1>
&lt;p>There is a 3rd party plugin repository for Open Media Vault which includes
packages to install MiniDLNA and a WebUI plugin for managing MiniDLNA via OMV.
I upgraded to OMV 0.5.x this morning. and with the 0.5.x the Plugin API changed
and as of the time of writing none of the 3rd party plugins had not been migrated
to OMV 0.5.x. That said, MiniDLNA is super simple to configure so a WebUI is
not a requirement for me.&lt;/p>
&lt;p>MiniDLNA is not currently packaged for Debian Squeeze in the official repositories but
&lt;a href="http://blog.steve.org.uk/minidlna_is_now_packaged.html">Steve Kemp&lt;/a> has packaged
a fairly up-to-date version of MiniDLNA for Squeeze. Brilliant! Do the following as
&lt;code>root&lt;/code> to install MiniDLNA.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget http://packages.steve.org.uk/minidlna/apt-key.pub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-key add apt-key.pub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo deb http://packages.steve.org.uk/minidlna/squeeze/ ./&lt;span style="color:#87ceeb">&amp;#34; &amp;gt; /etc/apt/sources.list.d/minidlna.list
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">echo &amp;#34;&lt;/span>deb-src http://packages.steve.org.uk/minidlna/squeeze/ ./&lt;span style="color:#87ceeb">&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list.d/minidlna.list
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you&amp;rsquo;ve done that run the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install minidlna
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The MiniDLNA defaults in Steve&amp;rsquo;s package assume you have your music in
&lt;code>/srv/music&lt;/code>. So you&amp;rsquo;ll probably need to modify &lt;code>/etc/minidlna/minidlna.conf&lt;/code>
accordingly. From this point &lt;code>man minidlna&lt;/code> and &lt;code>man minidlna.conf&lt;/code> will
guide you.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://blog.steve.org.uk/minidlna_is_now_packaged.html">http://blog.steve.org.uk/minidlna_is_now_packaged.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://packages.steve.org.uk/minidlna/">http://packages.steve.org.uk/minidlna/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://sourceforge.net/projects/minidlna/">http://sourceforge.net/projects/minidlna/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Music streaming with MiniDLNA on Open Media Vault</summary></item><item><title>SketchUp Make on Arch Linux</title><link>https://wimpysworld.com/posts/sketchup-make-on-arch-linux/</link><pubDate>Thu, 15 Aug 2013 15:42:47 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/sketchup-make-on-arch-linux/</guid><description>&lt;p>I use &lt;a href="http://www.sketchup.com">SketchUp&lt;/a> at work to manipulate models for use
in &lt;a href="http://earth.google.com">Google Earth&lt;/a>. Here is how I got SketchUp Make
2013 installed and working on &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a> under
&lt;a href="http://www.winehq.com">Wine&lt;/a> 1.7.&lt;/p>
&lt;h1 id="wine-for-arch-linux">Wine for Arch Linux&lt;/h1>
&lt;p>Install Wine on Arch Linux as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed icoutils libwbclient libxslt lib32-mpg123 p11-kit lib32-p11-kit samba wine winetricks wine-mono wine_gecko
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo packer -S --noedit --noconfirm ttf-ms-fonts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For 64-bit also install the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo packer -S --noedit --noconfirm lib32-libwbclient lib32-libxslt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="installing-sketchup-make">Installing SketchUp Make&lt;/h1>
&lt;p>Once Wine is installed download SketchUp Make 2013.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.sketchup.com/download">http://www.sketchup.com/download&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Create a clean wine prefix.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WINEPREFIX&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>&lt;span style="color:#87ceeb">/.sketchup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WINEARCH&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;win32&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wineboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>corefonts&lt;/code> using &lt;code>winetricks&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>winetricks corefonts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the SketchUp Make setup.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wine SketchUpWEN.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Follow the installation wizard, I just went with the defaults.&lt;/p>
&lt;p>That&amp;rsquo;s it. SketchUp is installed and should be associated with the appropriate
file types.&lt;/p>
&lt;h2 id="video-corruption">Video Corruption&lt;/h2>
&lt;p>My workstation has a Radeon 5000 series graphics card and I use the Open Source
&lt;code>radeon&lt;/code> driver. I don&amp;rsquo;t know if this problem is specific to my hardware/drivers
but SketchUp will eventually (sometimes immediately) encounter video corruption.
Once that happens I can&amp;rsquo;t see or manipluate the models.&lt;/p>
&lt;p>The solution that works for me is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>env &lt;span style="color:#eedd82">WINEPREFIX&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>&lt;span style="color:#87ceeb">/.sketchup&amp;#34;&lt;/span> &lt;span style="color:#eedd82">LIBGL_ALWAYS_SOFTWARE&lt;/span>=&lt;span style="color:#f60">1&lt;/span> &lt;span style="color:#eedd82">vblank_mode&lt;/span>=&lt;span style="color:#f60">0&lt;/span> wine &lt;span style="color:#87ceeb">&amp;#34;C:\Program Files\SketchUp\SketchUp 2013\SketchUp.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If this also works for you then &lt;code>SketchUp.desktop&lt;/code> can be modified to persist
these settings.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nano ~/.local/share/applications/wine/Programs/SketchUp&lt;span style="color:#87ceeb">\ &lt;/span>2013/SketchUp.desktop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace the contents with what follows but change &lt;code>USER&lt;/code> with your username.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Desktop Entry]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name=&lt;span style="color:#87ceeb">SketchUp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Exec=&lt;span style="color:#87ceeb">env WINEPREFIX=&amp;#34;/home/USER/.sketchup&amp;#34; LIBGL_ALWAYS_SOFTWARE=1 vblank_mode=0 wine C:\\\\windows\\\\command\\\\start.exe /Unix /home/USER/.sketchup/dosdevices/c:/users/USER/Start\\ Menu/Programs/SketchUp\\ 2013/SketchUp.lnk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type=&lt;span style="color:#87ceeb">Application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartupNotify=&lt;span style="color:#87ceeb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Icon=&lt;span style="color:#87ceeb">1871_SketchUpIcon.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="uninstalling-sketchup-make">Uninstalling SketchUp Make&lt;/h2>
&lt;p>Should you ever need to, you can uninstall SketchUp Make as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -rfv &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/.sketchup/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rfv ~/.local/share/applications/wine/Programs/SketchUp&lt;span style="color:#87ceeb">\ &lt;/span>2013/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=28620">http://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=28620&lt;/a>&lt;/li>
&lt;/ul></description><summary>Install SketchUp Make 2013 on Arch Linux with Wine 1.7</summary></item><item><title>Setting up Open Media Vault on the HP MicroServer N54L</title><link>https://wimpysworld.com/posts/setting-up-open-media-vault-on-the-hp-microserver-n54l/</link><pubDate>Wed, 07 Aug 2013 21:21:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/setting-up-open-media-vault-on-the-hp-microserver-n54l/</guid><description>&lt;p>I&amp;rsquo;ve installed &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a> (OMV)
on my new &lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>
to replace my aging, and lackluster, &lt;a href="http://www.readynas.com">ReadyNAS&lt;/a> NV.&lt;/p>
&lt;p>OpenMediaVault (OMV) is a network attached storage (NAS) solution based on
&lt;a href="http://www.debian.org">Debian&lt;/a> Linux. At the time of writing OMV 0.5.x is
based on Debian 6.0 (Squeeze).&lt;/p>
&lt;p>This blog post is not going to cover the extremely simple OMV installation
procedure, it assumes OMV 0.5.x is already installed. This post explains
how to upgrade the kernel, install some addtional plugins and some hackery
to update &lt;a href="http://www.transmissionbt.com/">Transmission&lt;/a>.&lt;/p>
&lt;p>This blog post is basically the essential notes I need to recreate my server setup.&lt;/p>
&lt;h1 id="n54l-custom-bios">N54L Custom BIOS&lt;/h1>
&lt;p>I&amp;rsquo;ve installed one of the custom BIOS mods for the N54L.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.avforums.com/forums/networking-nas/1521657-hp-n36l-n40l-n54l-microserver-updated-ahci-bios-support.html">HP N36L/N40L/N54L Microserver Updated AHCI BIOS Support&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I selected the BIOS mod above because the guy who created was an HP engineer and
this BIOS mod only enables additional features that the N54L can actually support.
Using this BIOS mod I&amp;rsquo;ve been able to:&lt;/p>
&lt;ul>
&lt;li>Enable AHCI for the Optical Disk Drive (ODD) port.&lt;/li>
&lt;li>Enable AHCI and port multiplier for the the e-SATA port.&lt;/li>
&lt;li>Make all drives hot-pluggable.&lt;/li>
&lt;/ul>
&lt;p>The 250GB hard drive that came with N54L is now relocated in the optical drive day
and being used as the OS drive, leaving all 4 bays for data.&lt;/p>
&lt;p>As some point in the future I may want to hook up a 4 bay e-SATA enclosure and this
BIOS mod makes that possible.&lt;/p>
&lt;h1 id="open-media-vault">Open Media Vault&lt;/h1>
&lt;p>Once Open Media Vault is installed, I do the following.&lt;/p>
&lt;h2 id="enable-ssh">Enable SSH&lt;/h2>
&lt;p>OMV actually has a really good WebUI that can be used to accomplish most
update/upgrade tasks but I can&amp;rsquo;t help myself. I must have shell access. From
the OMV WebUI:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Services -&amp;gt; SSH&lt;/code>
&lt;ul>
&lt;li>Put a tick in &lt;code>Enable&lt;/code> and click the &lt;code>OK&lt;/code> button.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="shell-tools">Shell Tools&lt;/h2>
&lt;p>Things crave when at the a shell.&lt;/p>
&lt;p>Login to your OMV server as &lt;code>root&lt;/code> using SSH and then do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install less lsb-release rsync screen tree
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="omv-plugins">OMV Plugins&lt;/h1>
&lt;p>OMV has a number of built-in plugins and a &lt;a href="http://omv-plugins.org">third party repository of plugins&lt;/a>.&lt;/p>
&lt;h2 id="built-in-plugins">Built-in Plugins&lt;/h2>
&lt;p>Update the built-in plugins.&lt;/p>
&lt;ul>
&lt;li>&lt;code>System -&amp;gt; Plugins&lt;/code>
&lt;ul>
&lt;li>Click the &lt;code>Check&lt;/code> icon.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="logical-volume-manager">Logical Volume Manager&lt;/h3>
&lt;p>I use LVM. There, I said it. Enable the LVM2 plugin as follows from the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>System -&amp;gt; Plugins&lt;/code>
&lt;ul>
&lt;li>Highlight the &lt;code>openmediavault-lvm2&lt;/code> plugin.&lt;/li>
&lt;li>Click the &lt;code>Install&lt;/code> icon and then &lt;code>Yes&lt;/code>.&lt;/li>
&lt;li>When the install is &lt;code>Done ...&lt;/code>, click &lt;code>Close&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3rd-party-omv-plugins">3rd Party OMV-Plugins&lt;/h2>
&lt;p>Follow the instructions on the following page to enable the OMV-Extras plugin repository.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://omv-extras.org/simple/index.php?id=how-to-install-omv-extras-plugin">http://omv-extras.org/simple/index.php?id=how-to-install-omv-extras-plugin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="backports-32-kernel">Backports 3.2 Kernel&lt;/h3>
&lt;p>I updated the Kernel to 3.2 because it better supports the N54L hardware, in
particular the embedded graphics controller. The Linux 3.2 kernel can be
installed via OMV-Extras.&lt;/p>
&lt;ul>
&lt;li>&lt;code>System -&amp;gt; OMV-Extras.org -&amp;gt; Install Backports 3.2 kernel&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="plex-media-server">Plex Media Server&lt;/h3>
&lt;p>Plex Media Server is available as a plugin once the OMV-Extras plugin
repository is enabled. Plex is managed via the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>Services -&amp;gt; Plex&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="transmission">Transmission&lt;/h3>
&lt;p>Transmission is available as a plugin once the OMV-Extras plugin repository is
enabled. Transmission is managed via the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>Services -&amp;gt; BitTorrent -&amp;gt; Server&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s all very straight forward. I use the following block list.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz">http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>That pretty much covers the stuff I won&amp;rsquo;t remember in the future. I&amp;rsquo;m considering
adding LXC and Dropbox in the coming that will require some manual steps.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://thekentishman.wordpress.com/guides-2/open-media-vault-set-up/">http://thekentishman.wordpress.com/guides-2/open-media-vault-set-up/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://myhpmicroserver.com/wiki/Main_Page">http://myhpmicroserver.com/wiki/Main_Page&lt;/a>&lt;/li>
&lt;/ul></description><summary>Open Media Vault on the HP ProLiant MicroServer G7 N54L</summary></item><item><title>Basic Debian Setup for Squeeze and Wheezy</title><link>https://wimpysworld.com/posts/basic-debian-setup-for-squeeze-and-wheezy/</link><pubDate>Tue, 06 Aug 2013 20:07:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/basic-debian-setup-for-squeeze-and-wheezy/</guid><description>&lt;p>Recently I&amp;rsquo;ve been deploying &lt;a href="http://www.debian.org">Debian&lt;/a> 6.0 (Squeeze) and
7.0 (Wheezy) servers for some personal projects. These servers are provisioned
in different ways:&lt;/p>
&lt;ul>
&lt;li>Open Media Vault using a Squeeze pre-seed&lt;/li>
&lt;li>VPS powered by &lt;a href="http://http://lxc.sourceforge.net/">LXC&lt;/a> deployed via &lt;code>debootstrap&lt;/code>&lt;/li>
&lt;li>VPS powered by &lt;a href="http://www.linux-kvm.org">KVM&lt;/a> using the hosting providers Wheezy pre-seed&lt;/li>
&lt;/ul>
&lt;p>Consequently the basic install differs on each instance and requires a little
bit of post install tweaking to get them all consistent. This blog post is a
quick reference for the post install steps I complete on Debian servers.&lt;/p>
&lt;h1 id="timezone--locale">Timezone &amp;amp; Locale&lt;/h1>
&lt;p>Select your timezone.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dpkg-reconfigure tzdata
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Select your locale(s).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dpkg-reconfigure locales
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure the locales are correctly generated. Replace &lt;code>en_GB.UTF-8&lt;/code> with your
default locale.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>update-locale &lt;span style="color:#eedd82">LANG&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LANGUAGE&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LC_ALL&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LC_TIME&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LC_CTYPE&lt;/span>=en_GB.UTF-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>locale -a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>locale-gen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="hostname">Hostname&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo box.example.org &amp;gt; /etc/hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/bin/hostname -F /etc/hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update &lt;code>/etc/hosts&lt;/code> accordingly.&lt;/p>
&lt;h1 id="time">Time&lt;/h1>
&lt;p>Keeping time is essential.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install ntp ntpdate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Force a clock sync.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>service ntp stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ntpdate -s pool.ntp.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>service ntp start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If your VPS is a Xen DomU then checkout the following.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://jinntech.blogspot.co.uk/2009/03/xen-and-keeping-time.html">http://jinntech.blogspot.co.uk/2009/03/xen-and-keeping-time.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="essentials">Essentials&lt;/h1>
&lt;p>These are the essential tools I require.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install build-essential curl git htop less lsb-release nano &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>rsync screen sudo tree whois
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="users">Users&lt;/h1>
&lt;p>The following will create a user with &lt;code>sudo&lt;/code> capabilities.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>useradd user_a --create-home --shell /bin/bash --user-group &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>--groups adm,dialout,cdrom,plugdev,sudo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a regular user.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>useradd user_b --create-home --shell /bin/bash --user-group --groups adm,dialout,cdrom,plugdev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Assign a password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo user_a:mypassword | chpasswd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An existing user can be made a sudoer by simply adding them to the &lt;code>sudo&lt;/code> group.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>adduser user_b sudo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="firewall">Firewall&lt;/h1>
&lt;p>I use firewall my VPS server with &lt;code>ufw&lt;/code>. This is my initial configuration that
allow access via SSH only.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ufw
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configuring &lt;code>ufw&lt;/code> is simple but make sure you have console access to the host
you are configuring just in case you lock yourself out.&lt;/p>
&lt;p>&lt;strong>NOTE!&lt;/strong> When enabling &lt;code>ufw&lt;/code> the chains are flushed and connections may be
dropped. You can add rules to the firewall before enabling it however, so if you
are testing &lt;code>ufw&lt;/code> on a remote machine it is recommended you perform&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ufw allow ssh/tcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;before running &lt;code>sudo ufw enable&lt;/code>. Once the firewall is enabled, adding and
removing rules will not flush the firewall, although modifying an existing rule
will.&lt;/p>
&lt;p>Set the default behaviour to deny all incoming connections.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw default deny
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open up TCP port 22 but with rate limiting enabled which will deny connections
from an IP address that has attempted to initiate 6 or more connections in the
last 30 seconds. Ideal for protecting &lt;code>sshd&lt;/code> but you should conisder other
&lt;a href="https://wimpysworld.com/posts/ssh-brute-force-defense/">SSH brute force defense&lt;/a>
techniques as well.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw limit ssh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To enable the firewall you also have to do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw enable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On low-end servers it might be beneficial to disable logging.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw logging off
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see the status of the firewall using &lt;code>sudo ufw status&lt;/code>.&lt;/p>
&lt;h1 id="intrusion-prevention">Intrusion prevention&lt;/h1>
&lt;p>I use either &lt;code>denyhosts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install denyhosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Purge entries older than 5 days, denied hosts will only be purged twice and
disable email alerts.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/#PURGE_DENY = 5d/PURGE_DENY = 5d/&amp;#39;&lt;/span> /etc/denyhosts.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/#PURGE_THRESHOLD = 2/PURGE_THRESHOLD = 2/&amp;#39;&lt;/span> /etc/denyhosts.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/root@localhost//&amp;#39;&lt;/span> /etc/denyhosts.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart &lt;code>denyhosts&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service denyhosts restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also see &lt;a href="http://flexion.org/posts/2012-11-ssh-brute-force-defence.html">SSH brute force defence&lt;/a>.&lt;/p>
&lt;h1 id="boot-options">Boot options&lt;/h1>
&lt;p>These servers are headless and often remote, therefore I enable &lt;code>fsck&lt;/code> auto repair.&lt;/p>
&lt;h2 id="squeeze">Squeeze&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/FSCKFIX=no/FSCKFIX=yes/&amp;#39;&lt;/span> /etc/default/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="wheezy">Wheezy&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/#FSCKFIX=no/FSCKFIX=yes/&amp;#39;&lt;/span> /etc/default/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="repositories">Repositories&lt;/h1>
&lt;p>&lt;code>lsb-release&lt;/code> was installed earlier. This is what I put in &lt;code>/etc/apt/sources.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list&lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># $(lsb_release -cs)-updates, previously known as &amp;#39;volatile&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I replace &lt;code>ftp.uk&lt;/code> with &lt;code>ftp.us&lt;/code> for servers located in the United States.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/ftp\.uk/ftp\.us/g&amp;#39;&lt;/span> /etc/apt/sources.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="backports">Backports&lt;/h2>
&lt;p>I add the Backports repository in order to access some updated packages.&lt;/p>
&lt;h3 id="squeeze-1">Squeeze&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list.d/backports.list &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian-backports $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian-backports $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="wheezy-1">Wheezy&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list.d/backports.list &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>All backports are deactivated by default (i.e. the packages are pinned to
100 by using ButAutomaticUpgrades: yes in the Release files. If you want to
install something from backports run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get -t wheezy-backports install &lt;span style="color:#87ceeb">&amp;#34;package&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="mta">MTA&lt;/h1>
&lt;p>sSMTP is a simple MTA to deliver mail from a computer to a mail hub. sSMTP is
simple and lightweight.&lt;/p>
&lt;h2 id="remove-exim4">Remove exim4&lt;/h2>
&lt;p>Some VPS Debian templates from VPS providers have exim4 installed and running
by default. Remove it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service exim4 stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge exim4 exim4-base exim4-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-ssmtp">Install sSMTP&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install ssmtp bsd-mailx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssmtp-gmail-configuration">sSMTP Gmail Configuration&lt;/h2>
&lt;p>I use Gmail as my smart host, here is an example configuration for
&lt;code>/etc/ssmtp/ssmtp.conf&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Config file for sSMTP sendmail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># The person who gets all mail for userids &amp;lt; 1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Make this empty to disable rewriting.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">root&lt;/span>=root@example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># The place where the mail goes. The actual machine name is required no&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># MX records are consulted. Commonly mailhosts are named mail.domain.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">mailhub&lt;/span>=smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Where will the mail seem to come from?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">rewriteDomain&lt;/span>=
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># The full hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">hostname&lt;/span>=box.example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Are users allowed to set their own From: address?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># YES - Allow the user to specify their own From: address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># NO - Use the system generated From: address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">FromLineOverride&lt;/span>=YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Gmail requires TLS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">UseTLS&lt;/span>=YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">UseSTARTTLS&lt;/span>=YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Username and password for Gmail servers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">AuthUser&lt;/span>=yourgmailname@gmail.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">AuthPass&lt;/span>=youpassword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">AuthMethod&lt;/span>=LOGIN
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then add each account that you want to be able to send mail from by editing
&lt;code>/etc/ssmtp/revaliases&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>root:username@gmail.com:smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user_a:username@gmail.com:smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user_b:username@gmail.com:smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="https://wiki.debian.org/sSMTP">https://wiki.debian.org/sSMTP&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="log-and-package-monitoring">Log and package monitoring&lt;/h1>
&lt;p>My personal VPS server are dotted about the place but I like to keep an eye on
them and I find &lt;code>apticron&lt;/code> and &lt;code>logwatch&lt;/code> are very useful for that.&lt;/p>
&lt;h2 id="apticron">apticron&lt;/h2>
&lt;p>apticron is a simple tool to mail about pending package updates.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install apticron
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="logwatch">logwatch&lt;/h2>
&lt;p>Logwatch is a modular log analyser that runs every night and mails you the results.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install logwatch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="lighter">Lighter&lt;/h1>
&lt;p>Some of my servers have fairly low resources, these are some simple changes that
can save a bit of RAM or disk space.&lt;/p>
&lt;h2 id="aptitude">aptitude&lt;/h2>
&lt;p>I don&amp;rsquo;t use it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge aptitude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="d-bus">D-Bus&lt;/h2>
&lt;p>D-Bus is a message bus, used for sending messages between applications.
Some VPS provider Debian templates have D-Bus and avahi installed. I don&amp;rsquo;t
require these on Internet facing servers so I remove them. If an application
pull in D-Bus as a requirement that is fine, but for this initial server
state I remove it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge dbus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="at">at&lt;/h2>
&lt;p>&lt;code>at&lt;/code> provides delayed job execution and batch processing. I don&amp;rsquo;t use it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service atd stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge at
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ngetty">ngetty&lt;/h2>
&lt;p>Ngetty is a single-process &lt;code>getty&lt;/code> replacement, so instead of running 6 &lt;code>getty&lt;/code>
processes consuming up to 3MB of RAM each, you can use a single &lt;code>ngetty&lt;/code> process
using less than 1MB of RAM total.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ngetty
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit &lt;code>/etc/inittab&lt;/code>, comment out &lt;code>getty&lt;/code> and add &lt;code>ngetty&lt;/code> like so.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>#1:2345:respawn:/sbin/getty 38400 tty1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#2:23:respawn:/sbin/getty 38400 tty2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#3:23:respawn:/sbin/getty 38400 tty3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#4:23:respawn:/sbin/getty 38400 tty4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#5:23:respawn:/sbin/getty 38400 tty5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#6:23:respawn:/sbin/getty 38400 tty6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ng:2345:respawn:/sbin/ngetty 1 2 3 4 5 6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart inittab&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>telinit q
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="http://haydenjames.io/replacing-getty-ngetty-debian/">http://haydenjames.io/replacing-getty-ngetty-debian/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>That about covers the general post installation step I complete on my Debian
servers.&lt;/p>
&lt;h2 id="clean-up">Clean up.&lt;/h2>
&lt;p>Remove any packages that are no longer required and clean up
the package cache.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get autoremove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get autoclean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get clean
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><summary>Consistent server configuration for Debian Squeeze &amp;amp; Wheezy</summary></item><item><title>NFS and CIFS mounts with systemd</title><link>https://wimpysworld.com/posts/nfs-and-cifs-mounts-with-systemd/</link><pubDate>Fri, 26 Jul 2013 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/nfs-and-cifs-mounts-with-systemd/</guid><description>&lt;p>I have an NFS server at home and at work we have Windows (not Samba) servers.
When I first switched to &lt;code>systemd&lt;/code> I noticed that boot and shutdown were
seriously delayed while NFS and CIFS were mounted/unmounted. &lt;code>systemd&lt;/code> was
designed to eliminate those kinds of delays, so I did some research to find
out how to correctly mount NFS and CIFS using &lt;code>systemd&lt;/code>.&lt;/p>
&lt;h1 id="systemd-friendly-fstab">systemd friendly fstab&lt;/h1>
&lt;p>Below are some example &lt;code>/etc/fstab&lt;/code> entries for NFS and CIFS mounts that are
&lt;code>systemd&lt;/code> friendly, the pertinent mount options are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>noauto,x-systemd.automount,_netdev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>I found that &lt;code>noauto,x-systemd.automount&lt;/code> improved the boot performance and
&lt;code>_netdev&lt;/code> improved the shutdown performance.&lt;/p>
&lt;h2 id="nfs">NFS&lt;/h2>
&lt;p>This is typically what I have use for mounting my home NAS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>nfs-server:/SomeData /media/SomeData nfs defaults,noauto,x-systemd.automount,_netdev,noatime 0 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cifs">CIFS&lt;/h2>
&lt;p>This is what I use at work to work correctly with Windows Server.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>//cifs-server/MoreData /media/MoreData cifs defaults,noauto,x-systemd.automount,_netdev,rw,noperm,credentials=/home/username/.smb-credentials 0 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of the credentials file looks something like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>username=&lt;span style="color:#87ceeb">yourusername&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password=&lt;span style="color:#87ceeb">yourpassword&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>domain=&lt;span style="color:#87ceeb">COMPANYDOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="references">References&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Systemd#Filesystem_mounts">https://wiki.archlinux.org/index.php/Systemd#Filesystem_mounts&lt;/a>&lt;/li>
&lt;/ul></description><summary>Wait for network when mounting NFS and CIFS volumes</summary></item><item><title>Spring cleaning Arch Linux</title><link>https://wimpysworld.com/posts/spring-cleaning-arch-linux/</link><pubDate>Tue, 07 May 2013 18:09:21 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/spring-cleaning-arch-linux/</guid><description>&lt;p>About a year ago I migrated all my workstations, laptops and netbooks to
&lt;a href="http://www.archlinux.org">Arch Linux&lt;/a>. Since then, I&amp;rsquo;ve setup Arch Linux
on a &lt;a href="http://www.raspberrypi.org">Raspberry Pi&lt;/a> and this server was also
recently migrated to Arch Linux.&lt;/p>
&lt;p>I&amp;rsquo;ve had no major issues issues during the last year and have upgraded through
five major Linux kernels, transitioned to &lt;code>systemd&lt;/code> and upgraded from GNOME 3.2
to 3.8.&lt;/p>
&lt;p>Although I have been disciplined about &lt;a href="https://wiki.archlinux.org/index.php/Pacnew_and_Pacsave_Files">merging &lt;code>.pacnew&lt;/code> files&lt;/a>
frequently, during the upgrades and experimentation&amp;rsquo;s I have packages installed
that I no longer require and obsolete files kicking about.&lt;/p>
&lt;p>After the upgrade to GNOME 3.8 I decided to clean up a little. I rarely dip
into the AUR, but when I do I always use &lt;a href="https://aur.archlinux.org/packages/packer/">&lt;code>packer&lt;/code>&lt;/a>
to clearly separate what is official from what is not.&lt;/p>
&lt;h2 id="finding-what-is-installed">Finding what is installed&lt;/h2>
&lt;p>The following commands are useful for identifying installed packages based on
where they were installed from. The package lists generated from the commands below
can be quite big but often highlight packages that I know I&amp;rsquo;m no longer using nor
require.&lt;/p>
&lt;h3 id="listing-installed-packages">Listing installed packages&lt;/h3>
&lt;p>List packages installed from the official repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -Qq | grep -Fv -f &amp;lt;(pacman -Qqm)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>List packages installed from the AUR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -Qqm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="listing-installed-packages-by-size">Listing installed packages by size&lt;/h3>
&lt;p>Use &lt;code>pacsysclean&lt;/code> to list installed packages sorted by size, it helps identify
large packages that are no longer required which can the be manually uninstalled.&lt;/p>
&lt;h3 id="listing-orphaned-packages">Listing orphaned packages&lt;/h3>
&lt;p>List orphaned packages install from the official repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -Qqtd | grep -Fv -f &amp;lt;(pacman -Qqtdm)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>List ophaned packages from the AUR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -Qqmtd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="getting-package-information">Getting package information&lt;/h3>
&lt;p>Get package information for a package in the official repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -Si &amp;lt;package&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get package information for a package in the AUR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>packer -Si &amp;lt;package&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="removing-orphaned-packages">Removing orphaned packages&lt;/h2>
&lt;p>Removing orphaned packages manually can be very time consuming, but is by far the
safer option. However, I decided to take a brave pill a uninstall all orphaned
packages automatically.&lt;/p>
&lt;p>Remove all orphaned packages installed from the official repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -Rs &lt;span style="color:#87ceeb">`&lt;/span>pacman -Qqtd | grep -Fv -f &amp;lt;(pacman -Qqtdm)&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove all ophanced packages install from the AUR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -Rs &lt;span style="color:#f00">$(&lt;/span>pacman -Qqtdm&lt;span style="color:#f00">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="re-installing-what-you-do-need">Re-installing what you do need&lt;/h2>
&lt;p>When you do something scary like removing all the obsolete packages automatically,
then you should really make sure you do have everything install that you require.&lt;/p>
&lt;h3 id="re-install-64-bit-base">Re-install 64-bit base&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed &lt;span style="color:#87ceeb">`&lt;/span>pacman -Sqg base multilib-devel | grep -v gcc-libs | tr &lt;span style="color:#87ceeb">&amp;#39;\n&amp;#39;&lt;/span> &lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="re-install-32-bit-base">Re-install 32-bit base&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed &lt;span style="color:#87ceeb">`&lt;/span>pacman -Sqg base base-devel | tr &lt;span style="color:#87ceeb">&amp;#39;\n&amp;#39;&lt;/span> &lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reinstall the groups required for a GNOME 3 desktop.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed &lt;span style="color:#87ceeb">`&lt;/span>pacman -Sqg gnome gnome-extra telepathy | tr &lt;span style="color:#87ceeb">&amp;#39;\n&amp;#39;&lt;/span> &lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install all missing dependencies for packages in the official repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed &lt;span style="color:#87ceeb">`&lt;/span>pacman -Si &lt;span style="color:#eedd82">$@&lt;/span> 2&amp;gt;/dev/null | awk -F &lt;span style="color:#87ceeb">&amp;#34;: &amp;#34;&lt;/span> -v &lt;span style="color:#eedd82">filter&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;^Depends&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">\ &lt;/span>&lt;span style="color:#87ceeb">&amp;#39;$0 ~ filter {gsub(/[&amp;gt;=&amp;lt;][^ ]*/,&amp;#34;&amp;#34;,$2) ; gsub(/ +/,&amp;#34;\n&amp;#34;,$2) ; print $2}&amp;#39;&lt;/span> | grep -v smtp- | sort -u&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install all missing dependencies for packages in the AUR. This will re-install even if the
package is already installed. I can&amp;rsquo;t be arsed to filter it out for a one liner.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo packer -S --noedit --noconfirm &lt;span style="color:#87ceeb">`&lt;/span>packer -Si &lt;span style="color:#f00">$(&lt;/span>pacman -Qqm&lt;span style="color:#f00">)&lt;/span> 2&amp;gt;/dev/null | awk -F &lt;span style="color:#87ceeb">&amp;#34;: &amp;#34;&lt;/span> -v &lt;span style="color:#eedd82">filter&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;^Depends&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">\ &lt;/span>&lt;span style="color:#87ceeb">&amp;#39;$0 ~ filter {gsub(/[&amp;gt;=&amp;lt;][^ ]*/,&amp;#34;&amp;#34;,$2) ; gsub(/ +/,&amp;#34;\n&amp;#34;,$2) ; print $2}&amp;#39;&lt;/span> | grep -v java- | sort -u&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="find-files-not-associated-with-a-package">Find files not associated with a package&lt;/h2>
&lt;p>When packages are removed they may leave some files behind. The following will find all files
not associated with a package. These files can &lt;em>not&lt;/em> be automatically deleted, each entry
requires assessment.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -Qlq | sort -u &amp;gt; /tmp/db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo find /bin /etc /sbin /usr ! -name lost+found &lt;span style="color:#87ceeb">\(&lt;/span> -type d -printf &lt;span style="color:#87ceeb">&amp;#39;%p/\n&amp;#39;&lt;/span> -o -print &lt;span style="color:#87ceeb">\)&lt;/span> | sort &amp;gt; /tmp/fs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>comm -23 /tmp/fs /tmp/db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As with all spring cleaning chores, I got bored by this stage as my workstation
was looking pretty tidy. Much of what is presented in this blog post is a rehash
of what others have already contributed to the &lt;a href="https://wiki.archlinux.org/">Arch Linux Wiki&lt;/a>.
I&amp;rsquo;ve just organised what &amp;ldquo;&lt;em>Works For Me&lt;/em> ™&amp;rdquo; so I know what to do next year.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Pacman_Tips">https://wiki.archlinux.org/index.php/Pacman_Tips&lt;/a>&lt;/li>
&lt;/ul></description><summary>How to clean up installed packages on Arch Linux.</summary></item><item><title>get-iplayer on Debian 6.0</title><link>https://wimpysworld.com/posts/get-iplayer-on-debian-6.0/</link><pubDate>Mon, 25 Mar 2013 18:09:21 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/get-iplayer-on-debian-6.0/</guid><description>&lt;p>I use &lt;a href="http://www.infradead.org/get_iplayer/html/get_iplayer.html">get-iplayer&lt;/a>
to download TV programs so I can watch them on the devices that suit me, when it
suits me. What follows is how I install &lt;code>get-iplayer&lt;/code> on a headless Debian 6.0
server I have a home. The server in question is really low powered so building
from source was not an option.&lt;/p>
&lt;p>In order to install the latest version of &lt;code>get-iplayer&lt;/code> (currently 2.82) on
&lt;a href="http://www.debian.org">Debian&lt;/a> Squeeze a couple of additional package
repositories need enabling.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.deb-multimedia.org/">Debain Multimedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://backports-master.debian.org/">Debian Backports&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Enable the Debain Backports repository by adding the following line to
&lt;code>/etc/apt/sources.list.d/backports.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://backports.debian.org/debian-backports squeeze-backports main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the Debain Multimedia repository by adding the following lines to
&lt;code>/etc/apt/sources.list.d/multimedia.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://www.deb-multimedia.org squeeze main non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://www.deb-multimedia.org squeeze-backports main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the &lt;code>deb-multimedia-keyring&lt;/code> package.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get --allow-unauthenticated install deb-multimedia-keyring
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>get-iplayer&lt;/code> (currently v2.78) from the official Debian repositories,
this will also install the dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install get-iplayer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the &lt;code>get-iplayer&lt;/code> suggested packages.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ffmpeg rtmpdump libdata-dump-perl libid3-tools libcrypt-ssleay-perl libio-socket-ssl-perl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I have seen it suggested that &lt;code>mplayer&lt;/code> should also be installed. I&amp;rsquo;ve not
determined if that is an absolute requirement. But this is how to install it
on a headless Debian computer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get --no-install-recommends install mplayer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, upgrade &lt;code>get-iplayer&lt;/code> to v2.82.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install libmp3-tag-perl libxml-simple-perl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget http://ftp.uk.debian.org/debian/pool/main/g/get-iplayer/get-iplayer_2.82-2_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i get-iplayer_2.82-2_all.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point &lt;code>get-iplayer&lt;/code> should be good to go and the &lt;a href="http://www.infradead.org/get_iplayer/html/get_iplayer.html">get-iplayer&lt;/a>
website and &lt;code>man get-iplayer&lt;/code> will assist you.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.infradead.org/get_iplayer/html/get_iplayer.html">http://www.infradead.org/get_iplayer/html/get_iplayer.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.deb-multimedia.org/">http://www.deb-multimedia.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://backports-master.debian.org/">http://backports-master.debian.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://lists.infradead.org/pipermail/get_iplayer/2012-June/003065.html">http://lists.infradead.org/pipermail/get_iplayer/2012-June/003065.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tech.leeporte.co.uk/get_iplayer-under-debian-squeeze/">http://tech.leeporte.co.uk/get_iplayer-under-debian-squeeze/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing get-iplayer on a Debian (Squeeze) 6.0</summary></item><item><title>Headless Debian 6.0 Torrent Server</title><link>https://wimpysworld.com/posts/headless-debian-6.0-torrent-server/</link><pubDate>Thu, 21 Mar 2013 17:35:22 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/headless-debian-6.0-torrent-server/</guid><description>&lt;p>I recently switched ISPs at home and now have unlimited high speed broadband.&lt;/p>
&lt;p>Finally I can participate in torrenting Linux .ISO images. I always download
the latest distros using &lt;a href="http://en.wikipedia.org/wiki/BitTorrent">BitTorrent&lt;/a>
and can now contribute to the community by seeding the distros I&amp;rsquo;ve downloaded.&lt;/p>
&lt;p>I have a small (in size and resources) &lt;a href="http://www.debian.org">Debian&lt;/a> 6.0
headless server at home that I wanted to turn into a torrent box. I&amp;rsquo;m a big fan
of &lt;a href="http://www.transmissionbt.com/">Transmission&lt;/a> since it can be managed from
the shell, web and Android phone/tablet. Sadly, the Transmission packages in the
official Debain squeeze repositories are quite old, 2.03 at the time of writing,
and there are no Transmission packages in &lt;a href="http://backports-master.debian.org/">Debian Backports&lt;/a>.&lt;/p>
&lt;p>However after flexing my &lt;em>google-fu&lt;/em> I found a &lt;a href="http://apt.balocco.name/changelog.txt">3rd party Debian Squeeze
repository&lt;/a> that includes fairly current
(2.73 at the time of writing) Transmission packages specifically for headless use.
Yah!&lt;/p>
&lt;h2 id="install-transmission-daemon">Install Transmission Daemon&lt;/h2>
&lt;p>First become root.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo -s -H
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the repository key.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-key adv --keyserver keyserver.ubuntu.com --recv-key 92B84A1E
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;deb http://apt.balocco.name squeeze main&amp;#34;&lt;/span> &amp;gt; /etc/apt/sources.list.d/balocco.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the package list.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install Transmission.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install transmission-cli transmission-daemon transmission-webinterface
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="basic-configuration">Basic Configuration&lt;/h2>
&lt;p>The Transmission settings can be found in &lt;code>/etc/transmission-daemon/settings.json&lt;/code>.&lt;/p>
&lt;p>&lt;strong>If &lt;code>transmission-daemon&lt;/code> is running when you make changes to &lt;code>settings.json&lt;/code>
the changes you make will be discarded the next time &lt;code>transmission-daemon&lt;/code> is started.&lt;/strong>&lt;/p>
&lt;p>Therefore either stop &lt;code>transmission-daemon&lt;/code> before you make any changes or you can make
the daemon reload &lt;code>settings.json&lt;/code> by sending it the SIGHUP signal.&lt;/p>
&lt;h3 id="connect-from-anywhere">Connect from anywhere&lt;/h3>
&lt;p>If you want to be able to connect to Transmission from anywhere on the Internet
stop &lt;code>transmission-daemon&lt;/code>, make the following changes to &lt;code>settings.json&lt;/code> and
then start &lt;code>transmission-daemon&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;#34;rpc-password&amp;#34;&lt;/span>: &lt;span style="color:#87ceeb">&amp;#34;YourPlainTextPassword&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;#34;rpc-username&amp;#34;&lt;/span>: &lt;span style="color:#87ceeb">&amp;#34;YourUsername&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;#34;rpc-whitelist-enabled&amp;#34;&lt;/span>: &lt;span style="color:#f00">false&lt;/span>,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>rpc-username&lt;/code> field will need adding but you can edit the existing entry
for &lt;code>rpc-password&lt;/code>. Enter the &lt;code>rpc-password&lt;/code> as a plain text string, Transmission
will automatically convert the password to a hash the next time it is started.&lt;/p>
&lt;h2 id="connect-via-a-browser">Connect via a browser&lt;/h2>
&lt;p>You should now be able to access the Transmission web interface via
&lt;code>http://yourhost.example.org:9091&lt;/code>. If you didn&amp;rsquo;t change the username and password
(you really should) the defaults are:&lt;/p>
&lt;ul>
&lt;li>Username : &lt;code>transmission&lt;/code>&lt;/li>
&lt;li>Password : &lt;code>transmission&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="connect-via-android">Connect via Android&lt;/h2>
&lt;p>I have an Android phone and an Android tablet. I use
&lt;a href="https://play.google.com/store/apps/details?id=com.neogb.rtac">Remote Transmission&lt;/a>
on my Android devices to manage my torrent box.&lt;/p>
&lt;h2 id="connect-via-the-shell">Connect via the shell&lt;/h2>
&lt;p>If, like me, you spend the majority of you time at the shell. Then
&lt;a href="https://github.com/fagga/transmission-remote-cli">transmission-remote-cli&lt;/a> is
probably for you. All my workstation run &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a> so
I install &lt;code>transmission-remote-cli&lt;/code> as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S transmission-remote-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See the GitHub project page for &lt;code>tramission-remote-cli&lt;/code> for instructions on how
to connect to a remote Transmission daemon.&lt;/p>
&lt;h2 id="block-list">Block List&lt;/h2>
&lt;p>Regardless of how you intend to use Transmission you should enable a block list,
this can be done via &lt;code>settings.json&lt;/code> and the web interface. The following block
lists are a good start.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz">http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.bluetack.co.uk/config/level1.gz">http://www.bluetack.co.uk/config/level1.gz&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>That covers the basics for getting Transmission running on headless Debian 6.0 and
how to connect to it from just about anywhere and on any device. I recommend reading
the &lt;a href="https://trac.transmissionbt.com/wiki">Trasmission Wiki&lt;/a> as Transmission is
capable of so much more than I have covered in this blog post.&lt;/p>
&lt;p>Happy torrenting.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://apt.balocco.name/changelog.txt">http://apt.balocco.name/changelog.txt&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.lowendtalk.com/discussion/1001/squeeze-repository">http://www.lowendtalk.com/discussion/1001/squeeze-repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://trac.transmissionbt.com/wiki/EditConfigFiles">https://trac.transmissionbt.com/wiki/EditConfigFiles&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/fagga/transmission-remote-cli">https://github.com/fagga/transmission-remote-cli&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.iblocklist.com/">http://www.iblocklist.com/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Transmission daemon on headless Debian (Squeeze) 6.0</summary></item><item><title>Install nginx on Debian</title><link>https://wimpysworld.com/posts/install-nginx-on-debian/</link><pubDate>Thu, 14 Mar 2013 18:09:21 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/install-nginx-on-debian/</guid><description>&lt;p>My webserver of choice is &lt;a href="http://nginx.org/">nginx&lt;/a>, it&amp;rsquo;s resource friendly,
fast, reliable and versatile.&lt;/p>
&lt;p>I have a resource constrained Debian 6.0 &amp;ldquo;server&amp;rdquo; and wanted to deploy nginx on
it for testing. Sadly, the nginx package in the Squeeze repositories is very old.
Fortunately, the nginx team maintain a Debian package repository.&lt;/p>
&lt;p>Add the nginx repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/apt/sources.list.d/nginx.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="squeeze">Squeeze&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://nginx.org/packages/debian/ squeeze nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://nginx.org/packages/debian/ squeeze nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="wheezy">Wheezy&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://nginx.org/packages/debian/ wheezy nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://nginx.org/packages/debian/ wheezy nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Download the nginx package signing key.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget http://nginx.org/keys/nginx_signing.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the nginx package signing key to the keyring.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-key add nginx_signing.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install nginx.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I run &lt;code>ufw&lt;/code> on my VPS so use the following to allow external access to my
website.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw allow 80/tcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>nginx is installed and can be configured in the usual way.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://wiki.nginx.org/Install">http://wiki.nginx.org/Install&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.nginx.org/Pgp">http://wiki.nginx.org/Pgp&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing nginx on a Debian (Squeeze) 6.0 and (wheezy) 7.0</summary></item><item><title>nullmailer on Arch Linux</title><link>https://wimpysworld.com/posts/nullmailer-on-arch-linux/</link><pubDate>Sat, 09 Mar 2013 23:27:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/nullmailer-on-arch-linux/</guid><description>&lt;p>I&amp;rsquo;ve been a fan of &lt;a href="http://untroubled.org/nullmailer/">nullmailer&lt;/a> for some years
now, so much so that I took ownership of the &lt;a href="https://aur.archlinux.org/packages/nullmailer/">nullmailer package for Arch Linux&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>nullmailer is a sendmail/qmail/etc replacement MTA for hosts which
relay to a fixed set of smart relays. It is designed to be simple to
configure, secure, and easily extendable.&lt;/p>
&lt;/blockquote>
&lt;p>The other advantage &lt;code>nullmailer&lt;/code> has compared to similar tools is that is queues
email until it is able to deliver it upstream.&lt;/p>
&lt;p>Install &lt;code>nullmailer&lt;/code> as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>packer -S --noedit --noconfirm nullmailer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configuring &lt;code>nullmailer&lt;/code> to relay via Gmail can be achieved using
&lt;a href="http://en.wikipedia.org/wiki/SMTPS">SMTPS&lt;/a> or
&lt;a href="http://en.wikipedia.org/wiki/Mail_submission_agent">MSA&lt;/a>. &lt;code>nullmailer&lt;/code> has
had these capabilities since 1.10. The following provides some useful clues
&lt;code>/usr/lib/nullmailer/smtp --help&lt;/code>.&lt;/p>
&lt;p>While these examples are specific to relaying via Gmail, you can see it is
trivial to adapt them to any other mail host.&lt;/p>
&lt;h2 id="relay-via-gmail-using-msa">Relay via Gmail using MSA&lt;/h2>
&lt;p>Add to following to &lt;code>/etc/nullmailer/remotes&lt;/code>. I prefer this technique.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>smtp.gmail.com smtp --port=&lt;span style="color:#f60">587&lt;/span> --auth-login --user=you@gmail.com --pass=Yourpassword --starttls
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="relay-via-gmail-using-smtps">Relay via Gmail using SMTPS&lt;/h2>
&lt;p>Add to following to &lt;code>/etc/nullmailer/remotes&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>smtp.gmail.com smtp --port=&lt;span style="color:#f60">465&lt;/span> --auth-login --user=you@gmail.com --pass=Yourpassword --ssl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you&amp;rsquo;ve got &lt;code>/etc/nullmailer/remotes&lt;/code> configured start the nullmailer service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start nullmailer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To test &lt;code>nullmailer&lt;/code> can relay email correctly do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;Test 1&amp;#34;&lt;/span> | mailx -s &lt;span style="color:#87ceeb">&amp;#34;Test One&amp;#34;&lt;/span> me@example.org
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see what &lt;code>nullmailer&lt;/code> is up to by checking the systemd journal or syslog
(if you&amp;rsquo;ve syslog enabled systemd). This is how to get the logs from the systemd
journal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl &lt;span style="color:#eedd82">_SYSTEMD_UNIT&lt;/span>=nullmailer.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or via syslog.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo grep nullmailer /var/log/daemon.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you&amp;rsquo;re happy &lt;code>nullmailer&lt;/code> is working enable the systemd unit.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl enable nullmailer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Email will now flow as required.&lt;/p></description><summary>Configuring nullmailer on Arch Linux to relay email via Gmail</summary></item><item><title>Uncomplicated Firewall (UFW) on Arch Linux</title><link>https://wimpysworld.com/posts/uncomplicated-firewall-ufw-on-arch-linux/</link><pubDate>Sat, 09 Mar 2013 08:37:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/uncomplicated-firewall-ufw-on-arch-linux/</guid><description>&lt;p>While migrating one of my VPS servers to &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a>
I deployed &lt;a href="https://wiki.ubuntu.com/UncomplicatedFirewall">Uncomplicated Firewall (UFW)&lt;/a>
to handle basic firewall duties. I like &lt;code>ufw&lt;/code> as it provides simple host-based
firewall management and, in my opinion, one of the better projects to come out
of the Ubuntu camp.&lt;/p>
&lt;p>Install &lt;code>ufw&lt;/code> as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -Syy -noconfirm --needed ufw
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configuring &lt;code>ufw&lt;/code> is simple but make sure you have console access to the host
you are configuring just in case you lock yourself out.&lt;/p>
&lt;p>&lt;strong>NOTE!&lt;/strong> When enabling &lt;code>ufw&lt;/code> the chains are flushed and connections may be
dropped. You can add rules to the firewall before enabling it however, so if you
are testing &lt;code>ufw&lt;/code> on a remote machine it is recommended you perform&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ufw allow ssh/tcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;before running &lt;code>sudo ufw enable&lt;/code>. Once the firewall is enabled, adding and
removing rules will not flush the firewall, although modifying an existing rule
will.&lt;/p>
&lt;p>Set the default behaviour to deny all incoming connections.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw default deny
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open up TCP port 22 but with rate limiting enabled which will deny connections
from an IP address that has attempted to initiate 6 or more connections in the
last 30 seconds. Ideal for protecting &lt;code>sshd&lt;/code> but you should conisder other
&lt;a href="https://wimpysworld.com/posts/ssh-brute-force-defense/">SSH brute force defense&lt;/a>
techniques as well.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw limit tcp/22
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;m hosting a few websites on my VPS so I open http and https.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw allow 80/tcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ufw allow 443/tcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the &lt;code>ufw&lt;/code> systemd unit.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl enable ufw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start ufw
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, &lt;code>ufw&lt;/code> is not enabled at this point. To enable the firewall you also
have to do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw enable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see the status of the firewall using &lt;code>sudo ufw status&lt;/code>.&lt;/p>
&lt;p>On low-end servers it might be beneficial to disable logging.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw logging off
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point you should have a basic firewall configured and &lt;code>ufw help&lt;/code> or the
references below will assist you.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Uncomplicated_Firewall">https://wiki.archlinux.org/index.php/Uncomplicated_Firewall&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.ubuntu.com/UncomplicatedFirewall">https://wiki.ubuntu.com/UncomplicatedFirewall&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://launchpad.net/ufw">https://launchpad.net/ufw&lt;/a>&lt;/li>
&lt;/ul></description><summary>Configuring Uncomplicated Firewall (UFW) on Arch Linux.</summary></item><item><title>Installing Nikola on Arch Linux</title><link>https://wimpysworld.com/posts/installing-nikola-on-arch-linux/</link><pubDate>Fri, 08 Mar 2013 17:13:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/installing-nikola-on-arch-linux/</guid><description>&lt;p>I&amp;rsquo;ve decided to migrate one of my servers to &lt;a href="https://www.archlinux.org/">Arch Linux&lt;/a>.
I&amp;rsquo;m not sure that a rolling release distro really suits servers but I&amp;rsquo;ve enjoyed
using Arch Linux over the last year on my workstations and the only way to
assess it&amp;rsquo;s suitability on a server is to try it. So, I&amp;rsquo;ve decided to migrate my
blog to an Arch Linux server.&lt;/p>
&lt;p>This blog post describes how to install &lt;a href="http://getnikola.com/">Nikola&lt;/a>
on Arch Linux. Nikola is a static site and blog generator written in
&lt;a href="http://www.python.org">Python&lt;/a> that I&amp;rsquo;ve been using for a few months.&lt;/p>
&lt;p>First you&amp;rsquo;ll need Python and &lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper&lt;/a>
so read my &lt;a href="https://wimpysworld.com/posts/python-and-virtualenv-on-arch-linux-and-ubuntu/">Python and virtualenv on Arch Linux and Ubuntu&lt;/a>
blog post and get yourself equipped.&lt;/p>
&lt;p>Install the Nikola dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --noconfirm --needed freetype2 libxslt libxml2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo packer -S --noconfirm --noedit libjpeg6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a &lt;code>virtualenv&lt;/code> for Nikola.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkvirtualenv -p /usr/bin/python2.7 nikola-640
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will notice your shell prompt has changed to indicate that the &lt;code>nikola-640&lt;/code>
virtualenv is now active. Install Nikola and the optional libraries I use.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install https://github.com/getnikola/nikola/archive/v6.4.0.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you intend to use the Nikola planetoid (Planet generator) plugin you&amp;rsquo;ll also
need to following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install peewee feedparser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nikola is now installed. &lt;code>nikola help&lt;/code> and the &lt;a href="http://getnikola.com/handbook.html">Nikola Handbook&lt;/a>
will assist you from here on.&lt;/p></description><summary>Install Nikola static site generator in a virtualenv on Arch Linux</summary></item><item><title>Dropbox is my Nikola publish button</title><link>https://wimpysworld.com/posts/dropbox-is-my-nikola-publish-button/</link><pubDate>Wed, 06 Mar 2013 19:01:21 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/dropbox-is-my-nikola-publish-button/</guid><description>&lt;p>When I &lt;a href="https://wimpysworld.com/posts/migrating-wordpress-to-nikola/">migrated my site to Nikola&lt;/a>
I wanted to ensure I could manage my blog from the shell, the web, Android
smartphone or Android tablet. I took some inspiration from &lt;a href="http://joehewitt.com">Joe Hewitt&amp;rsquo;s&lt;/a>
article &lt;a href="http://joehewitt.com/2011/10/03/dropbox-is-my-publish-button">Dropbox is my publish button&lt;/a>
and created a free Dropbox account which links to a shared folder on my Dropbox
Pro account. I created a simple shell script (invoked via &lt;code>cron&lt;/code> every minute)
that looks for a trigger file, if the trigger file exists Nikola publishes and
deploys the site.&lt;/p>
&lt;p>I am able to edit content from anywhere, on any device, and trigger publishing.
Very happy.&lt;/p>
&lt;p>What follows is how I install Dropbox on headless servers running Arch Linux
and Debian/Ubuntu.&lt;/p>
&lt;h2 id="installing-dropbox-daemon---all-distros">Installing Dropbox daemon - all distros&lt;/h2>
&lt;p>Download the latest Dropbox stable release for 32-bit or 64-bit.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -O dropbox.tar.gz &lt;span style="color:#87ceeb">&amp;#34;http://www.dropbox.com/download/?plat=lnx.x86&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -O dropbox.tar.gz &lt;span style="color:#87ceeb">&amp;#34;http://www.dropbox.com/download/?plat=lnx.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Extract the archive and install Dropbox in &lt;code>/opt&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xvzf dropbox.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mv ~/.dropbox-dist /opt/dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo find /opt/dropbox/ -type f -exec chmod &lt;span style="color:#f60">644&lt;/span> {} &lt;span style="color:#87ceeb">\;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">755&lt;/span> /opt/dropbox/dropboxd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">755&lt;/span> /opt/dropbox/dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ln -s /opt/dropbox/dropboxd /usr/local/bin/dropboxd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>dropboxd&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/usr/local/bin/dropboxd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see output like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>This client is not linked to any account... Please visit https://www.dropbox.com/cli_link?host_id=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx to link this machine.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visit the URL, login with your Dropbox account and link the account. You should see the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Client successfully linked, Welcome Web!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>dropboxd&lt;/code> will now create a &lt;code>~/Dropbox&lt;/code> folder and start synchronizing. Stop &lt;code>dropboxd&lt;/code> with CTRL+C.&lt;/p>
&lt;h3 id="arch-linux---systemd">Arch Linux - systemd&lt;/h3>
&lt;p>Run Dropbox as daemon with systemd. Create &lt;code>/usr/lib/systemd/system/dropbox@.service&lt;/code>
with the following content.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-systemd" data-lang="systemd">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description=&lt;span style="color:#87ceeb">Dropbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After=&lt;span style="color:#87ceeb">local-fs.target network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type=&lt;span style="color:#87ceeb">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart=&lt;span style="color:#87ceeb">/usr/local/bin/dropboxd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecReload=&lt;span style="color:#87ceeb">/bin/kill -HUP $MAINPID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KillMode=&lt;span style="color:#87ceeb">process&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart=&lt;span style="color:#87ceeb">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User=&lt;span style="color:#87ceeb">%I&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy=&lt;span style="color:#87ceeb">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the daemon for your user, run the following replace&lt;code>&amp;lt;user&amp;gt;&lt;/code> with your
username. This will ensure Dropbox is started when the system boots.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl enable dropbox@&amp;lt;user&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start dropbox@&amp;lt;user&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="debianubuntu---initd">Debian/Ubuntu - init.d&lt;/h3>
&lt;p>Run Dropbox as daemon with init.d. Create &lt;code>/etc/init.d/dropbox&lt;/code> with the
following content, replacing &lt;code>&amp;lt;user&amp;gt;&lt;/code> with your username.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Provides: dropbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Start: $local_fs $remote_fs $network $syslog $named&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Stop: $local_fs $remote_fs $network $syslog $named&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># X-Interactive: false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Short-Description: dropbox service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DROPBOX_USERS&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&amp;lt;user&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON&lt;/span>=/opt/dropbox/dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Starting dropbox...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>getent passwd &lt;span style="color:#eedd82">$dbuser&lt;/span> | cut -d: -f6&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOME&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HOMEDIR&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> start-stop-daemon -b -o -c &lt;span style="color:#eedd82">$dbuser&lt;/span> -S -u &lt;span style="color:#eedd82">$dbuser&lt;/span> -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stop() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Stopping dropbox...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>getent passwd &lt;span style="color:#eedd82">$dbuser&lt;/span> | cut -d: -f6&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon -o -c &lt;span style="color:#eedd82">$dbuser&lt;/span> -K -u &lt;span style="color:#eedd82">$dbuser&lt;/span> -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">dbpid&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>pgrep -u &lt;span style="color:#eedd82">$dbuser&lt;/span> dropbox&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -z &lt;span style="color:#eedd82">$dbpid&lt;/span> ] ; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;dropboxd for USER &lt;/span>&lt;span style="color:#eedd82">$dbuser&lt;/span>&lt;span style="color:#87ceeb">: not running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;dropboxd for USER &lt;/span>&lt;span style="color:#eedd82">$dbuser&lt;/span>&lt;span style="color:#87ceeb">: running (pid &lt;/span>&lt;span style="color:#eedd82">$dbpid&lt;/span>&lt;span style="color:#87ceeb">)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart|reload|force-reload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Usage: /etc/init.d/dropbox {start|stop|reload|force-reload|restart|status}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the init.d script.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod +x /etc/init.d/dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo update-rc.d dropbox defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-dropbox-client---all-distros">Install Dropbox client - all distros&lt;/h2>
&lt;p>It is recommended to download the official Dropbox client to configure Dropbox
and get its status.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget &lt;span style="color:#87ceeb">&amp;#34;http://www.dropbox.com/download?dl=packages/dropbox.py&amp;#34;&lt;/span> -O dropbox-cli
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#f60">755&lt;/span> dropbox-cli
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i s&lt;span style="color:#87ceeb">&amp;#39;/#!\/usr\/bin\/python/#!\/usr\/bin\/env python2/&amp;#39;&lt;/span> dropbox-cli
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mv dropbox-cli /usr/local/bin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For usage instructions run &lt;code>dropbox-cli help&lt;/code>.&lt;/p>
&lt;h2 id="disable-lan-sync">Disable LAN Sync&lt;/h2>
&lt;p>Stop Dropbox from sending LAN Sync broadcasts every 30 seconds over port 17500.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dropbox-cli lansync n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;m planning to make more use of Dropbox for content management and content
delivery, blog posts to follow.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.dropboxwiki.com/Text_Based_Linux_Install">http://www.dropboxwiki.com/Text_Based_Linux_Install&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aur.archlinux.org/packages/dropbox/">https://aur.archlinux.org/packages/dropbox/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Dropbox">https://wiki.archlinux.org/index.php/Dropbox&lt;/a>&lt;/li>
&lt;/ul></description><summary>Publishing a Nikola blog via Dropbox on a headless Linux server</summary></item><item><title>Microsoft Office 2010 on Arch Linux and Ubuntu</title><link>https://wimpysworld.com/posts/microsoft-office-2010-on-arch-linux-and-ubuntu/</link><pubDate>Tue, 29 Jan 2013 16:16:47 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/microsoft-office-2010-on-arch-linux-and-ubuntu/</guid><description>&lt;p>We have a mix of Linux and Windows users at work. My department use Linux
and the rest of the business use Windows. We been running a mixture of
&lt;a href="http://www.libreoffice.org/">LibreOffice&lt;/a> and &lt;a href="http://office.microsoft.com/en-GB">Microsoft Office&lt;/a>,
which works pretty well until you start trying to collaborate, then it gets
messy pretty quickly.&lt;/p>
&lt;p>So, it was decided at the end of 2012 to migrate everyone, including the
Linux users, to Microsoft Office 2010.&lt;/p>
&lt;p>What follows is an installation guide for &lt;a href="http://www.winehq.org/">Wine&lt;/a> and
the &lt;a href="http://office.microsoft.com/en-gb/try/">60 day trial version of Office Home and Business 2010&lt;/a>
on Arch Linux and Ubuntu. Most of this information was sourced from the Wine AppDB&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=17336">http://appdb.winehq.org/objectManager.php?sClass=version&amp;amp;iId=17336&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="wine-for-ubuntu-1204-lts-or-better">Wine for Ubuntu 12.04 LTS (or better)&lt;/h1>
&lt;p>Install Wine on Ubuntu as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:ubuntu-wine/ppa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install ttf-mscorefonts-installer samba wine1.5 wine-gecko1.8 wine-mono
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For 64-bit also install the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ia32-libs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="wine-for-arch-linux">Wine for Arch Linux&lt;/h1>
&lt;div class="alert alert-info">&lt;strong>Update&lt;/strong> I updated this section on August 8th 2013 to reflect recent changes in Arch Linux&lt;/div>
&lt;p>Install Wine on Arch Linux as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed icoutils libwbclient libxslt lib32-mpg123 p11-kit lib32-p11-kit samba wine winetricks wine-mono wine_gecko
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo packer -S --noedit --noconfirm ttf-ms-fonts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For 64-bit also install the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo packer -S --noedit --noconfirm lib32-libwbclient lib32-libxslt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="installing-office-2010">Installing Office 2010&lt;/h1>
&lt;p>Once Wine is installed, installing Office 2010 is the same for Arch Linux and Ubuntu.&lt;/p>
&lt;p>Create a clean wine prefix.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WINEPREFIX&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>&lt;span style="color:#87ceeb">/.msoffice2010&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WINEARCH&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;win32&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>winecfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Click the &lt;code>Libraries&lt;/code> tab, select &lt;code>riched20&lt;/code> and click &lt;code>Add&lt;/code>. The default entry
should read &lt;code>riched20 (native, builtin)&lt;/code>. Click &lt;code>Apply&lt;/code>, then click &lt;code>OK&lt;/code>. This will
ensure that PowerPoint starts and selection boxes display correctly.&lt;/p>
&lt;p>Install &lt;code>libxml6&lt;/code> and &lt;code>corefonts&lt;/code> with &lt;code>winetricks&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>winetricks msxml6 corefonts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the Office 2010 setup. In the example below &lt;code>X17-75058.exe&lt;/code> is the name of the
60 day trial version of Office Home and Business 2010 that I downloaded.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wine X17-75058.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Follow the installation wizard, we are only interested in running the essentials,
Word, Excel and PowerPoint. This is what I selected during the install.&lt;/p>
&lt;ul>
&lt;li>Enter your serial number.&lt;/li>
&lt;li>Leave ticked &lt;code>Attempt to automatically activate my product online.&lt;/code>&lt;/li>
&lt;li>Click &lt;code>Continue&lt;/code>&lt;/li>
&lt;li>Tick &lt;code>I accept the terms of this agreement&lt;/code>&lt;/li>
&lt;li>Click &lt;code>Continue&lt;/code>&lt;/li>
&lt;li>Click &lt;code>Customise&lt;/code>
&lt;ul>
&lt;li>Microsoft Access (Trial) [Not Available]&lt;/li>
&lt;li>Microsoft Excel [Run all from My Computer]&lt;/li>
&lt;li>Microsoft OneNote [Not Available]&lt;/li>
&lt;li>Microsoft Outlook [Not Available]&lt;/li>
&lt;li>Microsoft PowerPoint [Run all from My Computer]&lt;/li>
&lt;li>Microsoft Publisher (Trial) [Not Available]&lt;/li>
&lt;li>Microsoft Visio Viewer [Run from My Computer]&lt;/li>
&lt;li>Microsoft Word [Run all from My Computer]&lt;/li>
&lt;li>Office Shared Features [Defaults]&lt;/li>
&lt;li>Office Tools [Defaults]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Click &lt;code>Instal Now&lt;/code>.&lt;/li>
&lt;li>Click &lt;code>Close&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>That&amp;rsquo;s it. Office 2010 is installed and should be associated with the appropriate
file types.&lt;/p>
&lt;h2 id="some-issues">Some Issues&lt;/h2>
&lt;p>Here are some of the issues we noticed running Office 2010 under Wine.&lt;/p>
&lt;ul>
&lt;li>Always install Office 2010 into it&amp;rsquo;s own &lt;code>WINEPREFIX&lt;/code>. You are less likely to run into problem that way.&lt;/li>
&lt;li>Online updates do not work. Fortunately, the trial installer has SP1 integrated.&lt;/li>
&lt;li>If you purchase Office 2010 licenses you can still use the trial installer with your purchased license key(s).&lt;/li>
&lt;li>We did test a trial of &lt;a href="http://www.codeweavers.com/">CrossOver&lt;/a>. However, it wouldn&amp;rsquo;t activate Office 2010 on Arch Linux but did activate on Ubuntu.&lt;/li>
&lt;li>Files saved to &lt;code>cifs&lt;/code> mounts are set read-only. This might be a Wine issue or due to the unusual way we have our file server configured, we are still investigating.&lt;/li>
&lt;/ul>
&lt;h2 id="uninstalling-office-2010">Uninstalling Office 2010&lt;/h2>
&lt;p>Should you ever need to, you can uninstall Office 2010 as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -rfv &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/.msoffice2010/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rfv ~/.local/share/applications/wine-extension-*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rfv ~/.local/share/applications/wine/Programs/Microsoft&lt;span style="color:#87ceeb">\ &lt;/span>Office/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><summary>Install Microsoft Office 2010 on Arch Linux and Ubuntu</summary></item><item><title>The nano text editor</title><link>https://wimpysworld.com/posts/the-nano-text-editor/</link><pubDate>Tue, 22 Jan 2013 15:25:47 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/the-nano-text-editor/</guid><description>&lt;p>I use the &lt;a href="http://www.nano-editor.org/">nano&lt;/a> text editor in preference to
&lt;a href="http://www.vim.org/">vim&lt;/a> and have done for years. This is because we used
&lt;a href="https://en.wikipedia.org/wiki/Pine_(email_client)">Pine&lt;/a> for email at
university and my first job, the Pico text editor was used to compose mail
messages. Due to the binary only distribution of &lt;code>pico&lt;/code>, &lt;code>nano&lt;/code> was created as
an free software alternative. And that is why I use &lt;code>nano&lt;/code>.&lt;/p>
&lt;p>Since I &lt;a href="https://wimpysworld.com/posts/migrating-wordpress-to-nikola/">migrated my blog to Nikola&lt;/a>
I&amp;rsquo;m using &lt;code>nano&lt;/code> more frequently as I typically write my blog posts on a remote
shell, so I thought I&amp;rsquo;d spend some time to tweak &lt;code>nano&lt;/code> a little.&lt;/p>
&lt;h2 id="keybindings">Keybindings&lt;/h2>
&lt;p>I refreshed my memory of some of the keyboard shortcuts available in &lt;code>nano&lt;/code> to
be a little more efficient.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://mintaka.sdsu.edu/reu/nano.html">http://mintaka.sdsu.edu/reu/nano.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.tuxradar.com/content/text-editing-nano-made-easy">http://www.tuxradar.com/content/text-editing-nano-made-easy&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.cheatography.com/davechild/content/nano-shortcuts/">http://www.cheatography.com/davechild/content/nano-shortcuts/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="syntax-highlighting">Syntax Highlighting&lt;/h2>
&lt;p>Syntax Highlighting is the killer feature for &lt;code>nano&lt;/code> that I&amp;rsquo;ve never bothered to
configured in the past. I based my configuration one those provided by
&lt;a href="https://github.com/craigbarnes">Craig Barnes&lt;/a>. He uses mixins to ensure a
consistent colour theme for all the language highlighters. I don&amp;rsquo;t use his
custom key bindings however, it gets confusing when connecting to different
hosts that have a default &lt;code>nano&lt;/code> configuration.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/craigbarnes/nanorc">https://github.com/craigbarnes/nanorc&lt;/a>&lt;/li>
&lt;/ul></description><summary>Some quality of life improvements for nano text editor</summary></item><item><title>Python and virtualenv on Arch Linux and Ubuntu</title><link>https://wimpysworld.com/posts/python-and-virtualenv-on-arch-linux-and-ubuntu/</link><pubDate>Tue, 11 Dec 2012 20:38:50 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/python-and-virtualenv-on-arch-linux-and-ubuntu/</guid><description>&lt;p>We use &lt;a href="http://www.python.org">Python&lt;/a> for pretty much all our software
development at &lt;a href="http://www.flightdataservices.com/">work&lt;/a>. We also use
&lt;a href="http://www.virtualenv.org">virtualenv&lt;/a> and
&lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper&lt;/a>
extensively, both for development &lt;em>and&lt;/em> deployment.&lt;/p>
&lt;h2 id="why-is-virtualenv-so-great">Why is virtualenv so great?&lt;/h2>
&lt;p>It just is. Read the &lt;a href="http://www.virtualenv.org/en/latest/">virtualenv documentation&lt;/a>.
If you&amp;rsquo;re a Python developer you need &lt;code>virtualenv&lt;/code> in your life. You also need
&lt;code>virtualenvwrapper&lt;/code> too.&lt;/p>
&lt;blockquote>
&lt;p>virtualenvwrapper is a set of extensions to Ian Bicking’s virtualenv tool
for creating isolated Python development environments.&lt;/p>
&lt;/blockquote>
&lt;h2 id="installing-python-and-virtualenvwrapper">Installing Python and virtualenvwrapper&lt;/h2>
&lt;p>Outlined below is how I install Python and &lt;code>virtualenvwrapper&lt;/code>. We have not
yet made the jump to Python 3 at work, hence the references to Python 2.6 and
2.7. Some of us develop on Arch Linux, but all deployments are on Ubuntu.&lt;/p>
&lt;h3 id="arch-linux">Arch Linux&lt;/h3>
&lt;p>As Arch Linux is a rolling release we can simply install everything via
&lt;code>pacman&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -Syy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed --noconfirm python-pip python-setuptools python-virtualenv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pacman -S --needed --noconfirm python2-pip python2-setuptools python2-virtualenv python-virtualenvwrapper&lt;span style="color:#87ceeb">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Simple.&lt;/p>
&lt;h3 id="ubuntu">Ubuntu&lt;/h3>
&lt;p>The following was done on Ubuntu Lucid 10.04 LTS.&lt;/p>
&lt;p>Add some essential PPAs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:bzr/ppa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:git-core/ppa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:fkrull/deadsnakes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the system and install Python 2.6 and 2.7.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libpython2.6 python2.6 python2.6-dev python2.6-minimal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libpython2.7 python2.7 python2.7-dev python2.7-minimal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove any &lt;code>apt&lt;/code> installed Python packages that we are about to repalce. The
versions of these packages in the Ubuntu repos and PPAs are too old.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge python-setuptools python-virtualenv python-pip python-profiler
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>distribute&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -O http://python-distribute.org/distribute_setup.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.6 distribute_setup.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.7 distribute_setup.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>pip&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -O https://raw.github.com/pypa/pip/master/contrib/get-pip.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.6 get-pip.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.7 get-pip.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>pip&lt;/code> to install &lt;code>virtualenv&lt;/code> and &lt;code>virtualenv&lt;/code> wrapper.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pip-2.6 install virtualenv --upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pip-2.7 install virtualenv --upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pip install virtualenvwrapper
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fairly simple.&lt;/p>
&lt;h3 id="the-snakepit">The Snakepit&lt;/h3>
&lt;p>This step is common to Arch Linux and Ubuntu. Create a &lt;em>&amp;ldquo;Snakepit&amp;rdquo;&lt;/em> directory for
storing all the virtualenvs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir ~/Snakepit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following your &lt;code>~/.bashrc&lt;/code> to enable &lt;code>virtualenvwrapper&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WORKON_HOME&lt;/span>=&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/Snakepit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">if&lt;/span> [ -f /usr/local/bin/virtualenvwrapper.sh ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source /usr/local/bin/virtualenvwrapper.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">elif&lt;/span> [ -f /usr/bin/virtualenvwrapper.sh ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source /usr/bin/virtualenvwrapper.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="creating-a-virtualenv">Creating a virtualenv&lt;/h2>
&lt;p>Open a new shell to ensure that the &lt;code>virtualenvwrapper&lt;/code> configuration is
active.&lt;/p>
&lt;p>The following will create a new virtualenv called &lt;code>Nikola5&lt;/code> based on Python
2.7 and will not give access to the global &lt;code>site-packages&lt;/code> directory.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkvirtualenv -p python2.7 --no-site-packages ~/Snakepit/Nikola5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>mkvirtualenv_help&lt;/code> shows a full list of arguments, the &lt;code>-r&lt;/code> switch can install
all the packages listed in a &lt;code>pip&lt;/code> requirements file into the newly created
virtualenv. Very useful.&lt;/p>
&lt;h2 id="working-on-a-virtualenv">Working on a virtualenv&lt;/h2>
&lt;p>To workon, or activate, an existing virtualenv do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>workon Nikola5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can switch to another virtualenv at any time, just use &lt;code>workon envname&lt;/code>.
Your shell prompt will change while a virtualenv is being worked on to indicate
which virtualenv is currently active.&lt;/p>
&lt;p>While working on a virtualenv you can &lt;code>pip&lt;/code> install what you need or manually
install any Python libraries safe in the knowledge you will not adversely
damage any other virtualenvs or the global packages in the process. Very useful
for developing a new branch which may have different library requirements than
the master/head.&lt;/p>
&lt;p>When you are finished working in a virtualenv you can deactivate it by simply
executing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>deactivate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That just about sums up my notes.&lt;/p></description><summary>Installing Python and virtualenv on Arch Linux and Ubuntu</summary></item><item><title>SSH brute force defense</title><link>https://wimpysworld.com/posts/ssh-brute-force-defense/</link><pubDate>Mon, 26 Nov 2012 13:14:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/ssh-brute-force-defense/</guid><description>&lt;p>I have several VPS hosts with different providers using different
virtualisation platforms. Naturally I have &lt;a href="http://www.openssh.org/">OpenSSH&lt;/a>
running on these VPS hosts and deploy either &lt;a href="http://denyhosts.sourceforge.net/">DenyHosts&lt;/a>
or &lt;a href="http://www.fail2ban.org/">Fail2Ban&lt;/a> to add an extra security layer to
thwart SSH brute force attacks and other abuse.&lt;/p>
&lt;p>DenyHosts blocks brute force attacks by adding offending IP addresses to
&lt;code>/etc/hosts.deny&lt;/code>. It therefore requires the SSH server is configured with
&lt;code>tcp_wrappers&lt;/code>. Arch Linux &lt;a href="https://www.archlinux.org/news/dropping-tcp_wrappers-support/">dropped support for tcp_wrappers&lt;/a>
so DenyHosts is not suitable for Arch. Fail2Ban supports blocking via &lt;code>iptables&lt;/code> and/or
&lt;code>tcp_wrappers&lt;/code> and can also block offending hosts that are abusing services other than just &lt;code>sshd&lt;/code>.&lt;/p>
&lt;h2 id="denyhosts-on-ubuntu">DenyHosts on Ubuntu&lt;/h2>
&lt;p>Here is a simple example for DenyHosts on Ubuntu Lucid 10.04 LTS Server.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install denyhosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it. The default configuration will provide suitable prevention, but do
take a look at &lt;code>/etc/denyhosts.conf&lt;/code> for a full run down of all available options.
I use the defaults with the following exceptions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>PURGE_DENY = &lt;span style="color:#87ceeb">5d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PURGE_THRESHOLD = &lt;span style="color:#87ceeb">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADMIN_EMAIL =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SYSLOG_REPORT=&lt;span style="color:#87ceeb">NO&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You might want to consider whitelisting some of your own IP address. Create a
file called &lt;code>allowed-hosts&lt;/code> in &lt;code>/var/lib/denyhosts&lt;/code> and list each of your
&amp;ldquo;trusted&amp;rdquo; IP addresses.&lt;/p>
&lt;p>DenyHosts can be restarted by executing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/denyhosts restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fail2ban-on-arch-linux">Fail2Ban on Arch Linux&lt;/h2>
&lt;p>Fail2Ban now supports systemd.&lt;/p>
&lt;p>Configuration files are stored in &lt;code>/etc/fail2ban&lt;/code>. General configuration is
&lt;code>/etc/fail2ban/jail.conf&lt;/code>, but this file might be overwritten in the future. To
preserve customisations, create &lt;code>/etc/fail2ban/jail.local&lt;/code> and add your local
configuration settings to it. In the example below some IP addresses are whitelisted
and the default backend is set to systemd:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[DEFAULT]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ignoreip = &lt;span style="color:#87ceeb">172.16.0.2/32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backend = &lt;span style="color:#87ceeb">systemd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next create a custom sshd configuration in &lt;code>/etc/fail2ban/jail.d/sshd.conf&lt;/code>
which will temporarily ban offending IP addresses.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># fail2ban SSH&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># block ssh after 3 unsuccessful login attempts for 10 minutes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[sshd]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enabled = &lt;span style="color:#87ceeb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>action = &lt;span style="color:#87ceeb">iptables[chain=INPUT, protocol=tcp, port=22, name=sshd]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>maxRetry = &lt;span style="color:#87ceeb">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>findtime = &lt;span style="color:#87ceeb">600&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bantime = &lt;span style="color:#87ceeb">600&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port = &lt;span style="color:#87ceeb">22&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &amp;lsquo;action&amp;rsquo; creates DROP rule in iptables after 3 unsuccessful login
attempts, valid for 10 minutes (bantime). Findtime defines time frame in which
fail2ban will count failed login attempts from logs, so if one IP has 3
incorrect login attempts in last 10 minutes, it will be banned.&lt;/p>
&lt;p>Enable and start the Fail2Ban daemon.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl enable fail2ban
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start fail2ban
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Basic commands for fail2ban-client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>fail2ban-client start sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fail2ban-client stop sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fail2ban-client reload sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fail2ban-client status sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fail2ban-client set sshd unbanip 172.16.0.4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See the &lt;a href="https://wiki.archlinux.org/index.php/Fail2ban">Arch Linux Fail2Ban Wiki page&lt;/a>
for more details.&lt;/p>
&lt;p>&lt;strong>References&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://krisko210.blogspot.co.uk/2014/03/setting-up-fail2ban.html">http://krisko210.blogspot.co.uk/2014/03/setting-up-fail2ban.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ssh-best-practice">SSH best practice&lt;/h2>
&lt;p>DenyHosts and Fail2Ban do not provide complete protection against SSH brute
force attacks. I employ other SSH best practice to better secure the SSH
services I expose to the Internet, and so should you. The following is a
good reference.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.ibm.com/developerworks/aix/library/au-sshsecurity/index.html">Getting started with SSH security and configuration&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="other-ssh-brute-force-prevention-tools">Other SSH brute force prevention tools&lt;/h2>
&lt;p>In the interests of fairness, other SSH brute force preventation tools are
available.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.sshguard.net/">Sshgaurd&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cgi.csc.liv.ac.uk/~greg/sshdfilter/">sshdfilter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://help.ubuntu.com/community/UFW">Uncomplicated Firewall&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Uncomplicated_Firewall#Rate_Limiting_with_ufw">Rate Limiting&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Do you know any other tools that help prevent SSH brute force attacks?&lt;/p></description><summary>Deploy DenyHosts or Fail2Ban to better prevent SSH brute force attacks.</summary></item><item><title>GitHub Analytics</title><link>https://wimpysworld.com/posts/github-analytics/</link><pubDate>Fri, 26 Oct 2012 16:39:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/github-analytics/</guid><description>&lt;p>As I mentioned in a previous post we are prepairing to &lt;a href="2012-10-migrating-bzr-to-git.html">migrate our Bazaar
repositories to Git&lt;/a>, or more
precisely to &lt;a href="https://github.com">GitHub&lt;/a>. This migration also heralds the
Open Source releases of many of the core technologies we&amp;rsquo;ve been developing at
&lt;a href="http://www.flightdataservices.com">Flight Data Services&lt;/a> for the last few years.&lt;/p>
&lt;p>I want to track visits for our GitHub projects. A bit of Googling turned up
&lt;a href="http://githalytics.com/">githalytics&lt;/a> which enables you to track visits and
page views for your GitHub projects using
[http://www.google.com/analytics/](Google Analytics).&lt;/p>
&lt;p>To use it, create a new Google Analytics property ID for your GitHub project,
head over to &lt;a href="http://githalytics.com/">http://githalytics.com/&lt;/a> and complete the web form. You&amp;rsquo;ll be
provided a &lt;a href="http://daringfireball.net/projects/markdown/">Markdown&lt;/a> snippet to
insert in your projects &lt;code>README.md&lt;/code>. It will look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f &amp;#34;githalytics.com&amp;#34;)](http://githalytics.com/YourGitHubName/YourGitHubProject)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the snippet to &lt;code>README.md&lt;/code> and push the changes. When someone visits your
GitHub project page, the visit will be tracked. Great!&lt;/p>
&lt;p>However, we write all our documentation using
&lt;a href="http://docutils.sourceforge.net/rst.html">reStructuredText&lt;/a>. But after a
quick Twitter and email exchange with Dimitrios from githalytics and I had
a reStructuredText snippet. It looks something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rest" data-lang="rest">&lt;span style="display:flex;">&lt;span>image:: https://cruel-carlota.pagodabox.com/0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :alt: githalytics.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :target: http://githalytics.com/YourGitHubName/YourGitHubProject
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Same drill, except add this snippet to &lt;code>README.rst&lt;/code> and push the changes.&lt;/p>
&lt;p>So there you have it, Google Analytics tracking of your GitHub project landing
page. If you have more than one project, create a Google Analytics property ID
and githalytics tracking snippet for each project.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://githalytics.com/">http://githalytics.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://githalytics.tumblr.com/">http://githalytics.tumblr.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://coderwall.com/team/githalytics">http://coderwall.com/team/githalytics&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stackoverflow.com/questions/4376560/add-google-analytics-to-github-wiki-pages">http://stackoverflow.com/questions/4376560/add-google-analytics-to-github-wiki-pages&lt;/a>&lt;/li>
&lt;/ul></description><summary>How to add Google Analytics to GitHub projects.</summary></item><item><title>Migrating Bazaar to Git</title><link>https://wimpysworld.com/posts/migrating-bazaar-to-git/</link><pubDate>Tue, 23 Oct 2012 11:50:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/migrating-bazaar-to-git/</guid><description>&lt;p>We have been using &lt;a href="http://bazaar.canonical.com">Bazaar&lt;/a> for source
control at &lt;a href="http://www.flightdataservices.com">work&lt;/a> for nearly five
years. We are about to &lt;a href="http://opensource.org">Open Source&lt;/a> most of our
core technologies and decided that &lt;a href="https://github.com">GitHub&lt;/a> is the
best way to encourage community participation. We have signed up for a
Silver plan at GitHub and will migrate all our Bazaar repositories to Git.&lt;/p>
&lt;p>I have a few personal projects in Bazaar repositories hosted on
&lt;a href="http://www.launchpad.net">Launchpad&lt;/a>. I decided to migrate my projects
to GitHub in order to learn the migration process. What follows is an
overview of how I did it using a fresh virtual machine running Ubuntu 10.04
LTS Server. I used a little project of mine called &lt;code>nullserv&lt;/code> in the
examples below.&lt;/p>
&lt;p>Add the Bazaar and Git PPAs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install python-software-properties
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:bzr/ppa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:git-core/ppa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>bzr&lt;/code> (and its requirements), &lt;code>curl&lt;/code> and &lt;code>git&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install bzr bzr-fastimport curl git python-paramiko
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the SSH keys and identify yourself.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bzr whoami &lt;span style="color:#87ceeb">&amp;#34;Your Name &amp;lt;name@example.org&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global user.name &lt;span style="color:#87ceeb">&amp;#34;Your Name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global user.email you@example.org
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If your Bazaar repository is hosted on Launchpad assert your
identity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bzr launchpad-login flexiondotorg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Branch the Bazaar repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bzr branch lp:~flexiondotorg/+junk/nullserv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd nullserv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bzr fast-export --plain &lt;span style="color:#87ceeb">`&lt;/span>pwd&lt;span style="color:#87ceeb">`&lt;/span> | git fast-import
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>This step is optional. It will delete and commit the deletions to the Bazaar repository.&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">for&lt;/span> FILE in *; &lt;span style="color:#f00">do&lt;/span> rm -rfv &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">FILE&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>; &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;This repository has been migrated to Git. https://github.com/flexiondotorg/nullserv&amp;#34;&lt;/span> &amp;gt; README
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bzr add README
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bzr commit -m &lt;span style="color:#87ceeb">&amp;#34;This repository has been migrated to Git. https://github.com/flexiondotorg/nullserv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bzr push :parent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove the Bazaar repository and reset the Git repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -rf .bzr README
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>.gitattributes&lt;/code> to normalise line endings.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;.gitattributes&lt;span style="color:#87ceeb">&amp;lt;&amp;lt;ENDGITATTRIBS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># Normalise line endings:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">* text=auto
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># Prevent certain files from being exported:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">.gitattributes export-ignore
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">.gitignore export-ignore
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">ENDGITATTRIBS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add .gitattributes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Migrate &lt;code>.bzrignore&lt;/code> to &lt;code>.gitignore&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git mv .bzrignore .gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &amp;gt;&amp;gt; .gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;# Keep empty directories:&amp;#34;&lt;/span> &amp;gt;&amp;gt; .gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;!*/.git*&amp;#34;&lt;/span> &amp;gt;&amp;gt; .gitignore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ensure empty directories are retained by git.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>find -empty -type d -not -iwholename &lt;span style="color:#87ceeb">&amp;#39;*.git*&amp;#39;&lt;/span> -exec touch &lt;span style="color:#87ceeb">&amp;#39;{}/.gitkeep&amp;#39;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add **/.gitkeep
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Commit the migrated repository&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git commit -a -m &lt;span style="color:#87ceeb">&amp;#34;Migrated from Bazaar to Git.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thanks to Chris for pointing out &lt;code>git filter-branch&lt;/code> in the comments. If you
need to modify the author info in your repository history, you can do so with
this, just replace the names and email addresses accordingly.&lt;/p>
&lt;p>&lt;strong>BEWARE! This should not be performed on a repo that has been shared with others.
Use at your own risk.&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git filter-branch --commit-filter &lt;span style="color:#87ceeb">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> if [ &amp;#34;$GIT_COMMITTER_NAME&amp;#34; = &amp;#34;Fred&amp;#34; ]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_COMMITTER_NAME=&amp;#34;Fred Flintstone&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_AUTHOR_NAME=&amp;#34;Fred Flintstone&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_COMMITTER_EMAIL=&amp;#34;fred@example.org&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_AUTHOR_EMAIL=&amp;#34;fred@example.org&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> git commit-tree &amp;#34;$@&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> elif [ &amp;#34;$GIT_COMMITTER_NAME&amp;#34; = &amp;#34;Barney&amp;#34; ]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_COMMITTER_NAME=&amp;#34;Barney Rubble&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_AUTHOR_NAME=&amp;#34;Barney Rubble&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_COMMITTER_EMAIL=&amp;#34;barney@example.org&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> GIT_AUTHOR_EMAIL=&amp;#34;barney@example.org&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> git commit-tree &amp;#34;$@&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> git commit-tree &amp;#34;$@&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"> fi&amp;#39;&lt;/span> HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to delete any files from the commit history, you can optionally do that now.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git filter-branch -f --index-filter &lt;span style="color:#87ceeb">&amp;#34;git rm --cached --ignore-unmatch *.THIS *.THAT&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>--prune-empty --tag-name-filter cat -- --all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf .git/refs/original/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reflog expire --expire=now --all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git gc --prune=now
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Resume here, regardless of whether you deleted any files from the commit history or not.
Remove everything from the index.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rm --cached -r .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Write both the index and working directory from git&amp;rsquo;s database.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Prepare to make a commit by staging all the files that will get normalized.
This is your chance to inspect which files were never normalized. You may
get lots of messages like: &lt;code>warning: CRLF will be replaced by LF in file.&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#87ceeb">&amp;#34;Forced line endings to eol=lf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Aggressively pack the repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git gc --aggressive --prune=now
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point you have a migrated git repository. You can poke about a check that
everything is present and correct.&lt;/p>
&lt;p>Optionally you can create a new GitHub repository using their API. Replace &lt;code>USER&lt;/code>
and &lt;code>PASS&lt;/code> with your GitHub login crednetials.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -u &lt;span style="color:#87ceeb">&amp;#39;USER:PASS&amp;#39;&lt;/span> https://api.github.com/user/repos -d &lt;span style="color:#87ceeb">&amp;#39;{&amp;#34;name&amp;#34;:&amp;#34;nullserv&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to create repositories for an Organisation the following will
work. Replace &lt;code>YourOrganisation&lt;/code> with the organisation name your are a
member of.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -u &lt;span style="color:#87ceeb">&amp;#39;USER:PASS&amp;#39;&lt;/span> https://api.github.com/orgs/YourOrganisation/repos -d &lt;span style="color:#87ceeb">&amp;#39;{&amp;#34;name&amp;#34;:&amp;#34;nullserv&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Private repositories can be created, providing you have a paid GitHub account,
by changing the &lt;code>POST&lt;/code> data as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&amp;#39;{&amp;#34;name&amp;#34;:&lt;span style="color:#87ceeb">&amp;#34;nullserv&amp;#34;&lt;/span>,&amp;#34;private&amp;#34;:&lt;span style="color:#87ceeb">&amp;#34;true&amp;#34;&lt;/span>}&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lastly, push to the newly created GitHub repo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git remote add origin git@github.com:flexiondotorg/nullserv.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push -u origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>All done, the Bazaar repository has been crippled and the Git repository is
ready for use on GitHub.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://gist.github.com/624941">https://gist.github.com/624941&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stackoverflow.com/questions/2423777/is-it-possible-to-create-a-remote-repo-on-github-from-the-cli-without-ssh">http://stackoverflow.com/questions/2423777/is-it-possible-to-create-a-remote-repo-on-github-from-the-cli-without-ssh&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git">http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://help.github.com/articles/changing-author-info">https://help.github.com/articles/changing-author-info&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://developer.github.com/v3/repos/">http://developer.github.com/v3/repos/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://help.github.com/articles/dealing-with-line-endings#platform-all">https://help.github.com/articles/dealing-with-line-endings#platform-all&lt;/a>&lt;/li>
&lt;/ul></description><summary>A rough guide to migrating Bazaar repositories to GitHub</summary></item><item><title>Migrating Wordpress to Nikola</title><link>https://wimpysworld.com/posts/migrating-wordpress-to-nikola/</link><pubDate>Mon, 22 Oct 2012 17:13:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/migrating-wordpress-to-nikola/</guid><description>&lt;p>I recently migrated three sites from a self hosted &lt;a href="http://www.wordpress.org">Wordpress&lt;/a>
installation to &lt;a href="http://getnikola.com/">Nikola&lt;/a>. Nikola is a static
site and blog generator written in &lt;a href="http://www.python.org">Python&lt;/a>.&lt;/p>
&lt;p>Although I use both &lt;a href="http://docutils.sourceforge.net/rst.html">reStructuredText&lt;/a>
and &lt;a href="http://daringfireball.net/projects/markdown/">Markdown&lt;/a>, I decided
to migrate my Wordpress content to Markdown.&lt;/p>
&lt;p>This is by no means an exhaustive Wordpress to Nikola migration guide but it
should provide enough clues for anyone else wanting to do the same. The
following was done on Ubuntu 10.04 LTS.&lt;/p>
&lt;p>Export the Wordpress content. &lt;code>Tools -&amp;gt; Export -&amp;gt; All Content&lt;/code>&lt;/p>
&lt;p>Use &lt;code>xmllint&lt;/code> to find any errors in the Wordpress XML export and fix them.&lt;/p>
&lt;h2 id="nikola-5">Nikola 5&lt;/h2>
&lt;p>&lt;strong>UPDATE!&lt;/strong> I&amp;rsquo;ve added the instructions for install Nikola 5 since fist
publishing this post.&lt;/p>
&lt;p>Install Nikola 5 in a &lt;code>virtualenv&lt;/code> using
&lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libxslt1-dev libxml2-dev libjpeg62-dev python2.6-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget http://nikola-generator.googlecode.com/files/nikola-5.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip ~/nikola-5.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkvirtualenv -i markdown -r ~/nikola-5/requirements.txt --use-distribute nikola-5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~/nikola-5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nikola-4">Nikola 4&lt;/h2>
&lt;p>Install Nikola 4.0.3, in a &lt;code>virtualenv&lt;/code> using
&lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper&lt;/a>.
Nikola 4.0.3 spits deprecation warnings with &lt;code>doit&amp;gt;=0.16.1&lt;/code> hence the use of
&lt;code>sed&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libxslt1-dev libxml2-dev libjpeg62-dev python2.6-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget http://nikola-generator.googlecode.com/files/nikola-4.0.3.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip ~/nikola-4.0.3.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/&amp;gt;=0\.16/==0\.16/&amp;#39;&lt;/span> ~/nikola-4.0.3/requirements.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkvirtualenv -i markdown -r ~/nikola-4.0.3/requirements.txt --use-distribute nikola
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd nikola-4.0.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Import the Wordpress content.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nikola import_wordpress wordpress.linted.xml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;a href="https://github.com/aaronsw/html2text">html2text&lt;/a> to convert the HTML
markup in &lt;code>new_site/posts/*.wp&lt;/code> to &lt;em>real&lt;/em> Markdown.&lt;/p>
&lt;p>Use the &lt;a href="http://wordpress.org/extend/plugins/disqus-comment-system/">Disqus Wordpress Plug-in&lt;/a>
to migrate Wordpress comments to &lt;a href="http://www.disqus.com">Disqus&lt;/a>.&lt;/p>
&lt;p>If required, generate a list of the Wordpress URLs for Nikola redirections.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>grep &lt;span style="color:#87ceeb">&amp;#34;&amp;lt;link&amp;gt;&amp;#34;&lt;/span> wordpress.linted.xml | sed -e &lt;span style="color:#87ceeb">&amp;#39;s/&amp;lt;link&amp;gt;//g&amp;#39;&lt;/span> -e &lt;span style="color:#87ceeb">&amp;#39;s/&amp;lt;\/link&amp;gt;//g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I migrated from several sub-domains to one top-level and the Wordpress URLs
I was using can&amp;rsquo;t be persevered with Nikola. I use a combination of Nikola
redirects and nginx configuration to handle the re-directions.&lt;/p>
&lt;p>At this point the bulk of the migration is done. I tweaked the Nikola &lt;code>conf.py&lt;/code>
to use &lt;code>.md&lt;/code> files instead of &lt;code>.wp&lt;/code>, added some assets to the Nikola &lt;code>files&lt;/code>
directory, configured deployments and updated the theme. I also decided to axe
some obsolete blog posts.&lt;/p>
&lt;p>Migrating to Disqus has been very frustrating and although my comments have
now been migrated the Migrate Threads has yet reflect the new URLs of my posts.
There is no visibility of what, if anything, is happening when you execute the
Disqus URL Mapper. This is not a Nikola issue.&lt;/p>
&lt;p>I am extremely happy with Nikola itself and it has proved itself flexible and
I can now capture my notes in a familiar format and in a familiar environment,
Python. Next steps are to integrate Nikola with Dropbox so I can publish from
any device with ease and add a search facility.&lt;/p></description><summary>From a dynamic Wordpress site to static Nikola site</summary></item><item><title>Installing GNOME 3 on Ubuntu 11.10</title><link>https://wimpysworld.com/posts/installing-gnome-3-on-ubuntu-11.10/</link><pubDate>Fri, 09 Dec 2011 16:21:03 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/installing-gnome-3-on-ubuntu-11.10/</guid><description>&lt;p>I tried &lt;a href="http://unity.ubuntu.com/">Unity&lt;/a> in Ubuntu Natty 11.04 and Ubuntu
Oneiric 11.10. We&amp;rsquo;ve agreed to hate each other. A few weeks ago I started using
&lt;a href="http://www.gnome.org/">GNOME 3&lt;/a> and it only took me a couple of hours to
adapt to it&amp;rsquo;s workflow. GNOME 3 is now my desktop environment at home and and
work. I love it! If you&amp;rsquo;d like to give GNOME 3 a whirl then you could try
installing Jan Hoffman&amp;rsquo;s Ubuntu GNOME Shell Remix from either the 32-bit or
64-bit ISOs he has prepared. This will give a &amp;ldquo;pure&amp;rdquo; GNOME 3 experience.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://ubuntu-gs-remix.sourceforge.net/p/home/">http://ubuntu-gs-remix.sourceforge.net/p/home/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you already have Ubuntu 11.10 installed then you can install GNOME 3 alongside
Unity. Here are the incantations you&amp;rsquo;ll need to utter in a shell.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:jan-hoffmann/gnome-shell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:aegirxx-googlemail/gnome-shell-extensions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:gnome3-team/gnome3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:webupd8team/gnome3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libglib2.0-bin gnome-core gnome-documents gnome-shell gnome-sushi gnome-tweak-tool gnomeshell-default-settings gtk3-engines-unico
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The repositories added above will give you access to Jan&amp;rsquo;s GNOME 3 meta
packages, updated GNOME 3 packages and some extra GNOME 3 extensions. GNOME 3
extensions add all manner of additional tweaks and functionality. Some
extensions can even provide a user experience more akin to that of GNOME 2.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://intgat.tigress.co.uk/rmy/extensions/index.html">http://intgat.tigress.co.uk/rmy/extensions/index.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In order to get acquainted with GNOME 3 I suggest you read the
&lt;a href="http://www.gnome.org/gnome-3/">Discover GNOME 3&lt;/a> (watch the videos too) and
&lt;a href="http://live.gnome.org/GnomeShell/CheatSheet">GNOME 3 Cheat Sheet&lt;/a> pages. Having
read those you&amp;rsquo;ll soon master GNOME 3. After you&amp;rsquo;ve used GNOME 3 for a while you
may conclude it is a more usable desktop environment than Unity, which isn&amp;rsquo;t a
surprising conclusion to arrive at given Unity sucks the big one right now. If
you want a &lt;em>&amp;ldquo;pure&amp;rdquo;&lt;/em> GNOME 3 experience then the following commands will purge
Unity and other bits and bobs that GNOME 3 simply doesn&amp;rsquo;t require.&lt;/p>
&lt;h2 id="remove-unity">Remove Unity&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-purge unity unity-2d unity-2d-launcher unity-asset-pool unity-common &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>unity-greeter unity-lens-applications unity-lens-music libunity-misc4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="remove-overlay-scrollbars">Remove Overlay Scrollbars&lt;/h2>
&lt;p>These just don&amp;rsquo;t work on my netbook since they regularly obscure portions of
the window I actually want to click on. The can safely be removed even if you
intend to continue using Unity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge overlay-scrollbar liboverlay-scrollbar-0.2-0 liboverlay-scrollbar3-0.2-0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="remove-indicators">Remove Indicators&lt;/h2>
&lt;p>If you never going back to Unity, Indicators can be safely removed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge xchat-gnome-indicator indicator-appmenu indicator-power &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>indicator-session indicator-sound indicator-status-provider-mc5 &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>libindicator-messages-status-provider1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="remove-global-menu">Remove Global Menu&lt;/h2>
&lt;p>Again, Global Menu is not used by GNOME 3. So if you not going back to Unity
these can be safely removed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge appmenu-gtk3 appmenu-gtk appmenu-qt firefox-globalmenu &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>thunderbird-globalmenu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, a word or warning: &lt;strong>Distribution upgrades are not possible!&lt;/strong> You
can&amp;rsquo;t upgrade to a newer version of Ubuntu when using Jan Hoffman&amp;rsquo;s Ubuntu
GNOME Shell Remix or if you modify an existing Ubuntu 11.10 using my method
above. You will have to do a full install once the next Ubuntu release is
available. This can&amp;rsquo;t be fixed as long as Jan&amp;rsquo;s meta packages are unofficial,
because the distribution upgrade process requires having installed one of the
desktop meta packages from the official Ubuntu repositories.&lt;/p></description><summary>Creating a pure GNOME 3 experience on Ubuntu 11.10</summary></item><item><title>Sync Zimbra Contacts, Calendar and Tasks to your iPod</title><link>https://wimpysworld.com/posts/sync-zimbra-contacts-calendar-and-tasks-to-your-ipod/</link><pubDate>Wed, 21 Jan 2009 13:41:51 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/sync-zimbra-contacts-calendar-and-tasks-to-your-ipod/</guid><description>&lt;p>We use &lt;a href="http://www.zimbra.com/">Zimbra&lt;/a> at work for email, contacts,
calendaring, etc. I have Zimbra syncing with Thunderbird and my phone, I love it.&lt;/p>
&lt;p>At the weekend I was updating the music library on my iPod Nano (2nd Gen) and
noticed I had hidden the Contact and Calendar menu entries. I decided to see if
I could get my iPod Contacts and Calendar synced with Zimbra, it turned out to
be very simple. In the examples below replace &lt;code>username&lt;/code> and &lt;code>password&lt;/code> with
your Zimbra user credentials. Obviously use the URL to your Zimbra server and
replace &lt;code>/media/IPOD&lt;/code> with where your Linux distribution has mounted your iPod.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://username:password@your.zimbraserver.tld/zimbra/home/username/contacts.vcf -O /media/IPOD/Contacts/contacts.vcf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://username:password@your.zimbraserver.tld/home/username/Calendar -O /media/IPOD/Calendars/calendar.ics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://username:password@your.zimbraserver.tld/home/username/Tasks -O /media/IPOD/Calendars/tasks.ics
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><summary>Push Zimbra contacts, calendars &amp;amp; tasks to your iPod using Linux</summary></item><item><title>BloGTK, a weblog client for Linux</title><link>https://wimpysworld.com/posts/blogtk-a-weblog-client-for-linux/</link><pubDate>Fri, 11 Jan 2008 13:44:07 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/blogtk-a-weblog-client-for-linux/</guid><description>&lt;p>I have been meaning to setup a weblog client for a while now. I have tested a
couple of blog clients and have settled on &lt;a href="http://blogtk.sourceforge.net/">BloGTK&lt;/a>.&lt;/p>
&lt;p>It has a simple user interface but comprehensive features, although I did need
to define a few Custom Tags before the editor supported all the formatting
options I wanted. Setting up BloGTK is very simple for Ubuntu and Debain users
requiring an &lt;code>aptitude install blogtk&lt;/code> to get it installed and the following
settings will connect to a Wordpress blog.&lt;/p>
&lt;ul>
&lt;li>Server URL: &lt;code>http://blog.example.org/xmlrpc.php&lt;/code>&lt;/li>
&lt;li>Account: &lt;em>Your Username&lt;/em>&lt;/li>
&lt;li>Password: &lt;em>Your Password&lt;/em>&lt;/li>
&lt;li>Blogging System: &lt;em>Moveable Type&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Now I can blog directly from my desktop, I am hoping it will encourage me to
post more often.&lt;/p></description><summary>Graphical blogging client for GNOME</summary></item><item><title>Powerbook G3 (Old World) Ubuntu Install</title><link>https://wimpysworld.com/posts/powerbook-g3-old-world-ubuntu-install/</link><pubDate>Mon, 09 Jan 2006 11:28:54 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/powerbook-g3-old-world-ubuntu-install/</guid><description>&lt;p>James bought a PowerBook G3 to the January 2006 &lt;a href="http://www.hants.lug.org.uk/">HantsLUG&lt;/a>
meeting and wanted to have Ubuntu installed on it. I used to be familiar with
Apple Mac computers in the mid to late 90&amp;rsquo;s because the company I worked for used
Macs exclusively on the desktop, so I decided to give it a whirl.&lt;/p>
&lt;p>The bottom line is that this old PowerBook G3 is now running Ubuntu Hoary 5.04
quite happily and I will soon be phone James to arrange for him to pick up his
computer.&lt;/p>
&lt;p>The article is largely based on the &lt;a href="https://wiki.ubuntu.com/Installation/OldWorldMacs">OldWorldsMac Ubuntu Wiki&lt;/a>,
I have included the specifics of James setup here so he has a record of how his
computer was configured.&lt;/p>
&lt;p>I quickly realised that simply inserting the Ubuntu Hoary 5.04 PowerPC install
CD and rebooting while holding down the &amp;lsquo;C&amp;rsquo; key wasn&amp;rsquo;t going to work. It seems
that James computer is old enough to be a right pain in the arse to get working
with Linux, but that just makes me want to get it working all the more &lt;code>:-)&lt;/code>&lt;/p>
&lt;p>By the end of the HantsLUG meeting Ubuntu Hoary 5.04 was just completing the
final setup steps and would have been ready to use, but someone pulled the power
block out of the mains and James battery is dead, so the computer shutdown &lt;code>:-(&lt;/code>
I took the PowerBook G3 home with me to fix/complete the installation but when
I got home I decided to download Ubuntu Breezy and install that instead. Sadly,
James PowerBook only has a 2GB hard disk (1.9GB available for Linux) and this
wasn&amp;rsquo;t sufficient for the Breezy installation to complete so I reverted to Hoary.&lt;/p>
&lt;h2 id="identifying-the-powerbook-g3">Identifying the PowerBook G3&lt;/h2>
&lt;p>After some Googling I soon discovered that there are two classes of PowerBook G3,
OldWorld and NewWorld, and that each of the classes have a number of slightly
different models in the range. I took a guess that James was an OldWorld
PowerBook based on the fact it had no USB ports. It turns out this was a good
guess.&lt;/p>
&lt;p>Making the assumption that James PowerBook was OldWorld meant that I should use
&lt;a href="http://penguinppc.org/bootloaders/bootx/">BootX&lt;/a> to boot into Linux from MacOS
as opposed to using yaboot which is for NewWorld PowerPCs.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://docs.info.apple.com/article.html?artnum=24604">PowerBook G3 Computers: How to Identify Different Models&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="doing-the-macos-installation">Doing the MacOS Installation&lt;/h2>
&lt;p>The first job was to erase the hard disk and install MacOS in a small parition
and leave the rest of the drive unallocated for installing Ubuntu later on.&lt;/p>
&lt;ul>
&lt;li>Insert MacOS 8.1 CD&lt;/li>
&lt;li>Reboot&lt;/li>
&lt;li>Hold down &amp;lsquo;C&amp;rsquo; as the computer boots to get it to boot from CD&lt;/li>
&lt;li>Erase the Hard Disk&lt;/li>
&lt;li>Use Drive Setup to make a 150MB HFS partition.&lt;/li>
&lt;li>Install MacOS, leaving off all the optional components. The only thing you need is Stuffit and a browser which are both part of the minimal MacOS8.1 install.&lt;/li>
&lt;/ul>
&lt;p>After the install I delete some odds and ends I didn&amp;rsquo;t need and also used
Extensions Manager to deselect a lot of components that were not required.
Finally, I configured TCP/IP to use DHCP.&lt;/p>
&lt;h3 id="tools-update">Tools Update&lt;/h3>
&lt;p>James wanted to be able to use MacOS for basic web surfing, so that meant
finding an more modern alternative to Netscape 3.0.3 which was installed be
default. Sadly The only (relatively) upto date browser I could find which would
install on MacOS 8.1 was Internet Explorer 5.1.7. I also needed an updated
version of Stuffit Expander to extract BootX 1.2.2. I used Netscape 3.0.3 to
download IE and Stuffit from the URL&amp;rsquo;s below&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.microsoft.com/mac/downloads.aspx?pid=download&amp;amp;location=/mac/DOWNLOAD/IE/ie5_classic.xml&amp;amp;secid=30&amp;amp;ssid=11&amp;amp;flgnosysreq=True">Internet Explorer 5.1.7 for Mac OS 8.1 to 9.x&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.sfsu.edu/ftp/mac/utils/aladdin_exp55.hqx">Stuffit Expander 5.5 for MacOS Classic&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;and installed them. Once they were working a deleted Netscpae 3.0.3 and the
old version of Stuffit.&lt;/p>
&lt;h2 id="bootx">BootX&lt;/h2>
&lt;p>Older versions of Stuffit will only extract BootX 1.1.3 which I why I updated
Stuffit Expander as explained earlier. Download BootX 1.2.2.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://penguinppc.org/bootloaders/bootx/">BootX&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Open it with Stuffit and extract it the the Desktop then open the resulting
BootX 1.2.2 folder on the desktop. Drag each of the following&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>BootX&lt;/li>
&lt;li>BootX Extension&lt;/li>
&lt;li>Linux Kernels&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;onto the &amp;ldquo;System Folder&amp;rdquo; one at a time to install BootX correctly. Insert the
Ubuntu PPC install CD and navigate to the &lt;code>/install/powerpc&lt;/code> folder.&lt;/p>
&lt;ul>
&lt;li>Copy &lt;code>vmlinux&lt;/code> to (the Linux kernel) &lt;code>System Folder/Linux Kernels&lt;/code>&lt;/li>
&lt;li>Copy &lt;code>initrd.gz&lt;/code> (the init ramdisk image) to &lt;code>System Folder/&lt;/code> and rename it to &lt;code>ramdisk.image.gz&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>BootX should appear on the apple menu and also run on every reboot during the
boot process, meaning that you can choose to boot Linux without having to wait
for the entire MacOS to load &lt;code>:-)&lt;/code> When you run BootX it should show &amp;lsquo;vmlinux&amp;rsquo;
as an available kernel, now add the following to &amp;ldquo;More kernel arguments&amp;rdquo; to make
sure the correct video mode is used for Linux.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>video=atyfb:vmode:14,cmode:32,mclk:71
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now click the &amp;ldquo;Options&amp;rdquo; button, check &amp;ldquo;Use Specified RAM disk&amp;rdquo; and select
&lt;code>System Folder/ramdisk.image.gz&lt;/code>. Click on the &amp;ldquo;Save to prefs&amp;rdquo; button and then
click on the &amp;ldquo;Linux&amp;rdquo; button and in a short while you should be looking at the
regular Ubuntu install dialogs.&lt;/p>
&lt;h3 id="other-video-mode-suggestions">Other Video Mode Suggestions&lt;/h3>
&lt;p>I didn&amp;rsquo;t test these, but my understanding is the &amp;lsquo;cmode&amp;rsquo; choose the bit depth 8
for 8bit, 16, for 16bit and so one. &amp;lsquo;mclk&amp;rsquo; controls the graphics/monitor refresh
rate I think, I was lucky that I the video mode suggested in the BootX README
worked first go.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>video=atyfb:vmode:14,cmode:32,mclk:65
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>video=atyfb:vmode:14,cmode:8,mclk:63
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="doing-the-ubuntu-installation">Doing the Ubuntu Installation&lt;/h2>
&lt;p>The installer will display an error message that &amp;ldquo;Configure a multiseat system&amp;rdquo;
failed. You can ignore this&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>Select &amp;lsquo;Continue&amp;rsquo;&lt;/li>
&lt;li>Select &amp;lsquo;Detect Hardware&amp;rsquo; and press Enter&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;and the install will continue normally.&lt;/p>
&lt;h3 id="partitioning">Partitioning&lt;/h3>
&lt;p>When it gets to partitioning the drive Ubuntu will suggest using the entire disk
for Linux. Don&amp;rsquo;t do that because you still need MacOS to run BootX to bootstrap
Linux. Select the &amp;ldquo;Use Free Space&amp;rdquo; option or partition manually.&lt;/p>
&lt;h3 id="copying-boot-to-the-hfs-system-folder">Copying /boot to the HFS System Folder&lt;/h3>
&lt;p>The rest of the install is fairly straight forward until you get to the part
where Ubuntu tries to install a bootloader. GRUB and Lilo don&amp;rsquo;t work on OldWorld
Macs, so Ubuntu will warn you that no bootloader can be installed. Switch to a
second console at this point (Option-F2) and use &lt;code>df&lt;/code> to see where things are
currently mounted. In my case the newly installed ubuntu was on &lt;code>/dev/hda8&lt;/code>
mounted as &lt;code>/target&lt;/code> and the HFS filesystem was &lt;code>/dev/hda7&lt;/code>. Make a mountpoint
and mount the HFS filesystem.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir hfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount /dev/hda7 hfs -t hfs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You might also want to add an entry to &lt;code>/etc/fstab&lt;/code> so it will be mounted when
you reboot. This makes updating kernels easier in the future.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#39;/dev/hda7 /hfs hfs defaults&amp;#39;&lt;/span> &amp;gt;&amp;gt; etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now copy the kernel and boot image over;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp boot/vmlinux hfs/System&lt;span style="color:#87ceeb">\ &lt;/span>Folder/Linux&lt;span style="color:#87ceeb">\ &lt;/span>Kernels/vmlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp boot/initrd.img hfs/System&lt;span style="color:#87ceeb">\ &lt;/span>Folder/ramdisk.image.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Option-F1 to get back to the installer, and tell it to go ahead and reboot.&lt;/p>
&lt;p>When the machine reboots the BootX dialog should come up straight away, just
click &amp;ldquo;Linux&amp;rdquo; and Ubuntu should proceed through the rest of the install as usual.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://ubuntuforums.org/showthread.php?t=73689">http://ubuntuforums.org/showthread.php?t=73689&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ubuntuforums.org/showthread.php?t=36431">http://ubuntuforums.org/showthread.php?t=36431&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.ubuntu.com/Installation/OldWorldMacs">https://wiki.ubuntu.com/Installation/OldWorldMacs&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://penguinppc.org/">http://penguinppc.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://gonz.wordpress.com/2006/03/22/installing-ubuntu-510-breezy-badger-on-an-old-world-powerbook-g3-wallstreet/">http://gonz.wordpress.com/2006/03/22/installing-ubuntu-510-breezy-badger-on-an-old-world-powerbook-g3-wallstreet/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Ubuntu on a PowerBook G3 for hack value</summary></item></channel></rss>