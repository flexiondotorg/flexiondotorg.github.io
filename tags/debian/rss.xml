<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debian on Wimpy's World</title><link>https://wimpysworld.com/tags/debian/</link><description>Recent content in Debian on Wimpy's World</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><managingEditor>martin@wimpress.com (Martin Wimpress)</managingEditor><webMaster>martin@wimpress.com (Martin Wimpress)</webMaster><lastBuildDate>Fri, 28 Apr 2023 16:00:00 +0100</lastBuildDate><atom:link href="https://wimpysworld.com/tags/debian/rss.xml" rel="self" type="application/rss+xml"/><item><title>Flash Stadia Controller Bluetooth Firmware on Linux</title><link>https://wimpysworld.com/posts/flash-stadia-controller-bluetooth-firmware-on-linux/</link><pubDate>Fri, 28 Apr 2023 16:00:00 +0100</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/flash-stadia-controller-bluetooth-firmware-on-linux/</guid><description>&lt;p>I was a &lt;a href="https://stadia.google.com/gg/">Google Stadia&lt;/a> &amp;ldquo;founder&amp;rdquo; and when it was shut down on January 18, 2023 I was left with 3 perfectly usable Stadia Controllers; provided I could connect them using a USB-C cable. I quite like the Stadia Controller, the form factor is similar to the PlayStation DualShock but with an Xbox style button layout.&lt;/p>
&lt;p class="text-center">
&lt;img src="./stadia-controller.webp" class="img-fluid" alt="Stadia Controller"/>
&lt;br />
&lt;em>Stadia Controller&lt;/em>
&lt;/p>
&lt;p>While using it via USB-C is great for PC, wireless connectivity would provide more options. Thankfully &lt;a href="https://stadia.google.com/controller">Google released Bluetooth firmware for the Stadia Controller&lt;/a> which disables Stadia&amp;rsquo;s proprietary Wi-Fi connectivity and enables Bluetooth® Low Energy (BLE). You can then use it like a standard wireless Bluetooth controller with other hardware and also still plug your Stadia Controller into a device with a USB-C cable.&lt;/p>
&lt;h2 id="compatibility-">Compatibility 🧩&lt;/h2>
&lt;p>The &lt;a href="https://support.google.com/stadia?p=controllerconnect#devicelist">Stadia Controller Device Compatibility List&lt;/a> says&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;Testing of Bluetooth mode was focused on the devices and systems listed below, but may not work with all hardware configurations.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Windows 10 and 11 + Steam&lt;/li>
&lt;li>MacOS® 13 + Steam&lt;/li>
&lt;li>ChromeOS&lt;/li>
&lt;li>Android&lt;/li>
&lt;/ul>
&lt;p>Most importantly, it says &lt;em>&lt;strong>&amp;ldquo;computers must have a Bluetooth Low Energy adapter in order to communicate with the Stadia Controller in Bluetooth mode and that hardware compatibility will vary.&amp;rdquo;&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="flash-stadia-controller-bluetooth-firmware-using-ubuntu-2204-">Flash Stadia Controller Bluetooth Firmware using Ubuntu 22.04 🐧&lt;/h2>
&lt;p>Here&amp;rsquo;s how I flashed that firmware on all 3 of my controllers using Linux; well Ubuntu 22.04 to be precise. The system requirements for the Bluetooth Firmware tool is stated to be Chrome 108 or newer. No problem! But, I was unable to get the controllers to show up in Chrome until some &lt;code>udev&lt;/code> rules were added. Open a terminal and run the following command from any directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>{ cat &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># SDP protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">KERNEL==&amp;#34;hidraw*&amp;#34;, ATTRS{idVendor}==&amp;#34;1fc9&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">ACTION==&amp;#34;add&amp;#34;, SUBSYSTEM==&amp;#34;usb&amp;#34;, ATTR{idVendor}==&amp;#34;1fc9&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">ACTION==&amp;#34;add&amp;#34;, SUBSYSTEM==&amp;#34;usb&amp;#34;, ATTR{idVendor}==&amp;#34;0d28&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># Flashloader
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">KERNEL==&amp;#34;hidraw*&amp;#34;, ATTRS{idVendor}==&amp;#34;15a2&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># Controller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">KERNEL==&amp;#34;hidraw*&amp;#34;, SUBSYSTEM==&amp;#34;hidraw&amp;#34;, ATTRS{idVendor}==&amp;#34;18d1&amp;#34;, MODE=&amp;#34;0666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">SUBSYSTEMS==&amp;#34;usb&amp;#34;, ATTRS{idVendor}==&amp;#34;18d1&amp;#34;, ATTRS{idProduct}==&amp;#34;9400&amp;#34;, MODE=&amp;#34;0660&amp;#34;, TAG+=&amp;#34;uaccess&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} | sudo tee /etc/udev/rules.d/70-stadiacontroller-flash.rules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run the following to reload the &lt;code>udev&lt;/code> rules.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo udevadm control --reload-rules
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo udevadm trigger
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With that done, I restarted Google Chrome and followed the instructions on the &lt;a href="https://stadia.google.com/controller/index_en_GB.html">Stadia Controller Firmware Flashing Tool&lt;/a> page. I was able to flash the firmware on all 3 of my controllers. The process is pretty straightforward but I&amp;rsquo;ve included the instructions below for reference.&lt;/p>
&lt;h3 id="charge-your-controller">Charge your controller&lt;/h3>
&lt;p>Make sure that your controller has been charged for 30 minutes and that you&amp;rsquo;re using a USB data cable.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Verify_Plug_in_controller.svg" class="img-fluid" alt="Charge your controller"/>
&lt;br>
&lt;b>Charge your controller&lt;/b>
&lt;/p>
&lt;h3 id="unplug-your-controller-to-power-it-off">Unplug your controller to power it off&lt;/h3>
&lt;p>If it turns on again, hold the Stadia button for 4 seconds to power it off&lt;/p>
&lt;p class="text-center">
&lt;img src="./Unlock_Unplug.svg" class="img-fluid" alt="Unplug your controller to power it off"/>
&lt;br>
&lt;b>Unplug your controller to power it off&lt;/b>
&lt;/p>
&lt;h3 id="hold-the-option-button-three-dots-while-plugging-in-your-controller">Hold the option button (three dots) while plugging in your controller&lt;/h3>
&lt;p>The status light should remain off. If it turns on, unplug the controller and try again&lt;/p>
&lt;p class="text-center">
&lt;img src="./Unlock_Option_Plug.svg" class="img-fluid" alt="Hold the option button (three dots) while plugging in your controller"/>
&lt;br>
&lt;b>Hold the option button (three dots) while plugging in your controller&lt;/b>
&lt;/p>
&lt;h3 id="press-the-option-assistant-a-and-y-buttons-at-the-same-time">Press the Option, Assistant, A, and Y buttons at the same time&lt;/h3>
&lt;p>There won&amp;rsquo;t be any controller feedback, proceed to the next step to confirm the controller is unlocked&lt;/p>
&lt;p class="text-center">
&lt;img src="./Unlock_Four_buttons.svg" class="img-fluid" alt="Press the Option, Assistant, A, and Y buttons at the same time"/>
&lt;br>
&lt;b>Press the Option, Assistant, A, and Y buttons at the same time&lt;/b>
&lt;/p>
&lt;h3 id="select-your-controller-in-the-chrome-device-list-and-click-connect">Select your controller in the Chrome device list and click &amp;ldquo;Connect&amp;rdquo;.&lt;/h3>
&lt;p>The text in the flashing utility says the Stadia Controller should be named &lt;strong>&amp;ldquo;SP Blank RT Family&amp;rdquo;&lt;/strong> or &amp;ldquo;Stadia Controller&amp;rdquo; or &amp;ldquo;USB COMPOSITE DEVICE&amp;rdquo;.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Chrome_dialog_Download_en-GB.svg" class="img-fluid" alt="Select your controller in the Chrome device list again and click Connect"/>
&lt;br>
&lt;b>Select your controller in the Chrome device list again and click "Connect".&lt;/b>
&lt;/p>
&lt;h3 id="download-complete">Download complete&lt;/h3>
&lt;p>You&amp;rsquo;ve almost finished. Go to the final step to install the latest version of Bluetooth mode on your controller.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Download_Download_complete.svg" class="img-fluid" alt="Download complete"/>
&lt;br>
&lt;b>Download complete&lt;/b>
&lt;/p>
&lt;h3 id="install-bluetooth-mode">Install Bluetooth mode&lt;/h3>
&lt;p>One more time - select your controller in the Chrome device list, then click &amp;ldquo;Connect&amp;rdquo;. Installation will start automatically and should only take a minute.&lt;/p>
&lt;p>The text in the flashing utility says the Stadia Controller should be named &lt;strong>&amp;ldquo;USB COMPOSITE DEVICE&amp;rdquo;&lt;/strong> or &amp;ldquo;Stadia Controller&amp;rdquo; or &amp;ldquo;SP Blank RT Family&amp;rdquo;.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Chrome_dialog_Install_en-GB.svg" class="img-fluid" alt="Install Bluetooth mode"/>
&lt;br>
&lt;b>Install Bluetooth mode&lt;/b>
&lt;/p>
&lt;h3 id="installation-complete">Installation complete&lt;/h3>
&lt;p>Wait a minute or so for the firmware installation to complete.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Finish_Bluetooth_enabled.svg" class="img-fluid" alt="Installation complete"/>
&lt;br>
&lt;b>Installation complete&lt;/b>
&lt;/p>
&lt;h2 id="pairing-stadia-controller-with-bluetooth">Pairing Stadia Controller with Bluetooth&lt;/h2>
&lt;p>Hold the Y and Stadia buttons for 2 seconds until the status light flashes orange. It is now in pairing mode and visible to other devices.&lt;/p>
&lt;p class="text-center">
&lt;img src="./Pairing_mode.svg" class="img-fluid" alt="Pairing Stadia Controller with Bluetooth"/>
&lt;br>
&lt;b>Pairing Stadia Controller with Bluetooth&lt;/b>
&lt;/p>
&lt;h2 id="hurray-up-">Hurray up! ⏳️&lt;/h2>
&lt;p>&lt;strong>After the shutdown in January 2023, you have until December 31, 2023, to update the controller so it can use Bluetooth mode.&lt;/strong>&lt;/p>
&lt;p>Fortunately, the &lt;a href="https://github.com/Scyne/stadiaRawBtFw">Stadia Controller firmware has been archived&lt;/a> and an &lt;a href="https://luigimannoni.github.io/stadia-controller-flasher/">Unofficial Stadia Controller Flashing utility&lt;/a> created which might prove useful after December 31, 2023.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://luigimannoni.github.io/stadia-controller-flasher/">&lt;strong>Unofficial Stadia Controller Flashing utility&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Your mileage may vary using the re-implementation of the &lt;a href="https://github.com/luigimannoni/stadia-controller-flasher">Utility for flashing Stadia Controllers&lt;/a>, so if you&amp;rsquo;re doing this before December 31, 2023, use the &lt;a href="https://stadia.google.com/controller/">official tool&lt;/a>.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>After updating my Stadia Controllers with Bluetooth firmware, I&amp;rsquo;ve successfully paired them with my Android tablet, iPhone 13 and &lt;a href="https://chimeraos.org/">ChimeraOS&lt;/a>; an operating system that provides an out-of-the-box couch gaming experience 🎮️ While Stadia might be dead and gone, I&amp;rsquo;m very happy to continue to get utility out of the controllers; which turned out to be free after the reimbursement Google offered when Stadia was shut down.&lt;/p></description><summary>How to flash Stadia Controller Bluetooth mode on Linux</summary></item><item><title>machinespawn</title><link>https://wimpysworld.com/projects/machinespawn/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/projects/machinespawn/</guid><description>&lt;p>&lt;a href="https://github.com/wimpysworld/machinespawn">machinespawn&lt;/a> is a wrapper for
&lt;code>machinectl&lt;/code> and &lt;code>systemd-nspawn&lt;/code> to creating and managing containers; primarily
focused at local development environment and CI/CD with a heavy emphasis on
caching.&lt;/p>
&lt;ul>
&lt;li>Organisation: &lt;a href="https://github.com/wimpysworld/machinespawn">machinespawn&lt;/a>&lt;/li>
&lt;li>Date: October 2022 - date&lt;/li>
&lt;li>Role: Project Lead&lt;/li>
&lt;/ul></description><summary>Quickly stand up systemd-nspawn containers for development or CI/CD</summary></item><item><title>deb-get</title><link>https://wimpysworld.com/projects/deb-get/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/projects/deb-get/</guid><description>&lt;p>&lt;a href="https://github.com/wimpysworld/deb-get">deb-get&lt;/a> makes it easy to install and
update .debs published in 3rd party apt repositories or made available via
direct download on websites or GitHub release pages.&lt;/p>
&lt;ul>
&lt;li>Organisation: &lt;a href="https://github.com/wimpysworld/deb-get">deb-get&lt;/a>&lt;/li>
&lt;li>Date: April 2022 - date&lt;/li>
&lt;li>Role: Project Lead&lt;/li>
&lt;/ul></description><summary>apt-get functionality for .debs published in GitHub release or 3rd party repositories</summary></item><item><title>HP Microserver N54L power saving and performance tuning using Debian</title><link>https://wimpysworld.com/posts/hp-microserver-n54l-power-saving-and-performance-tuning-using-debian/</link><pubDate>Wed, 16 Dec 2015 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/hp-microserver-n54l-power-saving-and-performance-tuning-using-debian/</guid><description>&lt;p>I&amp;rsquo;ve installed &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a>
on a &lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>
and use it as media server for the house. OpenMediaVault (OMV) is a
network attached storage (NAS) solution based on &lt;a href="http://www.debian.org">Debian&lt;/a>.&lt;/p>
&lt;p>I want to minimise power consumption but maximise performance. Here are
some tweaks reduce power consumption and improve network performance.&lt;/p>
&lt;h1 id="power-saving">Power Saving&lt;/h1>
&lt;p>Install the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install amd64-microcode firmware-linux firmware-linux-free &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>firmware-linux-nonfree pciutils powertop radeontool
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And for ACPI.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install acpi acpid acpi-support acpi-support-base
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="aspm-and-acpi">ASPM and ACPI&lt;/h2>
&lt;p>First I enabled PCIE ASPM in the BIOS and forced the kernel to use it and
ACPI via &lt;code>grub&lt;/code> by changing &lt;code>GRUB_CMDLINE_LINUX_DEFAULT&lt;/code> in &lt;code>/etc/default/grub&lt;/code>,
so it looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;quiet acpi=force pcie_aspm=force nmi_watchdog=0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then update &lt;code>grub&lt;/code> and reboot.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>update-grub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="enable-power-saving-via-udev">Enable Power Saving via udev&lt;/h2>
&lt;p>The following rules file &lt;code>/etc/udev/rules.d/90-local-n54l.rules&lt;/code> enables
power saving modes for all PCI, SCSI and USB devices and ASPM. Futher
the internal Radeon card power profile is set to low as there is rarely
a monitor connected. The file contains the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;module&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">KERNEL&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;pcie_aspm&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;parameters/policy&amp;#34;&lt;/span>, ATTR{parameters/policy}=&lt;span style="color:#87ceeb">&amp;#34;powersave&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;i2c&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/control&amp;#34;&lt;/span>, ATTR{power/control}=&lt;span style="color:#87ceeb">&amp;#34;auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;pci&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/control&amp;#34;&lt;/span>, ATTR{power/control}=&lt;span style="color:#87ceeb">&amp;#34;auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;usb&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/control&amp;#34;&lt;/span>, ATTR{power/control}=&lt;span style="color:#87ceeb">&amp;#34;auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;usb&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/autosuspend&amp;#34;&lt;/span>, ATTR{power/autosuspend}=&lt;span style="color:#87ceeb">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;scsi&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/control&amp;#34;&lt;/span>, ATTR{power/control}=&lt;span style="color:#87ceeb">&amp;#34;auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;spi&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/control&amp;#34;&lt;/span>, ATTR{power/control}=&lt;span style="color:#87ceeb">&amp;#34;auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;drm&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">KERNEL&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;card*&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">DRIVERS&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;radeon&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;power/control&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;device/power_method&amp;#34;&lt;/span>, ATTR{device/power_method}=&lt;span style="color:#87ceeb">&amp;#34;profile&amp;#34;&lt;/span>, ATTR{device/power_profile}=&lt;span style="color:#87ceeb">&amp;#34;low&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SUBSYSTEM&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;scsi_host&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">KERNEL&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;host*&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">ACTION&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#eedd82">TEST&lt;/span>==&lt;span style="color:#87ceeb">&amp;#34;link_power_management_policy&amp;#34;&lt;/span>, ATTR{link_power_management_policy}=&lt;span style="color:#87ceeb">&amp;#34;min_power&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add this to &lt;code>/erc/rc.local&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#39;1500&amp;#39;&lt;/span> &amp;gt; &lt;span style="color:#87ceeb">&amp;#39;/proc/sys/vm/dirty_writeback_centisecs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="hard-disk-spindown">Hard disk spindown&lt;/h2>
&lt;p>Using the Open Media Vault web interface got to &lt;code>Storage -&amp;gt; Physical Disks&lt;/code>,
select each disk in turn and click &lt;code>Edit&lt;/code> then set:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Advanced Power Management:&lt;/strong> Intermediate power usage with standby&lt;/li>
&lt;li>&lt;strong>Automatic Acoustic Management:&lt;/strong> Minimum performance, Minimum acoustic output&lt;/li>
&lt;li>&lt;strong>Spindown time:&lt;/strong> 20 minutes&lt;/li>
&lt;/ul>
&lt;h1 id="performance-tuning">Performance Tuning&lt;/h1>
&lt;h2 id="network">Network&lt;/h2>
&lt;p>The following tweaks improve network performance ,but &lt;strong>I have a
&lt;a href="http://www.hiwifi.co.uk/">HP NC360T PCI Express Dual Port Gigabit Server Adapter&lt;/a>&lt;/strong>
in my N54L so these settings may not be applicable to the onboard NIC.&lt;/p>
&lt;p>Add this to &lt;code>/erc/rc.local&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ethtool -G eth0 rx &lt;span style="color:#f60">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ethtool -G eth1 rx &lt;span style="color:#f60">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ethtool -G eth0 tx &lt;span style="color:#f60">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ethtool -G eth1 tx &lt;span style="color:#f60">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 txqueuelen &lt;span style="color:#f60">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth1 txqueuelen &lt;span style="color:#f60">1000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following to &lt;code>/etc/sysctl.d/local.conf&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>fs.file-max = &lt;span style="color:#f60">100000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.core.netdev_max_backlog = &lt;span style="color:#f60">50000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.core.optmem_max = &lt;span style="color:#f60">40960&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.core.rmem_default = &lt;span style="color:#f60">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.core.rmem_max = &lt;span style="color:#f60">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.core.wmem_default = &lt;span style="color:#f60">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.core.wmem_max = &lt;span style="color:#f60">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.conf.all.accept_redirects = &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.conf.all.accept_source_route = &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.conf.all.log_martians = &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.conf.all.send_redirects = &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.ip_local_port_range = &lt;span style="color:#f60">10000&lt;/span> &lt;span style="color:#f60">65000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_fin_timeout = &lt;span style="color:#f60">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_max_syn_backlog = &lt;span style="color:#f60">30000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_max_tw_buckets = &lt;span style="color:#f60">2000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_rfc1337 = &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_rmem = &lt;span style="color:#f60">4096&lt;/span> &lt;span style="color:#f60">87380&lt;/span> &lt;span style="color:#f60">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_sack=&lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_slow_start_after_idle = &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_timestamps=&lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_tw_reuse = &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.tcp_wmem = &lt;span style="color:#f60">4096&lt;/span> &lt;span style="color:#f60">65536&lt;/span> &lt;span style="color:#f60">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.udp_rmem_min = &lt;span style="color:#f60">8192&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.udp_wmem_min = &lt;span style="color:#f60">8192&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vm.swappiness = &lt;span style="color:#f60">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>With these settings applied &lt;code>powertop&lt;/code> reports everything that can be in
a power saving mode is and the room temperature is measurably cooler.
More importantly, with four 4TB drives in a RAID-5 configuration
formatted with XFS and dual bonded gigabit ethernet, I am able to backup
data to the server at a sustained rate of 105MB/s, which is 0.85 Gbit.&lt;/p>
&lt;p>Not too shabby for an AMD Turion II Neo N54L (2.2GHz) 🙂&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.wgdd.de/2013/08/hp-n54l-microserver-energy-efficiency.html?m=1">http://www.wgdd.de/2013/08/hp-n54l-microserver-energy-efficiency.html?m=1&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://gareth.halfacree.co.uk/2014/02/tuning-an-hp-proliant-microserver">http://gareth.halfacree.co.uk/2014/02/tuning-an-hp-proliant-microserver&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.scottalanmiller.com/linux/2011/06/20/working-with-nic-ring-buffers/">http://www.scottalanmiller.com/linux/2011/06/20/working-with-nic-ring-buffers/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/dstroot/2785263">https://gist.github.com/dstroot/2785263&lt;/a>&lt;/li>
&lt;/ul></description><summary>Configure HP Microserver N54L Power Saving on Debian</summary></item><item><title>Debian</title><link>https://wimpysworld.com/projects/debian/</link><pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/projects/debian/</guid><description>&lt;p>Debian is a Unix-like computer operating system and a Linux distribution that is
composed entirely of free and open-source software, most of which is under the
GNU General Public License, and packaged by a group of individuals known as the
Debian Project.&lt;/p>
&lt;ul>
&lt;li>Organisation: &lt;a href="https://debian.org">Debian Project&lt;/a>&lt;/li>
&lt;li>Date: October 2014 - date&lt;/li>
&lt;li>Role: Package maintainer&lt;/li>
&lt;/ul></description><summary>Package maintainer for (mostly) MATE Desktop in Debian and Ubuntu</summary></item><item><title>Installing Willie IRC Bot on Debian</title><link>https://wimpysworld.com/posts/installing-willie-irc-bot-on-debian/</link><pubDate>Sat, 09 Aug 2014 11:11:11 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/installing-willie-irc-bot-on-debian/</guid><description>&lt;p>&lt;a href="http://willie.dftba.net/">Willie&lt;/a> is an IRC bot written in &lt;a href="http://www.python.org">Python&lt;/a>
that I&amp;rsquo;ve recently started using. This blog post describes how to install Willie
on Debian and as usual I will be using &lt;code>virtualenv&lt;/code> to isolate this Python
application from the rest of the system.&lt;/p>
&lt;h2 id="installing-python">Installing Python&lt;/h2>
&lt;p>First you&amp;rsquo;ll need Python.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install libpython2.7 python2.7 python2.7-dev python2.7-minimal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following will also be required to enable all the features Willie supports.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install enchant python2.7-dev libxslt1-dev libxml2-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove any &lt;code>apt&lt;/code> installed Python packages that we are about to replace.
The versions of these packages in the Debian repositories soon get stale.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge python-setuptools python-virtualenv python-pip python-profiler
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>pip&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://bootstrap.pypa.io/get-pip.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.7 get-pip.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>pip&lt;/code> to install &lt;code>virtualenv&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pip install virtualenv --upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-snakepit">The Snakepit&lt;/h2>
&lt;p>Create a &amp;ldquo;Snakepit&amp;rdquo; directory for storing all the Python virtual
environments.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir ~/Snakepit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-virtualenv-for-willie">Create a virtualenv for Willie&lt;/h2>
&lt;p>The following will create a new virtualenv called &lt;code>willie&lt;/code> using Python
2.7 as the interpreter.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>virtualenv -p /usr/bin/python2.7 ~/Snakepit/willie
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="working-on-a-virtualenv">Working on a virtualenv&lt;/h3>
&lt;p>Activate the virtualenv for Willie.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>source ~/Snakepit/willie/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Your shell prompt will change, something like &lt;code>(willie)user@host:~$&lt;/code>,
while a virtualenv is being worked on to indicate which virtualenv is
currently active.&lt;/p>
&lt;p>While working on a virtualenv you can &lt;code>pip&lt;/code> install what you need or
manually install any Python libraries safe in the knowledge you will
not upset any other virtualenvs or the global packages in the process.
Very useful for developing a new branch which may have different
library requirements than the current stable release.&lt;/p>
&lt;p>When you are finished working in a virtualenv you can deactivate it by
simply executing &lt;code>deactivate&lt;/code>.&lt;/p>
&lt;h2 id="install-willie">Install Willie&lt;/h2>
&lt;p>I&amp;rsquo;ve decided to use Python 2.7 to run Willie and therefore have to
install &lt;code>backports.ssl_match_hostname&lt;/code> which is not required if you use
Python 3.3.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install willie backports.ssl_match_hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="additional-functionality">Additional functionality&lt;/h3>
&lt;p>Willie has no external dependencies, besides Python. However, some of
the modules do have external dependencies. So install the following
Python modules so that I can make use of everything Willie can do.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install feedparser pytz lxml praw pyenchant pygeoip ipython --upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-willie">Configure Willie&lt;/h2>
&lt;p>I am not going to explain to how to configure Willie because all that
good stuff is very well documented by the project.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/embolalia/willie/wiki">https://github.com/embolalia/willie/wiki&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>But for reference, my &lt;code>default.cfg&lt;/code> looks something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[core]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nick = &lt;span style="color:#87ceeb">nicofyourbot&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user = &lt;span style="color:#87ceeb">nicofyourbot&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name = &lt;span style="color:#87ceeb">Give You Bot A Name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host = &lt;span style="color:#87ceeb">chat.freenode.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>use_ssl = &lt;span style="color:#87ceeb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>verify_ssl = &lt;span style="color:#87ceeb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port = &lt;span style="color:#87ceeb">6697&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>owner = &lt;span style="color:#87ceeb">nicofthebotowner&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>channels = &lt;span style="color:#87ceeb">#example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nickserv_password = &lt;span style="color:#87ceeb">************&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prefix = &lt;span style="color:#87ceeb">\.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>timeout = &lt;span style="color:#87ceeb">120&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[db]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>userdb_type = &lt;span style="color:#87ceeb">sqlite&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>userdb_file = &lt;span style="color:#87ceeb">/home/username/.willie/willie.db&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="willie-as-a-daemon">Willie as a daemon&lt;/h2>
&lt;p>From this point on I assume you&amp;rsquo;ve completed the first run
configuration of Willie and have &lt;code>.willie/default.cfg&lt;/code> in your home
directory.&lt;/p>
&lt;p>Add the following to &lt;code>/etc/init.d/willie&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Provides: willie&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Start: $local_fs $remote_fs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Stop: $local_fs $remote_fs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Should-Start: $network&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Should-Stop: $network&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Short-Description: Willie IRC Bot.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Description: Start and stops the Willie IRC bot for a given user.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># NOTE! Replace with the user you want to run Willie.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">willie_USER&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;yourusername&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#f00">$(&lt;/span>getent passwd &lt;span style="color:#eedd82">$willie_USER&lt;/span> | awk -F: &lt;span style="color:#87ceeb">&amp;#39;{print $6}&amp;#39;&lt;/span>&lt;span style="color:#f00">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HOMEDIR&lt;/span>&lt;span style="color:#87ceeb">/Snakepit/willie/bin/willie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">CONFIG&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HOMEDIR&lt;/span>&lt;span style="color:#87ceeb">/.willie/default.cfg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>startd() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -f &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">CONFIG&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Starting Willie for &lt;/span>&lt;span style="color:#eedd82">$willie_USER&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon -c &lt;span style="color:#eedd82">$willie_USER&lt;/span> -u &lt;span style="color:#eedd82">$willie_USER&lt;/span> -x &lt;span style="color:#eedd82">$DAEMON&lt;/span> -S -- --config &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">CONFIG&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span> --fork --quiet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Couldn&amp;#39;t start Willie for &lt;/span>&lt;span style="color:#eedd82">$willie_USER&lt;/span>&lt;span style="color:#87ceeb"> (no &lt;/span>&lt;span style="color:#eedd82">$CONFIG&lt;/span>&lt;span style="color:#87ceeb"> found)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stopd() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Stopping Willie for &lt;/span>&lt;span style="color:#eedd82">$willie_USER&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">willie_PID&lt;/span>=&lt;span style="color:#f00">$(&lt;/span>pgrep -fu &lt;span style="color:#eedd82">$willie_USER&lt;/span> &lt;span style="color:#eedd82">$DAEMON&lt;/span>&lt;span style="color:#f00">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -z &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$willie_PID&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Willie for USER &lt;/span>&lt;span style="color:#eedd82">$willie_USER&lt;/span>&lt;span style="color:#87ceeb">: not running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kill -15 &lt;span style="color:#eedd82">$willie_PID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">willie_PID&lt;/span>=&lt;span style="color:#f00">$(&lt;/span>pgrep -fu &lt;span style="color:#eedd82">$willie_USER&lt;/span> &lt;span style="color:#eedd82">$DAEMON&lt;/span>&lt;span style="color:#f00">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -z &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$willie_PID&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Willie for USER &lt;/span>&lt;span style="color:#eedd82">$willie_USER&lt;/span>&lt;span style="color:#87ceeb">: not running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Willie for USER &lt;/span>&lt;span style="color:#eedd82">$willie_USER&lt;/span>&lt;span style="color:#87ceeb">: running (pid &lt;/span>&lt;span style="color:#eedd82">$willie_PID&lt;/span>&lt;span style="color:#87ceeb">)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start) startd ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop) stopd ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart|reload|force-reload) stopd &amp;amp;&amp;amp; startd ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status) status ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *) echo &lt;span style="color:#87ceeb">&amp;#34;Usage: /etc/init.d/willie {start|stop|reload|force-reload|restart|status}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Set the permissions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod +x /etc/init.d/willie
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check that you can start/stop Willie.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/willie start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/willie status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/willie stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add &lt;code>willie&lt;/code> to the startup/shutdown sequence.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo update-rc.d willie defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And that&amp;rsquo;s it. Willie is now running as a daemon inside a virtualenv.&lt;/p></description><summary>How I Installed Willie IRC Bot on Debian Wheezy</summary></item><item><title>ZNC IRC proxy</title><link>https://wimpysworld.com/posts/znc-irc-proxy/</link><pubDate>Sat, 02 Aug 2014 10:10:10 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/znc-irc-proxy/</guid><description>&lt;p>I have been using the &lt;a href="https://wimpysworld.com/posts/bip-irc-proxy/">BIP&lt;/a> IRC proxy that maintains a
persistent connection to a list of IRC channels. However, I&amp;rsquo;ve heard good things
about &lt;a href="http://znc.in">ZNC&lt;/a> and decided to give it a try.&lt;/p>
&lt;p>The purpose of an IRC proxy, or bouncer, is that you can then point your IRC
clients to them to maintain a transparent connection from multiple clients
and playback the conversations that took place while you were away.&lt;/p>
&lt;h2 id="installing-znc">Installing ZNC&lt;/h2>
&lt;p>The ZNC package for Debian Wheezy are very old, so I decide to install
from source.&lt;/p>
&lt;h3 id="install-required-packages">Install required packages&lt;/h3>
&lt;p>We first need to make sure we have all the packages required to build ZNC.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install build-essential libssl-dev libperl-dev pkg-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="compile-znc">Compile ZNC&lt;/h3>
&lt;p>Now download and compile ZNC.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget http://znc.in/releases/znc-1.4.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar zxvf znc-1.4.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd znc-1.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --with-openssl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-user">Create a user&lt;/h3>
&lt;p>Create a separate ZNC user so that ZNC does not need to run as root:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo groupadd znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo adduser --system --home /var/lib/znc --group znc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuring-znc">Configuring ZNC&lt;/h3>
&lt;p>You can use the interactive wizard to configure ZNC which really
help create the initial configuration.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo -u znc /usr/local/bin/znc --datadir=/var/lib/znc --makeconf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is a transcript of how I answered the initial configuration questions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[ .. ] Checking for list of available modules...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] Building new config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] First let&amp;#39;s start with some global settings...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] What port would you like ZNC to listen on? (1025 to 65535): 7778
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like ZNC to listen using SSL? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like ZNC to listen using both IPv4 and IPv6? (yes/no) [yes]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ .. ] Verifying the listener...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] Unable to locate pem file: [/var/lib/znc/znc.pem], creating it
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ .. ] Writing Pem file [/var/lib/znc/znc.pem]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] -- Global Modules --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +-----------+----------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | Name | Description |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +-----------+----------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | partyline | Internal channels and queries for users connected to znc |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | webadmin | Web based administration module |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +-----------+----------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] And 10 other (uncommon) modules. You can enable those later.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load global module &amp;lt;partyline&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load global module &amp;lt;webadmin&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] Now we need to set up a user...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Username (AlphaNumeric): yournick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Enter Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Confirm Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like this user to be an admin? (yes/no) [yes]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Nick [yournick]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Alt Nick [yournick_]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Ident [yournick]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Real Name [Got ZNC?]: Your Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Bind Host (optional):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Number of lines to buffer per channel [50]: 1024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like to clear channel buffers after replay? (yes/no) [yes]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Default channel modes [+stn]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] -- User Modules --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +--------------+------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | Name | Description |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +--------------+------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | chansaver | Keep config up-to-date when user joins/parts |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | controlpanel | Dynamic configuration through IRC. Allows editing only yourself if you&amp;#39;re not ZNC admin. |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | perform | Keeps a list of commands to be executed when ZNC connects to IRC. |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] | webadmin | Web based administration module |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] +--------------+------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ] And 21 other (uncommon) modules. You can enable those later.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;chansaver&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;controlpanel&amp;gt;? (yes/no) [no]: tes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;controlpanel&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;perform&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Load module &amp;lt;webadmin&amp;gt;? (yes/no) [no]: yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like to set up a network? (yes/no) [no]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Would you like to set up another user? (yes/no) [no]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ .. ] Writing config [/var/lib/znc/configs/znc.conf]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ &amp;gt;&amp;gt; ] ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]To connect to this ZNC you need to connect to it as your IRC server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]using the port that you supplied. You have to supply your login info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]as the IRC server password like this: user/network:pass.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]Try something like this in your IRC client...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]/server &amp;lt;znc_server_ip&amp;gt; +7778 flexiondotorg:&amp;lt;pass&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]And this in your browser...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]https://&amp;lt;znc_server_ip&amp;gt;:7778/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ** ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ?? ] Launch ZNC now? (yes/no) [yes]: no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="running-znv-as-a-daemon">Running ZNV as a daemon&lt;/h3>
&lt;p>Here is a &lt;code>/etc/init.d/znc&lt;/code> for Debian based on this installation method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#! /bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Provides: znc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Start: $remote_fs $syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Stop: $remote_fs $syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Short-Description: ZNC IRC bouncer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Description: ZNC is an IRC bouncer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PATH&lt;/span>=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DESC&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;ZNC daemon&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">NAME&lt;/span>=znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON&lt;/span>=/usr/local/bin/&lt;span style="color:#eedd82">$NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DATADIR&lt;/span>=/var/lib/znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON_ARGS&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;--datadir=&lt;/span>&lt;span style="color:#eedd82">$DATADIR&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PIDDIR&lt;/span>=&lt;span style="color:#eedd82">$DATADIR&lt;/span>/run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PIDFILE&lt;/span>=&lt;span style="color:#eedd82">$PIDDIR&lt;/span>/&lt;span style="color:#eedd82">$NAME&lt;/span>.pid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">SCRIPTNAME&lt;/span>=/etc/init.d/&lt;span style="color:#eedd82">$NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">USER&lt;/span>=znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">GROUP&lt;/span>=znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Exit if the package is not installed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ -x &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$DAEMON&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> ] || exit &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Read configuration variable file if it is present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ -r /etc/default/&lt;span style="color:#eedd82">$NAME&lt;/span> ] &amp;amp;&amp;amp; . /etc/default/&lt;span style="color:#eedd82">$NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Load the VERBOSE setting and other rcS variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. /lib/init/vars.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Define LSB log_* functions.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Depend on lsb-base (&amp;gt;= 3.2-14) to ensure that this file is present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># and status_of_proc is working.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. /lib/lsb/init-functions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Function that starts the daemon/service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do_start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 0 if daemon has been started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 1 if daemon was already running&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 2 if daemon could not be started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ ! -d &lt;span style="color:#eedd82">$PIDDIR&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir &lt;span style="color:#eedd82">$PIDDIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chown &lt;span style="color:#eedd82">$USER&lt;/span>:&lt;span style="color:#eedd82">$GROUP&lt;/span> &lt;span style="color:#eedd82">$PIDDIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --start --quiet --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --exec &lt;span style="color:#eedd82">$DAEMON&lt;/span> --test --chuid &lt;span style="color:#eedd82">$USER&lt;/span> &amp;gt; /dev/null || &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --start --quiet --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --exec &lt;span style="color:#eedd82">$DAEMON&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span> -- &lt;span style="color:#eedd82">$DAEMON_ARGS&lt;/span> &amp;gt; /dev/null || &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Function that stops the daemon/service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do_stop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 0 if daemon has been stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 1 if daemon was already stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># 2 if daemon could not be stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># other if a failure occurred&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --name &lt;span style="color:#eedd82">$NAME&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">RETVAL&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$RETVAL&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> = &lt;span style="color:#f60">2&lt;/span> ] &amp;amp;&amp;amp; &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Wait for children to finish too if this is a daemon that forks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># and if the daemon is only ever run from this initscript.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># If the above conditions are not satisfied then add some other code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># that waits for the process to drop all resources that could be&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># needed by services started subsequently. A last resort is to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># sleep for some time.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec &lt;span style="color:#eedd82">$DAEMON&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> = &lt;span style="color:#f60">2&lt;/span> ] &amp;amp;&amp;amp; &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Many daemons don&amp;#39;t delete their pidfiles when they exit.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm -f &lt;span style="color:#eedd82">$PIDFILE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$RETVAL&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Function that sends a SIGHUP to the daemon/service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>do_reload() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon --stop --signal &lt;span style="color:#f60">1&lt;/span> --quiet --pidfile &lt;span style="color:#eedd82">$PIDFILE&lt;/span> --name &lt;span style="color:#eedd82">$NAME&lt;/span> --chuid &lt;span style="color:#eedd82">$USER&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">return&lt;/span> &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Starting &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0|1) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">0&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Stopping &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0|1) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">0&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2) [ &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$VERBOSE&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> != no ] &amp;amp;&amp;amp; log_end_msg &lt;span style="color:#f60">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status_of_proc -p &lt;span style="color:#eedd82">$PIDFILE&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$DAEMON&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &amp;amp;&amp;amp; exit &lt;span style="color:#f60">0&lt;/span> || exit &lt;span style="color:#eedd82">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Reloading &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_end_msg &lt;span style="color:#eedd82">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_daemon_msg &lt;span style="color:#87ceeb">&amp;#34;Restarting &lt;/span>&lt;span style="color:#eedd82">$DESC&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$NAME&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0|1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> do_start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$?&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0) log_end_msg &lt;span style="color:#f60">0&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1) log_end_msg &lt;span style="color:#f60">1&lt;/span> ;; &lt;span style="color:#0f0"># Old process is still running&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *) log_end_msg &lt;span style="color:#f60">1&lt;/span> ;; &lt;span style="color:#0f0"># Failed to start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0f0"># Failed to stop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_end_msg &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Usage: &lt;/span>&lt;span style="color:#eedd82">$SCRIPTNAME&lt;/span>&lt;span style="color:#87ceeb"> {status|start|stop|reload|restart}&amp;#34;&lt;/span> &amp;gt;&amp;amp;&lt;span style="color:#f60">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#f60">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you&amp;rsquo;ve created the script, you must give it the proper permissions to run
and add the script to the startup/shutdown sequence.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">755&lt;/span> /etc/init.d/znc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo update-rc.d znc defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service znc start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Stop the service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service znc stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="web-configuration">Web configuration&lt;/h3>
&lt;p>I love that ZNC comes bundled with a web based configuration tool. Just
login to &lt;a href="https://znc.example.org:7778">https://znc.example.org:7778&lt;/a> to add users, add networks to
users and to add channels to networks. Really simple stuff.&lt;/p>
&lt;h3 id="irc-client-configuration">IRC client configuration&lt;/h3>
&lt;p>I use &lt;a href="http://hexchat.github.io/">HexChat&lt;/a>, but other IRC clients are available.
Just add a new Network to HexChat for your ZNC server, use the username,
suffixed with the network name you configured in ZNC, and your ZNC password.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I much prefer ZNC to BIP.&lt;/p>
&lt;ul>
&lt;li>I really like the web and IRC configuration but I still have the option to
configure the config files directly.&lt;/li>
&lt;li>ZNC is far less cryptic with regard to setting up IRC client connections and
user management is much better implemented.&lt;/li>
&lt;li>When I add a new channel to an existing network in ZNC it automatically appears
in my connected clients without the need to restart anything.&lt;/li>
&lt;li>ZNC&amp;rsquo;s IRC backlogs don&amp;rsquo;t have the confusing double time stamps present in BIP
and ZNC is much faster re-establishing connections to my multiple IRC network and
channels.&lt;/li>
&lt;li>Most importantly, ZNC has been far more stable than BIP.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>References&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://wiki.znc.in/Installation">http://wiki.znc.in/Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.znc.in/Running_ZNC_as_a_system_daemon">http://wiki.znc.in/Running_ZNC_as_a_system_daemon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-znc-an-irc-bouncer-on-an-ubuntu-vps">https://www.digitalocean.com/community/tutorials/how-to-install-znc-an-irc-bouncer-on-an-ubuntu-vps&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raymii.org/s/tutorials/Install_the_Lastest_ZNC_from_Source_in_Ubuntu.html">https://raymii.org/s/tutorials/Install_the_Lastest_ZNC_from_Source_in_Ubuntu.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shellfish.io/tutorial/1/how-to-install-znc-on-debian-7/">https://shellfish.io/tutorial/1/how-to-install-znc-on-debian-7/&lt;/a>&lt;/li>
&lt;/ul></description><summary>How I install the ZNC IRC bouncer on Debian Wheezy</summary></item><item><title>Monitorix on Debian</title><link>https://wimpysworld.com/posts/monitorix-on-debian/</link><pubDate>Sat, 19 Jul 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/monitorix-on-debian/</guid><description>&lt;p>I have a few Debian servers that run at home and on VPSs. I wanted to add some
basic systems monitoring to them, but didn&amp;rsquo;t want anything too complicated to
look after. I found &lt;a href="http://www.monitorix.org/">Monitorix&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Monitorix is a free, open source, lightweight system monitoring tool
designed to monitor as many services and system resources as possible.
It has been created to be used under production Linux/UNIX servers,
but due to its simplicity and small size can be used on embedded devices
as well.&lt;/p>
&lt;/blockquote>
&lt;h1 id="install-monitorix">Install Monitorix&lt;/h1>
&lt;p>This install has been tested on Debian Squeeze and Wheezy. First install
the dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install rrdtool perl libwww-perl libmailtools-perl &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>libmime-lite-perl librrds-perl libdbi-perl libxml-simple-perl &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>libhttp-server-simple-perl libconfig-general-perl libio-socket-ssl-perl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now Monitorix itself.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -c &lt;span style="color:#87ceeb">&amp;#34;http://apt.izzysoft.de/ubuntu/dists/generic/index.php?file=monitorix_3.5.1-izzy1_all.deb&amp;#34;&lt;/span> -O monitorix_3.5.1-izzy1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i monitorix_3.5.1-izzy1_all.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point Monitorix is installed and running. Point your browser to
&lt;code>http://example.org:8080/monitorix/&lt;/code> and enjoy!&lt;/p>
&lt;h1 id="configuring-monitorix">Configuring Monitorix&lt;/h1>
&lt;p>Everything in &lt;code>/etc/monitorix/monitorix.conf&lt;/code> is comprehensively documented,
just get tweaking.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.monitorix.org/documentation.html">http://www.monitorix.org/documentation.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Each time you update the configuration Monitorix will require a restart.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service monitorix restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-status">nginx status&lt;/h2>
&lt;p>If you run &lt;a href="http://wiki.nginx.org/Main">nginx&lt;/a> then you&amp;rsquo;ll want to drop the
following into &lt;code>/etc/nginx/conf.d/status.conf&lt;/code> so that Monitorix can monitor
nginx.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">listen&lt;/span> localhost:&lt;span style="color:#f60">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">location&lt;/span> &lt;span style="color:#87ceeb">/nginx_status&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">stub_status&lt;/span> &lt;span style="color:#7fffd4">on&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">access_log&lt;/span> &lt;span style="color:#7fffd4">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">allow&lt;/span> &lt;span style="color:#f60">127&lt;/span>&lt;span style="color:#87ceeb">.0.0.1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">deny&lt;/span> &lt;span style="color:#87ceeb">all&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.monitorix.org/doc-debian.html">http://www.monitorix.org/doc-debian.html&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up Monitorix on Debian Squeeze &amp;amp; Wheezy</summary></item><item><title>subSonic on Debian</title><link>https://wimpysworld.com/posts/subsonic-on-debian/</link><pubDate>Sat, 12 Jul 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/subsonic-on-debian/</guid><description>&lt;p>Last year I removed all my music from Google Play Music and created my own
&lt;a href="http://www.subsonic.org/">subSonic&lt;/a> server. I really like subSonic but don&amp;rsquo;t
use it a huge amount, mostly for syncing some music to my phone prior to going
on holiday or business. Therefore, I&amp;rsquo;ve made a single one time donation to the
project rather than the ongoing monthly usage fee.&lt;/p>
&lt;h1 id="installing-subsonic-on-debian">Installing subSonic on Debian&lt;/h1>
&lt;p>This is how I install subSonic on Debian Wheezy.&lt;/p>
&lt;h2 id="install-tomcat">Install Tomcat.&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install tomcat7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-subsonic">Install subSonic.&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install ffmpeg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir /var/subsonic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown tomcat7: /var/subsonic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo wget -c https://github.com/KHresearch/subsonic/releases/download/v4.9-kang/subsonic.war
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo cp subsonic.war /var/lib/tomcat7/webapps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart Tomcat.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service tomcat7 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Login to subSonic by visiting &lt;a href="http://server.example.org:8080/subsonic">http://server.example.org:8080/subsonic&lt;/a> and
login with the credentials &lt;code>admin&lt;/code> and &lt;code>admin&lt;/code>. Make sure you change the
password straight away.&lt;/p>
&lt;p>Right, that is it. You can stop here and start filling subSonic with your
music.&lt;/p>
&lt;h1 id="subsonic-clients">subSonic clients&lt;/h1>
&lt;p>On the rare occasions that I listen to music via subSonic I use
&lt;a href="https://play.google.com/store/apps/details?id=com.thejoshwa.ultrasonic.androidapp">UltraSonic&lt;/a>
for Android and &lt;a href="https://www.clementine-player.org/">Clementine&lt;/a> on my Arch Linux
workstations.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.subsonic.org/pages/installation.jsp">http://www.subsonic.org/pages/installation.jsp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/KHresearch/subsonic/">https://github.com/KHresearch/subsonic/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up subSonic music streaming on Debian</summary></item><item><title>Headless cloudprint server on Debian for MFC-7360N</title><link>https://wimpysworld.com/posts/headless-cloudprint-server-on-debian-for-mfc-7360n/</link><pubDate>Sat, 05 Jul 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/headless-cloudprint-server-on-debian-for-mfc-7360n/</guid><description>&lt;p>I have a Brother MFC-7360N printer at home and there is also one at work.
I wanted to to get &lt;a href="http://www.google.co.uk/cloudprint/learn/">Cloudprint&lt;/a>
working with Android devices rather than use the Android app Brother
provide, which is great when it works but deeply frustrating (for my wife)
when it doesn&amp;rsquo;t.&lt;/p>
&lt;p>What I describe below is how to Cloudprint enable &amp;ldquo;Classic printers&amp;rdquo; using
Debian Wheezy.&lt;/p>
&lt;h1 id="install-cups">Install CUPS&lt;/h1>
&lt;p>Install CUPS and the Cloudprint requirements.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install cups python-cups python-daemon python-pkg-resources
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="install-the-mfc-7360n-drivers">Install the MFC-7360N Drivers&lt;/h1>
&lt;p>I used the URL below to access the &lt;code>.deb&lt;/code> files required.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://support.brother.com/g/b/downloadlist.aspx?c=gb&amp;amp;lang=en&amp;amp;prod=mfc7360n_all&amp;amp;os=128">http://support.brother.com/g/b/downloadlist.aspx?c=gb&amp;amp;lang=en&amp;amp;prod=mfc7360n_all&amp;amp;os=128&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re running a 64-bit Debian, then install &lt;code>ia32-libs&lt;/code> first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ia32-libs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Download and install the MFC-7360N drivers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -c http://download.brother.com/welcome/dlf006237/mfc7360nlpr-2.1.0-1.i386.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c http://download.brother.com/welcome/dlf006239/cupswrapperMFC7360N-2.0.4-2.i386.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i --force-all mfc7360nlpr-2.1.0-1.i386.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i --force-all cupswrapperMFC7360N-2.0.4-2.i386.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-cups">Configure CUPS&lt;/h2>
&lt;p>Edit the CUPS configuration file commonly located in &lt;code>/etc/cups/cupsd.conf&lt;/code>
and make the section that looks like this&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># Only listen for connections from the local machine.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Listen localhost:631
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Listen /var/run/cups/cups.sock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;is changed to look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># Listen on all interfaces
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Port 631
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Listen /var/run/cups/cups.sock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Modify the Apache specific directives to allow connections from everywhere as
well. Find the follow section in &lt;code>/etc/cups/cupsd.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-apacheconf" data-lang="apacheconf">&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the server...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the admin pages...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the configuration files...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin/conf&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthType Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Require &lt;span style="color:#f00">user&lt;/span> @SYSTEM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add &lt;code>Allow All&lt;/code> after each &lt;code>Order allow,deny&lt;/code> so it looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-apacheconf" data-lang="apacheconf">&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the server...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Allow &lt;span style="color:#f00">All&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the admin pages...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Allow &lt;span style="color:#f00">All&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Restrict access to the configuration files...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;Location &lt;span style="color:#87ceeb">/admin/conf&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthType Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Require &lt;span style="color:#f00">user&lt;/span> @SYSTEM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Order allow,deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Allow &lt;span style="color:#f00">All&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/Location&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-the-mfc-7360n-to-cups">Add the MFC-7360N to CUPS&lt;/h2>
&lt;p>If your MFC-7360N is connected to your server via USB then you should be
all set. Login to the CUPS administration interface on &lt;a href="http://yourserver:631">http://yourserver:631&lt;/a>
and modify the MFC7360N printer (if one was created when the drivers where installed)
then &lt;strong>make sure you can print a test page via CUPS before proceeding.&lt;/strong>&lt;/p>
&lt;h1 id="install-cloudprint-and-cloudprint-service">Install Cloudprint and Cloudprint service&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -c http://davesteele.github.io/cloudprint-service/deb/cloudprint_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c http://davesteele.github.io/cloudprint-service/deb/cloudprint-service_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudprint_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudprint-service_0.11-5.1_all.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="authenticate">Authenticate&lt;/h2>
&lt;p>Google accounts with 2 step verification enabled need to use an
application-specific password.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.google.com/support/accounts/bin/static.py?page=guide.cs&amp;amp;guide=1056283&amp;amp;topic=1056286">http://www.google.com/support/accounts/bin/static.py?page=guide.cs&amp;amp;guide=1056283&amp;amp;topic=1056286&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Authenticate &lt;code>cloudprintd&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service cloudprintd login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see something like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Accounts with 2 factor authentication require an application-specific password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Google username: you@example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added Printer MFC7360N
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the Cloudprint daemon.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service cloudprintd start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If everything is working correctly you should see your printer the
following page:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.google.com/cloudprint#printers">https://www.google.com/cloudprint#printers&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="printing-from-mobile-devices">Printing from mobile devices&lt;/h1>
&lt;h2 id="android">Android&lt;/h2>
&lt;p>Add the &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.cloudprint">Google Cloud Print&lt;/a>
app to Android devices and you&amp;rsquo;ll be able to configure your printer
preferences and print from Android..&lt;/p>
&lt;h2 id="chrome-and-chromium">Chrome and Chromium&lt;/h2>
&lt;p>When printing from within Google Chrome and Chromium you can now select
Cloudprint as the destination and choose your printer.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/armooo/cloudprint">https://github.com/armooo/cloudprint&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://davesteele.github.io/cloudprint-service/">http://davesteele.github.io/cloudprint-service/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/davesteele/cloudprint-service">https://github.com/davesteele/cloudprint-service&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://injustfiveminutes.com/2013/11/07/remote-access-to-cups-admin-inter/">http://injustfiveminutes.com/2013/11/07/remote-access-to-cups-admin-inter/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ubuntuforums.org/showthread.php?t=1794179">http://ubuntuforums.org/showthread.php?t=1794179&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://support.google.com/a/answer/2906017?hl=en">https://support.google.com/a/answer/2906017?hl=en&lt;/a>&lt;/li>
&lt;/ul></description><summary>Create a headless Cloudprint server on Debian for MFC-7360N</summary></item><item><title>Integrating Dropbox photo syncing with Open Media Vault and Plex</title><link>https://wimpysworld.com/posts/integrating-dropbox-photo-syncing-with-open-media-vault-and-plex/</link><pubDate>Sat, 28 Jun 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/integrating-dropbox-photo-syncing-with-open-media-vault-and-plex/</guid><description>&lt;p>&lt;strong>This how-to was updated for Open Media Vault 2.x and 3.x on 22nd August 2016.&lt;/strong>&lt;/p>
&lt;p>I&amp;rsquo;ve installed &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a>
on a &lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>
and use it as media server for the house. OpenMediaVault (OMV) is a network
attached storage (NAS) solution based on &lt;a href="http://www.debian.org">Debian&lt;/a> Linux.&lt;/p>
&lt;p>I use a free Dropbox account to sync photos from mine and my wife&amp;rsquo;s Android
phones and wanted to automate to import of these photo upload into Plex, which
is also running on Open Media Vault.&lt;/p>
&lt;h1 id="installing-dropbox-on-open-media-vault">Installing Dropbox on Open Media Vault&lt;/h1>
&lt;p>I looked for a Dropbox Plugin for Open Media Vault and found this:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/lordldx/openmediavault-dropbox">https://github.com/lordldx/openmediavault-dropbox&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Sadly, at the time of writing, it is unfinished and I didn&amp;rsquo;t have the time to
go and learn the Open Media Vault plugin API.&lt;/p>
&lt;p>The Open Media Vault forum does include a &lt;a href="http://forums.openmediavault.org/viewtopic.php?f=13&amp;amp;t=70">Dropbox HOW-TO&lt;/a>
which is very similar to how &lt;a href="https://wimpysworld.com/posts/dropbox-is-my-nikola-publish-button/">I&amp;rsquo;ve run Dropbox on headless Linux servers&lt;/a>
in the past. So, I decided to adapt my existing notes to Open Media Vault.&lt;/p>
&lt;h2 id="create-a-dropbox-share">Create a Dropbox Share&lt;/h2>
&lt;p>Create a Dropbox share via the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>Access Right Management -&amp;gt; Shared Folders&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>I gave my the name &amp;ldquo;Dropbox&amp;rdquo;. I know, very original.&lt;/p>
&lt;h2 id="installing-dropbox-on-a-headless-server">Installing Dropbox on a headless server&lt;/h2>
&lt;p>Download and extract the latest Dropbox stable release.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd ~ &amp;amp;&amp;amp; wget -O - &lt;span style="color:#87ceeb">&amp;#34;https://www.dropbox.com/download?plat=lnx.x86_64&amp;#34;&lt;/span> | tar xzf -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -Rv &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">USER&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>: ~/.dropbox-dist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ln -s ~/.dropbox-dist/dropboxd /usr/local/bin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>dropboxd&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~/.dropbox-dist/dropboxd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see output like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>This client is not linked to any account... Please visit https://www.dropbox.com/cli_link?host_id=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx to link this machine.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visit the URL, login with your Dropbox account and link the account. You
should see the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Client successfully linked, Welcome Web!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>dropboxd&lt;/code> will now create a &lt;code>~/Dropbox&lt;/code> folder and start synchronizing. Stop
&lt;code>dropboxd&lt;/code> with CTRL+C.&lt;/p>
&lt;h2 id="symlink-the-dropbox-share">Symlink the Dropbox share&lt;/h2>
&lt;p>Login to the OMV server as &lt;code>root&lt;/code> and sym-link the Dropbox share you created
earlier to the Dropbox directory in the root home directory.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mv ~/Dropbox ~/Dropbox-old
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s /media/&amp;lt;UUID&amp;gt;/Dropbox ~/Dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rsync -a -W --progress ~/Dropbox-old/ ~/Dropbox/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="initd---open-media-vault-2x">init.d - Open Media Vault 2.x&lt;/h3>
&lt;p>If you are using Open Media Vault 2.x (based on Debian wheezy) the
you&amp;rsquo;ll need to create an init script.&lt;/p>
&lt;p>To run Dropbox as daemon with init.d. Create &lt;code>/etc/init.d/dropbox&lt;/code> with the
following content.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>&lt;span style="color:#0f0">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Provides: dropbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Start: $local_fs $remote_fs $network $syslog $named&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Required-Stop: $local_fs $remote_fs $network $syslog $named&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># X-Interactive: false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Short-Description: dropbox service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DROPBOX_USERS&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;user_a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">DAEMON&lt;/span>=.dropbox-dist/dropboxd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Starting dropbox...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>getent passwd &lt;span style="color:#eedd82">$dbuser&lt;/span> | cut -d: -f6&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -x &lt;span style="color:#eedd82">$DAEMON&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOME&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$HOMEDIR&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> start-stop-daemon -b -o -c &lt;span style="color:#eedd82">$dbuser&lt;/span> -S -u &lt;span style="color:#eedd82">$dbuser&lt;/span> -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stop() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Stopping dropbox...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">HOMEDIR&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>getent passwd &lt;span style="color:#eedd82">$dbuser&lt;/span> | cut -d: -f6&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span> ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start-stop-daemon -o -c &lt;span style="color:#eedd82">$dbuser&lt;/span> -K -u &lt;span style="color:#eedd82">$dbuser&lt;/span> -x &lt;span style="color:#eedd82">$HOMEDIR&lt;/span>/&lt;span style="color:#eedd82">$DAEMON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">for&lt;/span> dbuser in &lt;span style="color:#eedd82">$DROPBOX_USERS&lt;/span>; &lt;span style="color:#f00">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">dbpid&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>pgrep -u &lt;span style="color:#eedd82">$dbuser&lt;/span> dropbox&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">if&lt;/span> [ -z &lt;span style="color:#eedd82">$dbpid&lt;/span> ] ; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;dropboxd for USER &lt;/span>&lt;span style="color:#eedd82">$dbuser&lt;/span>&lt;span style="color:#87ceeb">: not running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;dropboxd for USER &lt;/span>&lt;span style="color:#eedd82">$dbuser&lt;/span>&lt;span style="color:#87ceeb">: running (pid &lt;/span>&lt;span style="color:#eedd82">$dbpid&lt;/span>&lt;span style="color:#87ceeb">)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f00">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">case&lt;/span> &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#eedd82">$1&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart|reload|force-reload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#87ceeb">&amp;#34;Usage: /etc/init.d/dropbox {start|stop|reload|force-reload|restart|status}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#f60">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit &lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the init.d script.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod +x /etc/init.d/dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo update-rc.d dropbox defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="starting-and-stopping-the-dropbox-daemon">Starting and Stopping the Dropbox daemon&lt;/h2>
&lt;p>Use &lt;code>/etc/init.d/dropbox start&lt;/code> to start and &lt;code>/etc/init.d/dropbox stop&lt;/code> to stop.&lt;/p>
&lt;h3 id="systemd---openmediavault-3x">systemd - OpenMediaVault 3.x&lt;/h3>
&lt;p>If you are using Open Media Vault 3.x (based on Debian jessie) then
you&amp;rsquo;ll need to create a systemd unit. Create the systemd service file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /lib/systemd/system/dropbox.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-systemd" data-lang="systemd">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description=&lt;span style="color:#87ceeb">Dropbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After=&lt;span style="color:#87ceeb">local-fs.target network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type=&lt;span style="color:#87ceeb">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WorkingDirectory=&lt;span style="color:#87ceeb">%h/.dropbox-dist&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart=&lt;span style="color:#87ceeb">/usr/local/bin/dropboxd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecReload=&lt;span style="color:#87ceeb">/bin/kill -HUP $MAINPID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KillMode=&lt;span style="color:#87ceeb">process&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart=&lt;span style="color:#87ceeb">on-failure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User=&lt;span style="color:#87ceeb">%I&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy=&lt;span style="color:#87ceeb">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the dropbox service for a given user.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl enable dropbox@user_a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start dropbox@user_a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dropbox-client">Dropbox client&lt;/h2>
&lt;p>It is recommended to download the official Dropbox client to configure
Dropbox and get its status.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget &lt;span style="color:#87ceeb">&amp;#34;http://www.dropbox.com/download?dl=packages/dropbox.py&amp;#34;&lt;/span> -O dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">755&lt;/span> dropbox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mv dropbox /usr/local/bin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can check on Dropbox status by running the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dropbox status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For usage instructions run &lt;code>dropbox help&lt;/code>.&lt;/p>
&lt;h1 id="photo-importing">Photo importing&lt;/h1>
&lt;p>So, the reason for doing all this is that I now have a Dropbox instance
running on my home file server and everyday it runs a script, that I wrote,
to automatically import new photos into a directory that Plex monitors.
I&amp;rsquo;ll post details about my photo sorting script, &lt;a href="https://github.com/flexiondotorg/Phort">Phort&lt;/a>,
at a later date.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.dropboxwiki.com/Text_Based_Linux_Install">http://www.dropboxwiki.com/Text_Based_Linux_Install&lt;/a>&lt;/li>
&lt;/ul></description><summary>Integrating Dropbox on a headless Open Media Vault server.</summary></item><item><title>OpenMediaVault on Debian</title><link>https://wimpysworld.com/posts/openmediavault-on-debian/</link><pubDate>Sun, 22 Jun 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/openmediavault-on-debian/</guid><description>&lt;p>At the time of writing &lt;a href="http://www.openmediavault.org/">OpenMediaVault&lt;/a> 0.6 is
pre-release. But it is possible to install OpenMediaVault on Debian Wheezy in
order to get some testing done.&lt;/p>
&lt;p>Install Debian Wheezy on your target VM or test server. Go with the defaults
until the &amp;lsquo;Software selection&amp;rsquo; dialogue. Make sure everything is unselected, like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[ ] Debian desktop environment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Web server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Print server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] SQL database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] DNS Server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] File server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Mail server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] SSH server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Laptop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Standard system utilities
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the install is complete, reboot and login to the new Debian system
as &lt;code>root&lt;/code>.&lt;/p>
&lt;p>Update the repository sources and add the &lt;code>contrib&lt;/code> and &lt;code>non-free&lt;/code>
repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nano /etc/apt/sources.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It should look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://ftp.uk.debian.org/debian/ wheezy main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://ftp.uk.debian.org/debian/ wheezy main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://security.debian.org/ wheezy/updates main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://security.debian.org/ wheezy/updates main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># wheezy-updates, previously known as &amp;#39;volatile&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://ftp.uk.debian.org/debian/ wheezy-updates main contrib non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://ftp.uk.debian.org/debian/ wheezy-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now add the OpenMediaVault repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;deb http://packages.openmediavault.org/public kralizec main&amp;#34;&lt;/span> &amp;gt; /etc/apt/sources.list.d/openmediavault.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the OpenMediaVault repository key and Postfix.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install openmediavault-keyring postfix
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>When the &amp;lsquo;Postfix Configuration&amp;rsquo; dialogue is displayed choose &lt;code>No configuration&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Update again and install OpenMediaVault.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install openmediavault
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>When the &amp;lsquo;Configuring mdadm&amp;rsquo; dialogue is displayed enter &lt;code>none&lt;/code>.&lt;/li>
&lt;li>Do you want to start MD arrays automatically? &lt;code>YES&lt;/code>&lt;/li>
&lt;li>When the &amp;lsquo;ProFTPD configuration&amp;rsquo; dialogue is displayed choose
&lt;code>standalone&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Initialise OpenMediaVault and reboot.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>omv-initsystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the reboot you should be able to connect to the OpenMediaVault WebUI and
login as &lt;code>admin&lt;/code> with the password of &lt;code>openmediavault&lt;/code>. That&amp;rsquo;s it. Get testing.&lt;/p></description><summary>Manually installing OpenMediaVault on Debian Wheezy</summary></item><item><title>Setting up BitSync on Debian</title><link>https://wimpysworld.com/posts/setting-up-bitsync-on-debian/</link><pubDate>Sat, 21 Jun 2014 12:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/setting-up-bitsync-on-debian/</guid><description>&lt;p>I&amp;rsquo;ve replaced Dropbox with &lt;a href="http://www.bittorrent.com/sync">BitTorrent Sync&lt;/a>.
In order to do this I&amp;rsquo;ve have &lt;code>btsync&lt;/code> running on a VPS (2CPU, 2GB, 400GB), my
home server and assorted Arch Linux workstations.&lt;/p>
&lt;p>I had a couple of reasons for migrating away from Dropbox.&lt;/p>
&lt;ul>
&lt;li>Dropbox was costing $100 per year.&lt;/li>
&lt;li>Dropbox encryption model is weak and I have data security/privacy.&lt;/li>
&lt;/ul>
&lt;p>The VPS I am running BitTorrent Sync on costs $50 per year and provides four
times the storage. I run &lt;code>btsync&lt;/code> on a VPS so that there is always a server
&lt;em>&amp;ldquo;in the cloud&amp;rdquo;&lt;/em> that is available to sync with so that my setup emulates what
Dropbox used to do.&lt;/p>
&lt;p>All my servers are running Debian and this is how I install &lt;code>btsync&lt;/code> on
Debian.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sh -c &lt;span style="color:#87ceeb">&amp;#34;&lt;/span>&lt;span style="color:#f00">$(&lt;/span>curl -fsSL http://debian.yeasoft.net/add-btsync-repository.sh&lt;span style="color:#f00">)&lt;/span>&lt;span style="color:#87ceeb">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install btsync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is how I respond to the prompts:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>* Do you want to define a default BitTorrent Sync instance? : YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* BitTorrent Sync Daemon Credentials: yourusername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* BitTorrent Sync Daemon Group: yourusername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Niceness of the BitTorrent Sync Daemon: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* On which portnumber should BitTorrent Sync listen? 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* BitTorrent Sync Listen Port: 12345
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Do you want BitTorrent Sync to request port mapping via UPNP? NO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Download Bandwith Limit: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Upload Bandwith Limit: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Web Interface Bind IP Address: 0.0.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Web Interface Listen Port: 8888
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* The username for accessing the web interface: yourusername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* The password for accessing the web interface: yourpassword
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you&amp;rsquo;ll see, I don&amp;rsquo;t use UPNP on my VPS. I elect a specific port (not
actually 12345 by the way) and open that port up with &lt;code>ufw&lt;/code>. I also only
allow access to the WebUI port from another server I own which reverse
proxies via &lt;code>nginx&lt;/code>.&lt;/p>
&lt;p>&lt;code>btsync&lt;/code> works really well, I have it syncing hundreds of thousands of
files that amount to several hundred gigabytes of data. On my Arch Linux
workstations I use the brilliant &lt;a href="http://www.yeasoft.com/site/projects:btsync-deb:btsync-gui">btsync-gui&lt;/a>
and &lt;a href="https://play.google.com/store/apps/details?id=com.bittorrent.sync">BitTorrent Sync is also available for Android&lt;/a>.&lt;/p>
&lt;p>That said, I still use a free Dropbox account to sync photos from mine and my
wife&amp;rsquo;s Android phones. I have a Dropbox instance running on my home file server
and everyday it runs a script to automatically import these photos into Plex.&lt;/p>
&lt;p>Such a shame, that at the time of writing, &lt;code>btsync&lt;/code> is closed source :-(
Maybe that will change but if it doesn&amp;rsquo;t &lt;a href="http://syncthing.net/">syncthing&lt;/a>
may well be the answer when it has matured a little.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.yeasoft.com/site/projects:btsync-deb:btsync-server">http://www.yeasoft.com/site/projects:btsync-deb:btsync-server&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://forum.bittorrent.com/topic/18974-debian-and-ubuntu-server-packages-for-bittorrent-sync/">http://forum.bittorrent.com/topic/18974-debian-and-ubuntu-server-packages-for-bittorrent-sync/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up BitTorrent Sync on Debian</summary></item><item><title>MATE Desktop on Debian Wheezy</title><link>https://wimpysworld.com/posts/mate-desktop-on-debian-wheezy/</link><pubDate>Thu, 19 Jun 2014 22:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/mate-desktop-on-debian-wheezy/</guid><description>&lt;p>I&amp;rsquo;m a member of the &lt;a href="http://mate-desktop.org">MATE Desktop&lt;/a> team and until
recently the majority of my involvement has been focused around &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a>.&lt;/p>
&lt;p>However, I&amp;rsquo;m working on a MATE project that is based on a &lt;a href="http://www.debian.org">Debian&lt;/a>
derivative. MATE has recently been accepted into the &lt;a href="backports.debian.org/">Debian Backports&lt;/a>
repository for Wheezy, so I decided to do a &lt;em>&amp;ldquo;MATE from scratch&amp;rdquo;&lt;/em> on Debian using
an old netbook to get familiar with the MATE package naming differences between
Arch Linux and Debian.&lt;/p>
&lt;h1 id="install-debian">Install Debian&lt;/h1>
&lt;p>I installed Debian Wheezy from the &lt;a href="https://www.debian.org/CD/netinst/">netinst&lt;/a>
ISO to ensure the target install was as minimal as possible. I went with
the defaults until the &amp;lsquo;Software selection&amp;rsquo; dialogue, at this point
unselect everything except &amp;ldquo;SSH server&amp;rdquo;. Like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[ ] Debian desktop environment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Web server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Print server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] SQL database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] DNS Server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] File server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Mail server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[X] SSH server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Laptop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ ] Standard system utilities
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="debian-iso-with-firmware">Debian ISO with Firmware&lt;/h2>
&lt;p>If you&amp;rsquo;re installing on hardware that requires additional firmware in
order for it to work with Linux then use the netinst ISO that includes
firmware.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/current/">http://cdimage.debian.org/cdimage/unofficial/non-free/cd-including-firmware/current/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="configure-debian">Configure Debian&lt;/h1>
&lt;p>When the install is finished, reboot and configure Debian a little.&lt;/p>
&lt;h2 id="repositories">Repositories&lt;/h2>
&lt;p>You&amp;rsquo;ll need to install &lt;code>lsb-release&lt;/code> for the following to work.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install lsb-release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is what I put in &lt;code>/etc/apt/sources.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list&lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># $(lsb_release -cs)-updates, previously known as &amp;#39;volatile&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="backports">Backports&lt;/h2>
&lt;p>MATE is only available in the wheezy-backports repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list.d/backports.list &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>All backports are deactivated by default (i.e. the packages are pinned to 100
by using ButAutomaticUpgrades: yes in the Release files. If you want to install
something from backports run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get -t wheezy-backports install &lt;span style="color:#87ceeb">&amp;#34;package&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="install-mate-desktop">Install MATE Desktop&lt;/h1>
&lt;p>First install the LightDM display manager.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install accountsservice lightdm lightdm-gtk-greeter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now for the MATE Desktop itself.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get -t wheezy-backports install mate-desktop-environment-extras
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="networkmanager">NetworkManager&lt;/h2>
&lt;p>I typically use NetworkManager, so lets install that too.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install network-manager-gnome
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="supplementary">Supplementary&lt;/h2>
&lt;p>Depending on your hardware you may require CPU frequency utilities or
additional firmware.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install cpufreqd cpufrequtil firmware-linux firmware-linux-nonfree
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And, that&amp;rsquo;s it! Reboot and you&amp;rsquo;ll see the LightDM greeter waiting for your
login credentials.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://wiki.mate-desktop.org/download?s%5B%5D=debian">http://wiki.mate-desktop.org/download?s[]=debian&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.debian.org/InstallingDebianOn/HP/HP2133">https://wiki.debian.org/InstallingDebianOn/HP/HP2133&lt;/a>&lt;/li>
&lt;/ul></description><summary>Setting up MATE Desktop on Debian Wheezy</summary></item><item><title>Ubuntu MATE</title><link>https://wimpysworld.com/projects/ubuntu-mate/</link><pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/projects/ubuntu-mate/</guid><description>&lt;p>A community developed Ubuntu based operating system that beautifully integrates
the &lt;a href="https://mate-desktop.org">MATE desktop&lt;/a>. Ubuntu MATE is a stable,
easy-to-use operating system with a configurable desktop environment and is
suitable for modern workstations, laptops, single board computers and older
hardware alike.&lt;/p>
&lt;ul>
&lt;li>Organisation: &lt;a href="https://ubuntu-mate.org">Ubuntu MATE Project&lt;/a>&lt;/li>
&lt;li>Date: June 2014 - date&lt;/li>
&lt;li>Role: Project Lead&lt;/li>
&lt;/ul></description><summary>Ubuntu MATE is a Linux distribution I made for my friends and family</summary></item><item><title>BIP IRC proxy</title><link>https://wimpysworld.com/posts/bip-irc-proxy/</link><pubDate>Wed, 16 Apr 2014 07:07:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/bip-irc-proxy/</guid><description>&lt;p>&lt;strong>I switched from BIP to &lt;a href="http://wiki.znc.in/ZNC">ZNC&lt;/a>, and &lt;a href="https://wimpysworld.com/posts/znc-irc-proxy/">recommend you use ZNC instead&lt;/a>!&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://bip.milkypond.org/">BIP&lt;/a> is an IRC proxy that maintains a persistent
connection(s) to a list of IRC channels. You can then point your IRC client to
BIP each time you log in and playback the conversations that took place while
you were away.&lt;/p>
&lt;p>I&amp;rsquo;ve found bBIP to be so useful that I now &lt;a href="https://www.archlinux.org/packages/community/x86_64/bip/">maintain BIP for Arch Linux&lt;/a>,
although I now run my BIP proxy on Debian because my new VPS provider doesn&amp;rsquo;t
offer Arch Linux as an option.&lt;/p>
&lt;h2 id="installing-bip">Installing BIP&lt;/h2>
&lt;p>Installing BIP is simple for both Arch Linux and Debian.&lt;/p>
&lt;h3 id="debian">Debian&lt;/h3>
&lt;p>I run BIP on Debian Wheezy with the backport repository enabled.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get -t wheezy-backports install bip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/ENABLED=0/ENABLED=1/&amp;#39;&lt;/span> /etc/default/bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="arch-linux">Arch Linux&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -S bip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl enable bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-user">Create a user&lt;/h2>
&lt;p>The next thing to do is create a username and password and BIP provides it&amp;rsquo;s
own utility for doing this called &lt;code>bipmkpw&lt;/code>. Replace &amp;lsquo;username&amp;rsquo; with whatever
you want your BIP &amp;lsquo;username&amp;rsquo; to be. This name has no relation to any IRC
usernames so it can be anything.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bipmkpw username
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enter a password when prompted. The password will then be output as a hash.
Make a note of both the hashed and un-hashed values somewhere, you will need
them later.&lt;/p>
&lt;h2 id="create-a-certificate">Create a certificate&lt;/h2>
&lt;p>We don&amp;rsquo;t want the username and password being sent as clear-text, so we will
create an SSL certificate for BIP to use.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>openssl req -new -newkey rsa:4096 -nodes -x509 -keyout bip.pem -out bip.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Move the certificate to &lt;code>/var/lib/bip&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mv bip.pem /var/lib/bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change ownership and permissions of the certificate to the user &lt;code>bip&lt;/code> which was
created automatically when the package was installed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chown bip:bip /var/lib/bip/bip.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">600&lt;/span> /var/lib/bip/bip.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-bip">Configure BIP&lt;/h2>
&lt;p>Here is example configuration for BIP. Copy it to &lt;code>/etc/bip.conf&lt;/code>, modify it
accordingly and then change the ownership and permissions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chown bip:bip /etc/bip.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#f60">640&lt;/span> /etc/bip.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example-configuration">Example configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># bip default config file.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Thou shoult change thy password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip = &amp;#34;0.0.0.0&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># To connect a client to bip, try the port below, and
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># be sure to set the password to the value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># specified in the network you want to connect to.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port = 7778;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># If you set this to true, you&amp;#39;ll only be able to connect to bip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># with a SSL capable IRC client. Be sure to generate a certificate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># for bip with &amp;#39;make cert&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>client_side_ssl = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log_level = 3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pid_file=&amp;#34;/var/run/bip/bip.pid&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># This is where logs go. Channel and private messages will use that
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># configuration value as a prefix, and then log_format to determine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># full log filename.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log_root = &amp;#34;/var/log/bip/&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Log format allows you to make log filenames depend on the log line&amp;#39;s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># attributes. Here&amp;#39;s a list :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %u -&amp;gt; user name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %n -&amp;gt; network name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %Y -&amp;gt; 4 digit year
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %m -&amp;gt; 2 digit month
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %d -&amp;gt; 2 digit day
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># %c -&amp;gt; destination (#chan, privates, ...)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#log_format = &amp;#34;%n/%Y-%m/%c.%d.log&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Sets the frequency (in seconds) of log syncing (real write to kernel)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#log_sync_interval = 5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Makes bip send the log of each channel and privates while
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># you were not connected to the proxy upon connection.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backlog = true; # enable backlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backlog_lines = 0; # number of lines in backlog, 0 means no limit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>backlog_always = false; # backlog even lines already backlogged
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># If blreset_on_talk talking on an irc network has the same effect of issuing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># /bip blreset, meaning that stuffed logged before the command won&amp;#39;t be read
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># back on backlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>blreset_on_talk = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Network definition, a name and server info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>network {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;freenode&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server { host = &amp;#34;chat.freenode.net&amp;#34;; port = 6667; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>network {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;blitzed&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server { host = &amp;#34;irc.blitzed.org&amp;#34;; port = 6667; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Configuration example with one user who connects to two irc networks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># To use the multi-server feature:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - define the connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - chose and setup a different login for each connection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># on your irc client:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - Use the multi server feature of your client, the server being each time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># the server where bip is running. In your client setup server password to:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># username:password:connectionname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># - do not store the password in clear here, use the bipmkpw util to generate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># a hash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># User structure is grouping information for a given user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # The name in bip of the user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # This is used by bip only
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;USERNAME; #BIP User account created with bipmkpw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = &amp;#34;00000000000000000000000000000000000000&amp;#34;; # the hash bipmkpw created
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_check_mode = &amp;#34;none&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # These will be the default for each connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_nick = &amp;#34;NICKNAME&amp;#34;; #IRC Nick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_user = &amp;#34;IRCUSERNAME&amp;#34;; #IRC User
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_realname = &amp;#34;REALNAME&amp;#34;; #IRC Real Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> admin = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backlog_msg_only = true; # When true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # A user can have mutiple connections to irc networks.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # define a connection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;freenode&amp;#34;; # used by bip only
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network = &amp;#34;freenode&amp;#34;; # which ircnet to connect to
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # these will be sent to the real IRC server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user = &amp;#34;IRCUSERNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> realname = &amp;#34;IRCREALNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = &amp;#34;serverpassword&amp;#34;; #can be commented out if not needed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Some options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> follow_nick = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ignore_first_nick = false;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #on_connect_send = &amp;#34;PRIVMSG NickServ :IDENTIFY nspassword&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Autojoined channels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#cat&amp;#34;; }; # Join #cat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#dog&amp;#34;; backlog = false; }; # Join #dog but don&amp;#39;t backlog it.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#pig&amp;#34;; key = &amp;#34;01nk01nk&amp;#34;; }; # Join #pig that has a password.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;blitzed&amp;#34;; # used by bip only
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network = &amp;#34;blitzed&amp;#34;; # which ircnet to connect to
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # these will be sent to the real IRC server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user = &amp;#34;IRCUSERNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> realname = &amp;#34;IRCREALNAME&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = &amp;#34;serverpassword&amp;#34;; #can be commented out if not needed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Some options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> follow_nick = true;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ignore_first_nick = false;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #on_connect_send = &amp;#34;PRIVMSG NickServ :IDENTIFY nspassword&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Autojoined channels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#bar&amp;#34;; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> channel { name = &amp;#34;#foo&amp;#34;; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you require any clarification about what the configuration options do then
&lt;code>man bip.conf&lt;/code> is your friend.&lt;/p>
&lt;h2 id="start-bip">Start BIP&lt;/h2>
&lt;p>Now that BIP is configured, it can be started.&lt;/p>
&lt;h3 id="debian-1">Debian&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/bip start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="arch-linux-1">Arch Linux&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start bip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="client-configuration">Client configuration&lt;/h2>
&lt;p>I use &lt;a href="http://hexchat.github.io/">HexChat&lt;/a>, but other IRC clients are available.
I add a new Network to HexChat for each of the IRC networks I defined in
&lt;code>/etc/bip.conf&lt;/code>. The screen shot below shows how I configure a BIP network in
HexChat.&lt;/p>
&lt;p>&lt;img src="BIP-freenode.png" alt="HexChat BIP Configuration" title="Example HexChat Network Configuration to a BIP proxy">&lt;/p>
&lt;h3 id="password-format">Password format&lt;/h3>
&lt;p>The Password is the most important and confusing item. &lt;strong>This is for BIP,
not for any IRC network&lt;/strong>. Remember the unhashed password? That goes here but
with a twist. The format for the password is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>bipusername:unhashedbippassword:bipnetwork
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bipnetwork? What is that? It is from the following section of &lt;code>/etc/bip.conf&lt;/code>
on the server?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>network {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &amp;#34;freenode&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server { host = &amp;#34;chat.freenode.net&amp;#34;; port = 6667; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A more practical example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>myuser:S3cr3tP@$$w0rd:freenode
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>And that&amp;rsquo;s it! We are now perpetually connected to IRC, can connect to BIP
proxy from multiple devices in a completely transparent and seamless manner.
Moreover, the logs for all channels are saved and automatically rotated on the
server.&lt;/p>
&lt;p>If you looking for an alternative to BIP, then try &lt;a href="http://wiki.znc.in/ZNC">ZNC&lt;/a>.&lt;/p>
&lt;p>&lt;strong>References&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://wiki.linaro.org/Resources/HowTo/BIP">https://wiki.linaro.org/Resources/HowTo/BIP&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://nerderati.com/2010/11/perpetual-irc-the-proxy-edition/">http://nerderati.com/2010/11/perpetual-irc-the-proxy-edition/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stevengorrell.com/bip-irc-proxy/">http://stevengorrell.com/bip-irc-proxy/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing BIP IRC Proxy on Debian Wheezy &amp;amp; Arch Linux</summary></item><item><title>LXC on Arch Linux</title><link>https://wimpysworld.com/posts/lxc-on-arch-linux/</link><pubDate>Tue, 15 Apr 2014 02:44:11 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/lxc-on-arch-linux/</guid><description>&lt;p>At some point last year I was experimenting with Linux Containers (LXC) on
Arch Linux. &lt;strong>I never finished the blog post but somehow it was briefly published
and then unplublished&lt;/strong>. I have no idea how accurate this blog post is but someone
did see it and bookmarked it. &lt;strong>They recently emailed me to ask where the blog has
disappeared to, so here it is in all its unfinished glory&lt;/strong>.&lt;/p>
&lt;h1 id="install-lxc">Install LXC&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -Syy --needed --noconfirm arch-install-scripts bridge-utils lxc netctl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="netctl-bridge">netctl Bridge&lt;/h1>
&lt;p>The guest containers will connect to the LAN via a bridged network deviced.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/netctl/bridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">Description&lt;/span>=&lt;span style="color:#87ceeb">&amp;#34;Bridge&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">Interface&lt;/span>=br0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">Connection&lt;/span>=bridge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">BindsToInterfaces&lt;/span>=(eth0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">IP&lt;/span>=dhcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">## sets forward delay time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">FwdDelay&lt;/span>=&lt;span style="color:#f60">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">## sets max age of hello message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#MaxAge=10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable and start the bridge.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo netctl enable bridge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo netctl start bridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="creating-containers">Creating Containers&lt;/h1>
&lt;p>I&amp;rsquo;m only interested in running Arch Linux or Debian containers.&lt;/p>
&lt;h2 id="container-configurations">Container Configurations&lt;/h2>
&lt;p>Each container should have a matching configuration file, they look something like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>lxc.arch = i686
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.utsname = myhostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.type = veth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.flags = up
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.link = br0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.ipv4 = 0.0.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lxc.network.name = eth0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>lxc.arch&lt;/code> Architecture for the container, valid options are &lt;code>x86&lt;/code>, &lt;code>i686&lt;/code>, &lt;code>x86_64&lt;/code>, &lt;code>amd64&lt;/code>.&lt;/li>
&lt;li>&lt;code>lxc.utsman&lt;/code> Container name, should also be used when naming the configuration file&lt;/li>
&lt;li>&lt;code>lxc_network.type&lt;/code> Type of network virtualization to be used for the
container. The option &lt;code>veth&lt;/code> defines a peer network device. It is created
with one side assigned to the container and the other side is attached to a
bridge by the &lt;code>lxc.network.link&lt;/code> option.&lt;/li>
&lt;li>&lt;code>lxc_network.flags&lt;/code> Network actions. The value &lt;code>up&lt;/code> in this case activates the network.&lt;/li>
&lt;li>&lt;code>lxc.network.link&lt;/code> Host network interface to be used for the container.&lt;/li>
&lt;li>&lt;code>lxc.network.ipv4&lt;/code> IPv4 address assigned to the virtualized interface. Use
the address 0.0.0.0 to make use of DHCP. Use &lt;code>lxc.network.ipv6&lt;/code> if you need
IPv6 support.&lt;/li>
&lt;li>&lt;code>lxc.network.name&lt;/code> Dynamically allocated interface name. This option will
rename the interface in the container.&lt;/li>
&lt;/ul>
&lt;p>More example files can be found in &lt;code>/usr/share/doc/lxc/examples/&lt;/code>.
Find details about all options via &lt;code>man lxc.conf&lt;/code>.&lt;/p>
&lt;h2 id="arch-linux">Arch Linux&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-create -t archlinux -n arch-01 -f ~/arch-01.conf -- --packages netctl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am unable to get DHCP to work for a Arch Linux LXC container, therefore
my dirty hack is to alway use a statis IP address in the &lt;code>netctl&lt;/code> profile. There
is also a bug (&lt;a href="https://bugs.archlinux.org/task/35715">#35715&lt;/a>) was helpful in
narrowing down the problem, but wasn&amp;rsquo;t the solution in my case. Use
&lt;code>/var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/example/ethernet-static&lt;/code> as a template.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo cp /var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/example/ethernet-static /var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/static
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Modify &lt;code>/var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/static&lt;/code> accordingly. Now
create a hook, with the same name as the &lt;code>netctl&lt;/code> profile.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /var/lib/lxc/CONTAIN_NAME/rootfs/etc/netctl/hooks/static
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5e5e5">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">if&lt;/span> [[ &lt;span style="color:#f00">$(&lt;/span>systemd-detect-virt&lt;span style="color:#f00">)&lt;/span> != none ]]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">BindsToInterfaces&lt;/span>=()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#eedd82">ForceConnect&lt;/span>=yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the container and enable the &lt;code>netctl&lt;/code> profile.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>netctl enable static
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netctl start static
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="debian-containers">Debian Containers.&lt;/h2>
&lt;p>Install &lt;code>debobootstrap&lt;/code> and &lt;code>dpkg&lt;/code> so that Debian containers can be created.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>packer -S --noedit dpkg debootstrap
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="squeeze">Squeeze&lt;/h3>
&lt;p>Create a Debian container, &lt;code>squeeze&lt;/code> is the default.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-create -t debian -n squeeze-01 -f ~/squeeze-01.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change the &lt;code>root&lt;/code> password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chroot /var/lib/lxc/squeeze/rootfs/ passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="wheezy">Wheezy&lt;/h3>
&lt;p>Much the same as the Squeeze exaple above but use the following template.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/simonvanderveldt/lxc-debian-wheezy-template">https://github.com/simonvanderveldt/lxc-debian-wheezy-template&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="using-containers">Using containers&lt;/h1>
&lt;p>Start a container&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-start -d -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Connect to the container and log in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-console -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To halt a container cleanly by the containers initv-system:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-halt -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Stop and remove your container always with the two steps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo lxc-stop -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo lxc-destroy -n CONTAINER_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://nurupoga.org/articles/archlinux-on-lxc-with-netctl/">http://nurupoga.org/articles/archlinux-on-lxc-with-netctl/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=164753">https://bbs.archlinux.org/viewtopic.php?id=164753&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://andyortlieb.wordpress.com/2013/03/15/practical-use-of-lxc-in-arch-linux-in-march-of-2013/">http://andyortlieb.wordpress.com/2013/03/15/practical-use-of-lxc-in-arch-linux-in-march-of-2013/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Linux_Containers">https://wiki.archlinux.org/index.php/Linux_Containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Lxc-systemd">https://wiki.archlinux.org/index.php/Lxc-systemd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/Netctl">https://wiki.archlinux.org/index.php/Netctl&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.suse.com/documentation/sles11/singlehtml/lxc_quickstart/lxc_quickstart.html">https://www.suse.com/documentation/sles11/singlehtml/lxc_quickstart/lxc_quickstart.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.gentoo.org/wiki/LXC">http://wiki.gentoo.org/wiki/LXC&lt;/a>&lt;/li>
&lt;/ul></description><summary>A rough guide to running Debian containers on Arch Linux with LXC</summary></item><item><title>Installing Nikola on Debian</title><link>https://wimpysworld.com/posts/installing-nikola-on-debian/</link><pubDate>Mon, 31 Mar 2014 16:19:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/installing-nikola-on-debian/</guid><description>&lt;p>Nikola is a static site and blog generator written in &lt;a href="http://www.python.org">Python&lt;/a>
that I&amp;rsquo;ve been using for a good while now. This blog post describes how to install
&lt;a href="http://getnikola.com/">Nikola&lt;/a> on Debian. Now, this may look like a long winded way
to install Nikola, given that Debian .deb package exist, but in my opinion it is
the correct way to install Nikola on Debian.&lt;/p>
&lt;h2 id="installing-python">Installing Python&lt;/h2>
&lt;p>First you&amp;rsquo;ll need Python and &lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install libpython2.7 python2.7 python2.7-dev python2.7-minimal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove any &lt;code>apt&lt;/code> installed Python packages that we are about to replace. The
versions of these packages in the Debian repositories soon get stale.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge python-setuptools python-virtualenv python-pip python-profiler
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>pip&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://bootstrap.pypa.io/get-pip.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo python2.7 get-pip.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>pip&lt;/code> to install &lt;code>virtualenv&lt;/code> and &lt;code>virtualenvwrapper&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pip install virtualenv --upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pip install virtualenvwrapper
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-snakepit">The Snakepit&lt;/h2>
&lt;p>Create a &amp;ldquo;Snakepit&amp;rdquo; directory for storing all the virtualenvs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir ~/Snakepit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following your &lt;code>~/.bashrc&lt;/code> to enable &lt;code>virtualenvwrapper&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export &lt;span style="color:#eedd82">WORKON_HOME&lt;/span>=&lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">HOME&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/Snakepit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">if&lt;/span> [ -f /usr/local/bin/virtualenvwrapper.sh ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source /usr/local/bin/virtualenvwrapper.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">elif&lt;/span> [ -f /usr/bin/virtualenvwrapper.sh ]; &lt;span style="color:#f00">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source /usr/bin/virtualenvwrapper.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f00">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-virtualenv-for-nikola">Create a virtualenv for Nikola&lt;/h2>
&lt;p>Open a new shell to ensure that the &lt;code>virtualenvwrapper&lt;/code> configuration is active.
The following will create a new virtualenv called &lt;code>nikola&lt;/code> based on Python 2.7.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkvirtualenv -p /usr/bin/python2.7 ~/Snakepit/nikola-640
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="working-on-a-virtualenv">Working on a virtualenv&lt;/h3>
&lt;p>To activate an existing virtualenv do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>workon nikola-640
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can switch to another virtualenv at any time, just use &lt;code>workon envname&lt;/code>.
Your shell prompt will change while a virtualenv is being worked on to
indicate which virtualenv is currently active.&lt;/p>
&lt;p>While working on a virtualenv you can &lt;code>pip&lt;/code> install what you need or manually
install any Python libraries safe in the knowledge you will not adversely
damage any other virtualenvs or the global packages in the process. Very
useful for developing a new branch which may have different library requirements
than the master/head.&lt;/p>
&lt;p>When you are finished working in a virtualenv you can deactivate it by
simply executing &lt;code>deactivate&lt;/code>.&lt;/p>
&lt;h2 id="install-nikola-requirements">Install Nikola requirements&lt;/h2>
&lt;p>Nikola is will be powered by Python 2.7 and some additional packages will
be required.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install python2.7-dev libfreetype6-dev libjpeg8-dev libxslt1-dev libxml2-dev libyaml-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="what-are-these-requirements-for">What are these requirements for?&lt;/h3>
&lt;ul>
&lt;li>&lt;code>python2.7-dev&lt;/code> provides the header files for Python 2.7 so that Python
modules with C extensions can be built.&lt;/li>
&lt;/ul>
&lt;p>The following are required to build &lt;code>pillow&lt;/code>, the Python imaging library.&lt;/p>
&lt;ul>
&lt;li>&lt;code>libjpeg8-dev&lt;/code>&lt;/li>
&lt;li>&lt;code>libfreetype6-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The following are required to build &lt;code>lxml&lt;/code>, a Python XML library.&lt;/p>
&lt;ul>
&lt;li>&lt;code>libxml2-dev&lt;/code>&lt;/li>
&lt;li>&lt;code>libxslt1-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The following are required to build &lt;code>python-coveralls&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>&lt;code>libyaml-dev&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="install-nikola">Install Nikola&lt;/h2>
&lt;p>Download Nikola.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">VIRTUAL_ENV&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">VIRTUAL_ENV&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>/src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://github.com/getnikola/nikola/archive/v6.4.0.tar.gz -O nikola-640.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar zxvf nikola-640.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd nikola-6.4.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the Nikola requirements.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install -r requirements-full.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you intend to use the Nikola planetoid (Planet generator) plugin you&amp;rsquo;ll also
need to following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install peewee feedparser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Actually install nikola.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nikola is now installed. &lt;code>nikola help&lt;/code> and the &lt;a href="http://getnikola.com/handbook.html">Nikola Handbook&lt;/a>
will assist you from here on.&lt;/p></description><summary>How to install Nikola static site generator on Debian</summary></item><item><title>Linux Mint LMDE on Hybrid Disk Laptop</title><link>https://wimpysworld.com/posts/linux-mint-lmde-on-hybrid-disk-laptop/</link><pubDate>Wed, 28 Aug 2013 20:10:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/linux-mint-lmde-on-hybrid-disk-laptop/</guid><description>&lt;p>I have an old Thinkpad T43p that I am trying to extend the life of. So I recently
fitted a cheap 60GB IDE Solid State Drive (SSD) and put a 320GB SATA Hard Disk
Drive (HDD) in the Ultrabay. This is not a true hybrid disk, but the principles
are similar. The root partition will go on the SDD (for performance) and the
home partition will be located on the HDD (for capacity).&lt;/p>
&lt;p>I&amp;rsquo;ve been running &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a> on the T43p and the SDD
improves system responsiveness and boot time considerably, especially when using
&lt;a href="http://en.wikipedia.org/wiki/F2FS">F2FS&lt;/a> or
&lt;a href="https://btrfs.wiki.kernel.org/index.php/Main_Page">btrfs&lt;/a> (with LZO
compression and SSD mount options) on the root filesystem.&lt;/p>
&lt;p>I am also testing &lt;a href="http://www.linuxmint.com/download_lmde.php">Linux Mint Debian Edition&lt;/a> (LMDE)
with the &lt;a href="http://mate-desktop.org/">MATE Desktop&lt;/a> desktop to determine if this
is a suitable operating system for my family to use. It appears they find
&lt;a href="http://www.gnome.org/gnome-3/">GNOME 3&lt;/a> confusing and would prefer a familiar
desktop experience.&lt;/p>
&lt;p>While testing LMDE 201203 I ran into a few issues, so I&amp;rsquo;ve decided to capture
my notes here for future reference.&lt;/p>
&lt;h1 id="fix-the-installer">Fix the installer&lt;/h1>
&lt;p>In order to install LMDE using partitions on multiple drives you must
use the ADVANCED USER install mode. However, the ADVANCED USER install mode
has a bug that prevents the installer from completing, so that needs to be
fixed first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /usr/lib/live-installer/frontend/gtk_interface.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Find the following on line 1765.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>self.wTree.get_widget(&lt;span style="color:#87ceeb">&amp;#34;button_next&amp;#34;&lt;/span>).show()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After it add the following line, making sure the indentation is correct.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>self.wTree.get_widget(&lt;span style="color:#87ceeb">&amp;#34;button_next&amp;#34;&lt;/span>).set_sensitive(&lt;span style="color:#f00">True&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="installing-lmde">Installing LMDE&lt;/h1>
&lt;ul>
&lt;li>Double click the &lt;code>Install Linux Mint&lt;/code> icon on the desktop.&lt;/li>
&lt;li>Select your &lt;em>Language&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Select your &lt;em>Timezone&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Select your &lt;em>Keyboard layout&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Enter your &lt;em>User info&lt;/em> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>From the &lt;em>Hard drive&lt;/em> window Select &lt;code>Manually mount partitions (ADVANCED USERS ONLY)&lt;/code> and click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>The &lt;em>Please make sure you wish to manually manage partitions&lt;/em> window will
appear. On my system the SSD is detected on &lt;code>/dev/sda&lt;/code> and the HDD is detected
on &lt;code>/dev/sdb&lt;/code>. Start &lt;code>GParted&lt;/code> and partition and format the drives as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span> /dev/sda1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: 256MiB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: ext4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /dev/sda2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: 2048MiB (or the size you prefer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: linux-swap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: swap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /dev/sda3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: Remainder
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: btrfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /dev/sdb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: All
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create as: Primary Partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File system: ext4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Label: home
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Apply the changes and close GParted.&lt;/p>
&lt;p>I use ext4 for the &lt;code>/boot&lt;/code> partition because GRUB can&amp;rsquo;t currently boot from btrfs
in LMDE. I use ext4 for &lt;code>/home&lt;/code> because it offers the best performance on rotational
drives on my Thinkpad T43p. I use btrfs on the &lt;code>/root&lt;/code> partition because performs
best (by some margin) on solid state drives in my Thinkpad T43p.&lt;/p>
&lt;p>The filesystems need mounting under &lt;code>/target&lt;/code> so the installer can install the
OS. Open a Terminal and do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mkdir /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -t btrfs -o &lt;span style="color:#eedd82">compress&lt;/span>=lzo,ssd /dev/disk/by-label/root /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir /target/{boot,home}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -t ext4 /dev/disk/by-label/boot /target/boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -t ext4 /dev/disk/by-label/home /target/home
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Return to the Linux Mint Debian Installer.&lt;/p>
&lt;ul>
&lt;li>Click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>From the &lt;em>Advanced options&lt;/em> check &lt;code>Install GRUB&lt;/code> and select &lt;code>/dev/sda&lt;/code>. Click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Confirm the &lt;em>Summary&lt;/em> is correct and click &lt;code>Install&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Time for a cup of tea while the install runs. A pop-up, titled &lt;em>Installation
Paused&lt;/em>, will appear. Click &lt;code>OK&lt;/code>.&lt;/p>
&lt;h2 id="create-targetetcfstab">Create &lt;code>/target/etc/fstab&lt;/code>&lt;/h2>
&lt;p>Do as the installer says and create &lt;code>/target/etc/fstab&lt;/code>. Open a Terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /target/etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following &lt;code>fstab&lt;/code> works for my T43p.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># /etc/fstab: static file system information.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>proc /proc proc defaults 0 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=root / btrfs defaults,noatime,compress=lzo,ssd 0 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=boot /boot ext4 defaults,noatime 0 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=home /home ext4 defaults,relatime 0 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL=swap none swap sw 0 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="upgrade-mate-16-and-remove-legacy-mate-14-packages">Upgrade MATE 1.6 and remove legacy MATE 1.4 packages&lt;/h2>
&lt;p>MATE 1.6 has been released for LMDE 201203 so it is a good idea to upgrade
and remove legacy packages before the first boot to ensure a clean
configuration. Open a Terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chroot /target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install apt-show-versions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get dist-upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some MATE 1.4 packages will be left behind that are no longer required. The
following can help identify them.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-show-versions | grep 1&lt;span style="color:#87ceeb">\.&lt;/span>4&lt;span style="color:#87ceeb">\.&lt;/span>[0-9]&lt;span style="color:#87ceeb">\-&lt;/span>[0-9]&lt;span style="color:#87ceeb">\+&lt;/span>wheezy | cut -f1 -d&lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Purge the old MATE 1.4 packages.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">PKGS&lt;/span>=&lt;span style="color:#87ceeb">`&lt;/span>apt-show-versions | grep 1&lt;span style="color:#87ceeb">\.&lt;/span>4&lt;span style="color:#87ceeb">\.&lt;/span>[0-9]&lt;span style="color:#87ceeb">\-&lt;/span>[0-9]&lt;span style="color:#87ceeb">\+&lt;/span>wheezy | cut -f1 -d&lt;span style="color:#87ceeb">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#87ceeb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get purge &lt;span style="color:#87ceeb">${&lt;/span>&lt;span style="color:#eedd82">PKGS&lt;/span>&lt;span style="color:#87ceeb">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exit the &lt;code>chroot&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="finish-the-install">Finish the install&lt;/h2>
&lt;p>Return to the Linux Mint Debian Installer.&lt;/p>
&lt;ul>
&lt;li>Click &lt;code>Forward&lt;/code>.&lt;/li>
&lt;li>Some final installation steps will now complete.&lt;/li>
&lt;li>A pop-up, titled &lt;em>Installation finished&lt;/em>, will appear. Click &lt;code>Yes&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Your computer will reboot and start LMDE.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://forums.linuxmint.com/viewtopic.php?f=189&amp;amp;t=129381">http://forums.linuxmint.com/viewtopic.php?f=189&amp;amp;t=129381&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://forums.linuxmint.com/viewtopic.php?f=185&amp;amp;t=143547">http://forums.linuxmint.com/viewtopic.php?f=185&amp;amp;t=143547&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Linux Mint Debian Edition (LMDE) on a Laptop with Hybrid Disk</summary></item><item><title>Plex Media Server on Open Media Vault</title><link>https://wimpysworld.com/posts/plex-media-server-on-open-media-vault/</link><pubDate>Tue, 27 Aug 2013 21:11:43 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/plex-media-server-on-open-media-vault/</guid><description>&lt;p>I&amp;rsquo;ve recently started using &lt;a href="http://www.plexapp.com">Plex Media Server&lt;/a> to
handle most media streaming duties around the house. I run in on
&lt;a href="http://www.openmediavault.org">Open Media Vault&lt;/a> 0.5.x. At the time of writing
Open Media Vault is based on &lt;a href="http://www.debian.org">Debian&lt;/a> (Squeeze) 6.0.&lt;/p>
&lt;h1 id="plex-media-server">Plex Media Server&lt;/h1>
&lt;p>Anyway, it turns out that installing Plex Media Server on Open Media Vault is
super simple thanks to the &lt;a href="http://forums.plexapp.com/index.php/topic/51427-plex-media-server-for-debian/">hard work of Christian Svedin&lt;/a>
who has packaged everything and made it available via an &lt;code>apt&lt;/code> repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install curl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;deb http://shell.ninthgate.se/packages/debian squeeze main&amp;#34;&lt;/span> | sudo tee -a /etc/apt/sources.list.d/plexmediaserver.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl http://shell.ninthgate.se/packages/shell-ninthgate-se-keyring.key | sudo apt-key add -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install plexmediaserver
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The instructions above also work for Debian Wheezy, just change &lt;code>squeeze&lt;/code> to
&lt;code>wheezy&lt;/code> in &lt;code>/etc/apt/sources.list.d/plexmediaserver.list&lt;/code>.&lt;/p>
&lt;p>When the install is complete point your browser at Plex/Web, for example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://plex.example.org:32400/web">http://plex.example.org:32400/web&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Replace &lt;code>plex.example.org&lt;/code> with your Plex Media Server hostname/ip address.&lt;/p>
&lt;p>If you have PlexPass then head over to the &lt;a href="http://forums.plexapp.com/index.php/topic/48865-debian-package/">Preview Releases for Debian&lt;/a>
and download and install the latest &lt;code>.deb&lt;/code>.&lt;/p>
&lt;h1 id="plex-clients">Plex Clients&lt;/h1>
&lt;p>I use the Plex Client for Android on phone and tablet, a Roku 2 XS in the lounge
and Roku 2 LT in the bedroom.&lt;/p>
&lt;p>I&amp;rsquo;ve successfully tested Plex Home Theatre on Ubuntu 12.04 and Raspbmc with
the PleXBMC plug-in on Raspberry Pi.&lt;/p>
&lt;h3 id="references">References&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://forums.plexapp.com/index.php/topic/51427-plex-media-server-for-debian/">http://forums.plexapp.com/index.php/topic/51427-plex-media-server-for-debian/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://forums.plexapp.com/index.php/topic/48865-debian-package/">http://forums.plexapp.com/index.php/topic/48865-debian-package/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Plex Media Server on Open Media Vault (Squeeze) 6.0</summary></item><item><title>Setting up MiniDLNA on Open Media Vault</title><link>https://wimpysworld.com/posts/setting-up-minidlna-on-open-media-vault/</link><pubDate>Mon, 26 Aug 2013 21:49:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/setting-up-minidlna-on-open-media-vault/</guid><description>&lt;p>I have &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a> running on a
&lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>.&lt;/p>
&lt;p>OpenMediaVault (OMV) is a network attached storage (NAS) solution based on
&lt;a href="http://www.debian.org">Debian&lt;/a> Linux. At the time of writing OMV 0.5.x is
based on Debian 6.0 (Squeeze).&lt;/p>
&lt;p>In recent months &lt;a href="http://www.plexapp.com">Plex&lt;/a> has taken over just about all
media streaming duties in our house, with the expectation of streaming music
because Plex music playback and streaming is seriously lacking (no playlists!).
So, &lt;a href="http://sourceforge.net/projects/minidlna/">MiniDLNA&lt;/a> is still required for
serving up music around the house.&lt;/p>
&lt;h1 id="install-minidlna-on-omv">Install MiniDLNA on OMV&lt;/h1>
&lt;p>There is a 3rd party plugin repository for Open Media Vault which includes
packages to install MiniDLNA and a WebUI plugin for managing MiniDLNA via OMV.
I upgraded to OMV 0.5.x this morning. and with the 0.5.x the Plugin API changed
and as of the time of writing none of the 3rd party plugins had not been migrated
to OMV 0.5.x. That said, MiniDLNA is super simple to configure so a WebUI is
not a requirement for me.&lt;/p>
&lt;p>MiniDLNA is not currently packaged for Debian Squeeze in the official repositories but
&lt;a href="http://blog.steve.org.uk/minidlna_is_now_packaged.html">Steve Kemp&lt;/a> has packaged
a fairly up-to-date version of MiniDLNA for Squeeze. Brilliant! Do the following as
&lt;code>root&lt;/code> to install MiniDLNA.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget http://packages.steve.org.uk/minidlna/apt-key.pub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-key add apt-key.pub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo deb http://packages.steve.org.uk/minidlna/squeeze/ ./&lt;span style="color:#87ceeb">&amp;#34; &amp;gt; /etc/apt/sources.list.d/minidlna.list
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">echo &amp;#34;&lt;/span>deb-src http://packages.steve.org.uk/minidlna/squeeze/ ./&lt;span style="color:#87ceeb">&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list.d/minidlna.list
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you&amp;rsquo;ve done that run the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install minidlna
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The MiniDLNA defaults in Steve&amp;rsquo;s package assume you have your music in
&lt;code>/srv/music&lt;/code>. So you&amp;rsquo;ll probably need to modify &lt;code>/etc/minidlna/minidlna.conf&lt;/code>
accordingly. From this point &lt;code>man minidlna&lt;/code> and &lt;code>man minidlna.conf&lt;/code> will
guide you.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://blog.steve.org.uk/minidlna_is_now_packaged.html">http://blog.steve.org.uk/minidlna_is_now_packaged.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://packages.steve.org.uk/minidlna/">http://packages.steve.org.uk/minidlna/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://sourceforge.net/projects/minidlna/">http://sourceforge.net/projects/minidlna/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Music streaming with MiniDLNA on Open Media Vault</summary></item><item><title>Setting up Open Media Vault on the HP MicroServer N54L</title><link>https://wimpysworld.com/posts/setting-up-open-media-vault-on-the-hp-microserver-n54l/</link><pubDate>Wed, 07 Aug 2013 21:21:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/setting-up-open-media-vault-on-the-hp-microserver-n54l/</guid><description>&lt;p>I&amp;rsquo;ve installed &lt;a href="http://www.openmediavault.org/">Open Media Vault&lt;/a> (OMV)
on my new &lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5336624">HP ProLiant MicroServer G7 N54L&lt;/a>
to replace my aging, and lackluster, &lt;a href="http://www.readynas.com">ReadyNAS&lt;/a> NV.&lt;/p>
&lt;p>OpenMediaVault (OMV) is a network attached storage (NAS) solution based on
&lt;a href="http://www.debian.org">Debian&lt;/a> Linux. At the time of writing OMV 0.5.x is
based on Debian 6.0 (Squeeze).&lt;/p>
&lt;p>This blog post is not going to cover the extremely simple OMV installation
procedure, it assumes OMV 0.5.x is already installed. This post explains
how to upgrade the kernel, install some addtional plugins and some hackery
to update &lt;a href="http://www.transmissionbt.com/">Transmission&lt;/a>.&lt;/p>
&lt;p>This blog post is basically the essential notes I need to recreate my server setup.&lt;/p>
&lt;h1 id="n54l-custom-bios">N54L Custom BIOS&lt;/h1>
&lt;p>I&amp;rsquo;ve installed one of the custom BIOS mods for the N54L.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.avforums.com/forums/networking-nas/1521657-hp-n36l-n40l-n54l-microserver-updated-ahci-bios-support.html">HP N36L/N40L/N54L Microserver Updated AHCI BIOS Support&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I selected the BIOS mod above because the guy who created was an HP engineer and
this BIOS mod only enables additional features that the N54L can actually support.
Using this BIOS mod I&amp;rsquo;ve been able to:&lt;/p>
&lt;ul>
&lt;li>Enable AHCI for the Optical Disk Drive (ODD) port.&lt;/li>
&lt;li>Enable AHCI and port multiplier for the the e-SATA port.&lt;/li>
&lt;li>Make all drives hot-pluggable.&lt;/li>
&lt;/ul>
&lt;p>The 250GB hard drive that came with N54L is now relocated in the optical drive day
and being used as the OS drive, leaving all 4 bays for data.&lt;/p>
&lt;p>As some point in the future I may want to hook up a 4 bay e-SATA enclosure and this
BIOS mod makes that possible.&lt;/p>
&lt;h1 id="open-media-vault">Open Media Vault&lt;/h1>
&lt;p>Once Open Media Vault is installed, I do the following.&lt;/p>
&lt;h2 id="enable-ssh">Enable SSH&lt;/h2>
&lt;p>OMV actually has a really good WebUI that can be used to accomplish most
update/upgrade tasks but I can&amp;rsquo;t help myself. I must have shell access. From
the OMV WebUI:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Services -&amp;gt; SSH&lt;/code>
&lt;ul>
&lt;li>Put a tick in &lt;code>Enable&lt;/code> and click the &lt;code>OK&lt;/code> button.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="shell-tools">Shell Tools&lt;/h2>
&lt;p>Things crave when at the a shell.&lt;/p>
&lt;p>Login to your OMV server as &lt;code>root&lt;/code> using SSH and then do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install less lsb-release rsync screen tree
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="omv-plugins">OMV Plugins&lt;/h1>
&lt;p>OMV has a number of built-in plugins and a &lt;a href="http://omv-plugins.org">third party repository of plugins&lt;/a>.&lt;/p>
&lt;h2 id="built-in-plugins">Built-in Plugins&lt;/h2>
&lt;p>Update the built-in plugins.&lt;/p>
&lt;ul>
&lt;li>&lt;code>System -&amp;gt; Plugins&lt;/code>
&lt;ul>
&lt;li>Click the &lt;code>Check&lt;/code> icon.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="logical-volume-manager">Logical Volume Manager&lt;/h3>
&lt;p>I use LVM. There, I said it. Enable the LVM2 plugin as follows from the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>System -&amp;gt; Plugins&lt;/code>
&lt;ul>
&lt;li>Highlight the &lt;code>openmediavault-lvm2&lt;/code> plugin.&lt;/li>
&lt;li>Click the &lt;code>Install&lt;/code> icon and then &lt;code>Yes&lt;/code>.&lt;/li>
&lt;li>When the install is &lt;code>Done ...&lt;/code>, click &lt;code>Close&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3rd-party-omv-plugins">3rd Party OMV-Plugins&lt;/h2>
&lt;p>Follow the instructions on the following page to enable the OMV-Extras plugin repository.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://omv-extras.org/simple/index.php?id=how-to-install-omv-extras-plugin">http://omv-extras.org/simple/index.php?id=how-to-install-omv-extras-plugin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="backports-32-kernel">Backports 3.2 Kernel&lt;/h3>
&lt;p>I updated the Kernel to 3.2 because it better supports the N54L hardware, in
particular the embedded graphics controller. The Linux 3.2 kernel can be
installed via OMV-Extras.&lt;/p>
&lt;ul>
&lt;li>&lt;code>System -&amp;gt; OMV-Extras.org -&amp;gt; Install Backports 3.2 kernel&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="plex-media-server">Plex Media Server&lt;/h3>
&lt;p>Plex Media Server is available as a plugin once the OMV-Extras plugin
repository is enabled. Plex is managed via the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>Services -&amp;gt; Plex&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="transmission">Transmission&lt;/h3>
&lt;p>Transmission is available as a plugin once the OMV-Extras plugin repository is
enabled. Transmission is managed via the OMV WebUI.&lt;/p>
&lt;ul>
&lt;li>&lt;code>Services -&amp;gt; BitTorrent -&amp;gt; Server&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s all very straight forward. I use the following block list.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz">http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>That pretty much covers the stuff I won&amp;rsquo;t remember in the future. I&amp;rsquo;m considering
adding LXC and Dropbox in the coming that will require some manual steps.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://thekentishman.wordpress.com/guides-2/open-media-vault-set-up/">http://thekentishman.wordpress.com/guides-2/open-media-vault-set-up/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://myhpmicroserver.com/wiki/Main_Page">http://myhpmicroserver.com/wiki/Main_Page&lt;/a>&lt;/li>
&lt;/ul></description><summary>Open Media Vault on the HP ProLiant MicroServer G7 N54L</summary></item><item><title>Basic Debian Setup for Squeeze and Wheezy</title><link>https://wimpysworld.com/posts/basic-debian-setup-for-squeeze-and-wheezy/</link><pubDate>Tue, 06 Aug 2013 20:07:09 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/basic-debian-setup-for-squeeze-and-wheezy/</guid><description>&lt;p>Recently I&amp;rsquo;ve been deploying &lt;a href="http://www.debian.org">Debian&lt;/a> 6.0 (Squeeze) and
7.0 (Wheezy) servers for some personal projects. These servers are provisioned
in different ways:&lt;/p>
&lt;ul>
&lt;li>Open Media Vault using a Squeeze pre-seed&lt;/li>
&lt;li>VPS powered by &lt;a href="http://http://lxc.sourceforge.net/">LXC&lt;/a> deployed via &lt;code>debootstrap&lt;/code>&lt;/li>
&lt;li>VPS powered by &lt;a href="http://www.linux-kvm.org">KVM&lt;/a> using the hosting providers Wheezy pre-seed&lt;/li>
&lt;/ul>
&lt;p>Consequently the basic install differs on each instance and requires a little
bit of post install tweaking to get them all consistent. This blog post is a
quick reference for the post install steps I complete on Debian servers.&lt;/p>
&lt;h1 id="timezone--locale">Timezone &amp;amp; Locale&lt;/h1>
&lt;p>Select your timezone.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dpkg-reconfigure tzdata
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Select your locale(s).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dpkg-reconfigure locales
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure the locales are correctly generated. Replace &lt;code>en_GB.UTF-8&lt;/code> with your
default locale.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>update-locale &lt;span style="color:#eedd82">LANG&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LANGUAGE&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LC_ALL&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LC_TIME&lt;/span>=en_GB.UTF-8 &lt;span style="color:#eedd82">LC_CTYPE&lt;/span>=en_GB.UTF-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>locale -a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>locale-gen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="hostname">Hostname&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo box.example.org &amp;gt; /etc/hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/bin/hostname -F /etc/hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update &lt;code>/etc/hosts&lt;/code> accordingly.&lt;/p>
&lt;h1 id="time">Time&lt;/h1>
&lt;p>Keeping time is essential.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install ntp ntpdate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Force a clock sync.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>service ntp stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ntpdate -s pool.ntp.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>service ntp start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If your VPS is a Xen DomU then checkout the following.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://jinntech.blogspot.co.uk/2009/03/xen-and-keeping-time.html">http://jinntech.blogspot.co.uk/2009/03/xen-and-keeping-time.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="essentials">Essentials&lt;/h1>
&lt;p>These are the essential tools I require.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install build-essential curl git htop less lsb-release nano &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>rsync screen sudo tree whois
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="users">Users&lt;/h1>
&lt;p>The following will create a user with &lt;code>sudo&lt;/code> capabilities.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>useradd user_a --create-home --shell /bin/bash --user-group &lt;span style="color:#87ceeb">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&lt;/span>--groups adm,dialout,cdrom,plugdev,sudo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a regular user.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>useradd user_b --create-home --shell /bin/bash --user-group --groups adm,dialout,cdrom,plugdev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Assign a password.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo user_a:mypassword | chpasswd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An existing user can be made a sudoer by simply adding them to the &lt;code>sudo&lt;/code> group.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>adduser user_b sudo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="firewall">Firewall&lt;/h1>
&lt;p>I use firewall my VPS server with &lt;code>ufw&lt;/code>. This is my initial configuration that
allow access via SSH only.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ufw
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configuring &lt;code>ufw&lt;/code> is simple but make sure you have console access to the host
you are configuring just in case you lock yourself out.&lt;/p>
&lt;p>&lt;strong>NOTE!&lt;/strong> When enabling &lt;code>ufw&lt;/code> the chains are flushed and connections may be
dropped. You can add rules to the firewall before enabling it however, so if you
are testing &lt;code>ufw&lt;/code> on a remote machine it is recommended you perform&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ufw allow ssh/tcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;before running &lt;code>sudo ufw enable&lt;/code>. Once the firewall is enabled, adding and
removing rules will not flush the firewall, although modifying an existing rule
will.&lt;/p>
&lt;p>Set the default behaviour to deny all incoming connections.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw default deny
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open up TCP port 22 but with rate limiting enabled which will deny connections
from an IP address that has attempted to initiate 6 or more connections in the
last 30 seconds. Ideal for protecting &lt;code>sshd&lt;/code> but you should conisder other
&lt;a href="https://wimpysworld.com/posts/ssh-brute-force-defense/">SSH brute force defense&lt;/a>
techniques as well.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw limit ssh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To enable the firewall you also have to do the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw enable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On low-end servers it might be beneficial to disable logging.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw logging off
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see the status of the firewall using &lt;code>sudo ufw status&lt;/code>.&lt;/p>
&lt;h1 id="intrusion-prevention">Intrusion prevention&lt;/h1>
&lt;p>I use either &lt;code>denyhosts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install denyhosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Purge entries older than 5 days, denied hosts will only be purged twice and
disable email alerts.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/#PURGE_DENY = 5d/PURGE_DENY = 5d/&amp;#39;&lt;/span> /etc/denyhosts.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/#PURGE_THRESHOLD = 2/PURGE_THRESHOLD = 2/&amp;#39;&lt;/span> /etc/denyhosts.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#87ceeb">&amp;#39;s/root@localhost//&amp;#39;&lt;/span> /etc/denyhosts.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart &lt;code>denyhosts&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service denyhosts restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also see &lt;a href="http://flexion.org/posts/2012-11-ssh-brute-force-defence.html">SSH brute force defence&lt;/a>.&lt;/p>
&lt;h1 id="boot-options">Boot options&lt;/h1>
&lt;p>These servers are headless and often remote, therefore I enable &lt;code>fsck&lt;/code> auto repair.&lt;/p>
&lt;h2 id="squeeze">Squeeze&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/FSCKFIX=no/FSCKFIX=yes/&amp;#39;&lt;/span> /etc/default/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="wheezy">Wheezy&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/#FSCKFIX=no/FSCKFIX=yes/&amp;#39;&lt;/span> /etc/default/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="repositories">Repositories&lt;/h1>
&lt;p>&lt;code>lsb-release&lt;/code> was installed earlier. This is what I put in &lt;code>/etc/apt/sources.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list&lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs) main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://security.debian.org/ $(lsb_release -cs)/updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb"># $(lsb_release -cs)-updates, previously known as &amp;#39;volatile&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian/ $(lsb_release -cs)-updates main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I replace &lt;code>ftp.uk&lt;/code> with &lt;code>ftp.us&lt;/code> for servers located in the United States.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#87ceeb">&amp;#39;s/ftp\.uk/ftp\.us/g&amp;#39;&lt;/span> /etc/apt/sources.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="backports">Backports&lt;/h2>
&lt;p>I add the Backports repository in order to access some updated packages.&lt;/p>
&lt;h3 id="squeeze-1">Squeeze&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list.d/backports.list &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian-backports $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian-backports $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="wheezy-1">Wheezy&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt;/etc/apt/sources.list.d/backports.list &lt;span style="color:#87ceeb">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">deb-src http://ftp.uk.debian.org/debian $(lsb_release -cs)-backports main contrib non-free
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>All backports are deactivated by default (i.e. the packages are pinned to
100 by using ButAutomaticUpgrades: yes in the Release files. If you want to
install something from backports run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get -t wheezy-backports install &lt;span style="color:#87ceeb">&amp;#34;package&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="mta">MTA&lt;/h1>
&lt;p>sSMTP is a simple MTA to deliver mail from a computer to a mail hub. sSMTP is
simple and lightweight.&lt;/p>
&lt;h2 id="remove-exim4">Remove exim4&lt;/h2>
&lt;p>Some VPS Debian templates from VPS providers have exim4 installed and running
by default. Remove it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service exim4 stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge exim4 exim4-base exim4-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-ssmtp">Install sSMTP&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install ssmtp bsd-mailx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssmtp-gmail-configuration">sSMTP Gmail Configuration&lt;/h2>
&lt;p>I use Gmail as my smart host, here is an example configuration for
&lt;code>/etc/ssmtp/ssmtp.conf&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Config file for sSMTP sendmail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># The person who gets all mail for userids &amp;lt; 1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Make this empty to disable rewriting.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">root&lt;/span>=root@example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># The place where the mail goes. The actual machine name is required no&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># MX records are consulted. Commonly mailhosts are named mail.domain.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">mailhub&lt;/span>=smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Where will the mail seem to come from?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">rewriteDomain&lt;/span>=
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># The full hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">hostname&lt;/span>=box.example.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Are users allowed to set their own From: address?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># YES - Allow the user to specify their own From: address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># NO - Use the system generated From: address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">FromLineOverride&lt;/span>=YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Gmail requires TLS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">UseTLS&lt;/span>=YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">UseSTARTTLS&lt;/span>=YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Username and password for Gmail servers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">AuthUser&lt;/span>=yourgmailname@gmail.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">AuthPass&lt;/span>=youpassword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#eedd82">AuthMethod&lt;/span>=LOGIN
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then add each account that you want to be able to send mail from by editing
&lt;code>/etc/ssmtp/revaliases&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>root:username@gmail.com:smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user_a:username@gmail.com:smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user_b:username@gmail.com:smtp.gmail.com:587
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="https://wiki.debian.org/sSMTP">https://wiki.debian.org/sSMTP&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="log-and-package-monitoring">Log and package monitoring&lt;/h1>
&lt;p>My personal VPS server are dotted about the place but I like to keep an eye on
them and I find &lt;code>apticron&lt;/code> and &lt;code>logwatch&lt;/code> are very useful for that.&lt;/p>
&lt;h2 id="apticron">apticron&lt;/h2>
&lt;p>apticron is a simple tool to mail about pending package updates.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install apticron
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="logwatch">logwatch&lt;/h2>
&lt;p>Logwatch is a modular log analyser that runs every night and mails you the results.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install logwatch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="lighter">Lighter&lt;/h1>
&lt;p>Some of my servers have fairly low resources, these are some simple changes that
can save a bit of RAM or disk space.&lt;/p>
&lt;h2 id="aptitude">aptitude&lt;/h2>
&lt;p>I don&amp;rsquo;t use it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge aptitude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="d-bus">D-Bus&lt;/h2>
&lt;p>D-Bus is a message bus, used for sending messages between applications.
Some VPS provider Debian templates have D-Bus and avahi installed. I don&amp;rsquo;t
require these on Internet facing servers so I remove them. If an application
pull in D-Bus as a requirement that is fine, but for this initial server
state I remove it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get purge dbus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="at">at&lt;/h2>
&lt;p>&lt;code>at&lt;/code> provides delayed job execution and batch processing. I don&amp;rsquo;t use it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo service atd stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge at
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ngetty">ngetty&lt;/h2>
&lt;p>Ngetty is a single-process &lt;code>getty&lt;/code> replacement, so instead of running 6 &lt;code>getty&lt;/code>
processes consuming up to 3MB of RAM each, you can use a single &lt;code>ngetty&lt;/code> process
using less than 1MB of RAM total.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ngetty
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit &lt;code>/etc/inittab&lt;/code>, comment out &lt;code>getty&lt;/code> and add &lt;code>ngetty&lt;/code> like so.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>#1:2345:respawn:/sbin/getty 38400 tty1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#2:23:respawn:/sbin/getty 38400 tty2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#3:23:respawn:/sbin/getty 38400 tty3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#4:23:respawn:/sbin/getty 38400 tty4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#5:23:respawn:/sbin/getty 38400 tty5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#6:23:respawn:/sbin/getty 38400 tty6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ng:2345:respawn:/sbin/ngetty 1 2 3 4 5 6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart inittab&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>telinit q
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="http://haydenjames.io/replacing-getty-ngetty-debian/">http://haydenjames.io/replacing-getty-ngetty-debian/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>That about covers the general post installation step I complete on my Debian
servers.&lt;/p>
&lt;h2 id="clean-up">Clean up.&lt;/h2>
&lt;p>Remove any packages that are no longer required and clean up
the package cache.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get autoremove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get autoclean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get clean
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><summary>Consistent server configuration for Debian Squeeze &amp;amp; Wheezy</summary></item><item><title>get-iplayer on Debian 6.0</title><link>https://wimpysworld.com/posts/get-iplayer-on-debian-6.0/</link><pubDate>Mon, 25 Mar 2013 18:09:21 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/get-iplayer-on-debian-6.0/</guid><description>&lt;p>I use &lt;a href="http://www.infradead.org/get_iplayer/html/get_iplayer.html">get-iplayer&lt;/a>
to download TV programs so I can watch them on the devices that suit me, when it
suits me. What follows is how I install &lt;code>get-iplayer&lt;/code> on a headless Debian 6.0
server I have a home. The server in question is really low powered so building
from source was not an option.&lt;/p>
&lt;p>In order to install the latest version of &lt;code>get-iplayer&lt;/code> (currently 2.82) on
&lt;a href="http://www.debian.org">Debian&lt;/a> Squeeze a couple of additional package
repositories need enabling.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.deb-multimedia.org/">Debain Multimedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://backports-master.debian.org/">Debian Backports&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Enable the Debain Backports repository by adding the following line to
&lt;code>/etc/apt/sources.list.d/backports.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://backports.debian.org/debian-backports squeeze-backports main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the Debain Multimedia repository by adding the following lines to
&lt;code>/etc/apt/sources.list.d/multimedia.list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://www.deb-multimedia.org squeeze main non-free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://www.deb-multimedia.org squeeze-backports main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the &lt;code>deb-multimedia-keyring&lt;/code> package.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get --allow-unauthenticated install deb-multimedia-keyring
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install &lt;code>get-iplayer&lt;/code> (currently v2.78) from the official Debian repositories,
this will also install the dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install get-iplayer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the &lt;code>get-iplayer&lt;/code> suggested packages.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install ffmpeg rtmpdump libdata-dump-perl libid3-tools libcrypt-ssleay-perl libio-socket-ssl-perl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I have seen it suggested that &lt;code>mplayer&lt;/code> should also be installed. I&amp;rsquo;ve not
determined if that is an absolute requirement. But this is how to install it
on a headless Debian computer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get --no-install-recommends install mplayer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, upgrade &lt;code>get-iplayer&lt;/code> to v2.82.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install libmp3-tag-perl libxml-simple-perl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget http://ftp.uk.debian.org/debian/pool/main/g/get-iplayer/get-iplayer_2.82-2_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i get-iplayer_2.82-2_all.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point &lt;code>get-iplayer&lt;/code> should be good to go and the &lt;a href="http://www.infradead.org/get_iplayer/html/get_iplayer.html">get-iplayer&lt;/a>
website and &lt;code>man get-iplayer&lt;/code> will assist you.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://www.infradead.org/get_iplayer/html/get_iplayer.html">http://www.infradead.org/get_iplayer/html/get_iplayer.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.deb-multimedia.org/">http://www.deb-multimedia.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://backports-master.debian.org/">http://backports-master.debian.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://lists.infradead.org/pipermail/get_iplayer/2012-June/003065.html">http://lists.infradead.org/pipermail/get_iplayer/2012-June/003065.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tech.leeporte.co.uk/get_iplayer-under-debian-squeeze/">http://tech.leeporte.co.uk/get_iplayer-under-debian-squeeze/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing get-iplayer on a Debian (Squeeze) 6.0</summary></item><item><title>Headless Debian 6.0 Torrent Server</title><link>https://wimpysworld.com/posts/headless-debian-6.0-torrent-server/</link><pubDate>Thu, 21 Mar 2013 17:35:22 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/headless-debian-6.0-torrent-server/</guid><description>&lt;p>I recently switched ISPs at home and now have unlimited high speed broadband.&lt;/p>
&lt;p>Finally I can participate in torrenting Linux .ISO images. I always download
the latest distros using &lt;a href="http://en.wikipedia.org/wiki/BitTorrent">BitTorrent&lt;/a>
and can now contribute to the community by seeding the distros I&amp;rsquo;ve downloaded.&lt;/p>
&lt;p>I have a small (in size and resources) &lt;a href="http://www.debian.org">Debian&lt;/a> 6.0
headless server at home that I wanted to turn into a torrent box. I&amp;rsquo;m a big fan
of &lt;a href="http://www.transmissionbt.com/">Transmission&lt;/a> since it can be managed from
the shell, web and Android phone/tablet. Sadly, the Transmission packages in the
official Debain squeeze repositories are quite old, 2.03 at the time of writing,
and there are no Transmission packages in &lt;a href="http://backports-master.debian.org/">Debian Backports&lt;/a>.&lt;/p>
&lt;p>However after flexing my &lt;em>google-fu&lt;/em> I found a &lt;a href="http://apt.balocco.name/changelog.txt">3rd party Debian Squeeze
repository&lt;/a> that includes fairly current
(2.73 at the time of writing) Transmission packages specifically for headless use.
Yah!&lt;/p>
&lt;h2 id="install-transmission-daemon">Install Transmission Daemon&lt;/h2>
&lt;p>First become root.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo -s -H
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the repository key.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-key adv --keyserver keyserver.ubuntu.com --recv-key 92B84A1E
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#87ceeb">&amp;#34;deb http://apt.balocco.name squeeze main&amp;#34;&lt;/span> &amp;gt; /etc/apt/sources.list.d/balocco.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the package list.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install Transmission.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install transmission-cli transmission-daemon transmission-webinterface
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="basic-configuration">Basic Configuration&lt;/h2>
&lt;p>The Transmission settings can be found in &lt;code>/etc/transmission-daemon/settings.json&lt;/code>.&lt;/p>
&lt;p>&lt;strong>If &lt;code>transmission-daemon&lt;/code> is running when you make changes to &lt;code>settings.json&lt;/code>
the changes you make will be discarded the next time &lt;code>transmission-daemon&lt;/code> is started.&lt;/strong>&lt;/p>
&lt;p>Therefore either stop &lt;code>transmission-daemon&lt;/code> before you make any changes or you can make
the daemon reload &lt;code>settings.json&lt;/code> by sending it the SIGHUP signal.&lt;/p>
&lt;h3 id="connect-from-anywhere">Connect from anywhere&lt;/h3>
&lt;p>If you want to be able to connect to Transmission from anywhere on the Internet
stop &lt;code>transmission-daemon&lt;/code>, make the following changes to &lt;code>settings.json&lt;/code> and
then start &lt;code>transmission-daemon&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;#34;rpc-password&amp;#34;&lt;/span>: &lt;span style="color:#87ceeb">&amp;#34;YourPlainTextPassword&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;#34;rpc-username&amp;#34;&lt;/span>: &lt;span style="color:#87ceeb">&amp;#34;YourUsername&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#87ceeb">&amp;#34;rpc-whitelist-enabled&amp;#34;&lt;/span>: &lt;span style="color:#f00">false&lt;/span>,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>rpc-username&lt;/code> field will need adding but you can edit the existing entry
for &lt;code>rpc-password&lt;/code>. Enter the &lt;code>rpc-password&lt;/code> as a plain text string, Transmission
will automatically convert the password to a hash the next time it is started.&lt;/p>
&lt;h2 id="connect-via-a-browser">Connect via a browser&lt;/h2>
&lt;p>You should now be able to access the Transmission web interface via
&lt;code>http://yourhost.example.org:9091&lt;/code>. If you didn&amp;rsquo;t change the username and password
(you really should) the defaults are:&lt;/p>
&lt;ul>
&lt;li>Username : &lt;code>transmission&lt;/code>&lt;/li>
&lt;li>Password : &lt;code>transmission&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="connect-via-android">Connect via Android&lt;/h2>
&lt;p>I have an Android phone and an Android tablet. I use
&lt;a href="https://play.google.com/store/apps/details?id=com.neogb.rtac">Remote Transmission&lt;/a>
on my Android devices to manage my torrent box.&lt;/p>
&lt;h2 id="connect-via-the-shell">Connect via the shell&lt;/h2>
&lt;p>If, like me, you spend the majority of you time at the shell. Then
&lt;a href="https://github.com/fagga/transmission-remote-cli">transmission-remote-cli&lt;/a> is
probably for you. All my workstation run &lt;a href="http://www.archlinux.org">Arch Linux&lt;/a> so
I install &lt;code>transmission-remote-cli&lt;/code> as follows.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo pacman -S transmission-remote-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See the GitHub project page for &lt;code>tramission-remote-cli&lt;/code> for instructions on how
to connect to a remote Transmission daemon.&lt;/p>
&lt;h2 id="block-list">Block List&lt;/h2>
&lt;p>Regardless of how you intend to use Transmission you should enable a block list,
this can be done via &lt;code>settings.json&lt;/code> and the web interface. The following block
lists are a good start.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz">http://list.iblocklist.com/?list=bt_level1&amp;amp;fileformat=p2p&amp;amp;archiveformat=gz&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.bluetack.co.uk/config/level1.gz">http://www.bluetack.co.uk/config/level1.gz&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>That covers the basics for getting Transmission running on headless Debian 6.0 and
how to connect to it from just about anywhere and on any device. I recommend reading
the &lt;a href="https://trac.transmissionbt.com/wiki">Trasmission Wiki&lt;/a> as Transmission is
capable of so much more than I have covered in this blog post.&lt;/p>
&lt;p>Happy torrenting.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://apt.balocco.name/changelog.txt">http://apt.balocco.name/changelog.txt&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.lowendtalk.com/discussion/1001/squeeze-repository">http://www.lowendtalk.com/discussion/1001/squeeze-repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://trac.transmissionbt.com/wiki/EditConfigFiles">https://trac.transmissionbt.com/wiki/EditConfigFiles&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/fagga/transmission-remote-cli">https://github.com/fagga/transmission-remote-cli&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.iblocklist.com/">http://www.iblocklist.com/&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing Transmission daemon on headless Debian (Squeeze) 6.0</summary></item><item><title>Install nginx on Debian</title><link>https://wimpysworld.com/posts/install-nginx-on-debian/</link><pubDate>Thu, 14 Mar 2013 18:09:21 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/install-nginx-on-debian/</guid><description>&lt;p>My webserver of choice is &lt;a href="http://nginx.org/">nginx&lt;/a>, it&amp;rsquo;s resource friendly,
fast, reliable and versatile.&lt;/p>
&lt;p>I have a resource constrained Debian 6.0 &amp;ldquo;server&amp;rdquo; and wanted to deploy nginx on
it for testing. Sadly, the nginx package in the Squeeze repositories is very old.
Fortunately, the nginx team maintain a Debian package repository.&lt;/p>
&lt;p>Add the nginx repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/apt/sources.list.d/nginx.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="squeeze">Squeeze&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://nginx.org/packages/debian/ squeeze nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://nginx.org/packages/debian/ squeeze nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="wheezy">Wheezy&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>deb http://nginx.org/packages/debian/ wheezy nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://nginx.org/packages/debian/ wheezy nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Download the nginx package signing key.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget http://nginx.org/keys/nginx_signing.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the nginx package signing key to the keyring.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-key add nginx_signing.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the repositories.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install nginx.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-get install nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I run &lt;code>ufw&lt;/code> on my VPS so use the following to allow external access to my
website.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ufw allow 80/tcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>nginx is installed and can be configured in the usual way.&lt;/p>
&lt;h4 id="references">References&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://wiki.nginx.org/Install">http://wiki.nginx.org/Install&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.nginx.org/Pgp">http://wiki.nginx.org/Pgp&lt;/a>&lt;/li>
&lt;/ul></description><summary>Installing nginx on a Debian (Squeeze) 6.0 and (wheezy) 7.0</summary></item><item><title>Install Sun Java 6 JRE and JDK from .deb packages</title><link>https://wimpysworld.com/posts/install-sun-java-6-jre-and-jdk-from-deb-packages/</link><pubDate>Mon, 16 Jan 2012 13:20:05 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/install-sun-java-6-jre-and-jdk-from-deb-packages/</guid><description>&lt;p>&lt;a href="https://canonical.com">Canonical&lt;/a> disabled my Java PPA at the end of last week.
So I&amp;rsquo;ve developed another solution for installing Java on Ubuntu which doesn&amp;rsquo;t
infringe any copyrights, licenses, terms of use or CoC&amp;rsquo;s. However, by running
this script to download Java you acknowledge that you have read and accepted the
terms of the Oracle end user license agreement.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.oracle.com/technetwork/java/javase/terms/license/">http://www.oracle.com/technetwork/java/javase/terms/license/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>My script is an automated wrapper for &lt;a href="https://github.com/rraptorr/sun-java6">Janusz Dziemidowicz Debian packaging
scripts for Java 6&lt;/a>. My new script
simply downloads the Java binary installers from Oracle, builds the .deb
packages locally on your computer and creates a local &amp;lsquo;apt&amp;rsquo; repository for
them. Once my script has been executed you can then &amp;lsquo;apt-get&amp;rsquo; install/upgrade
Java 6 from your local repository. Packages are compatible with &amp;ldquo;official&amp;rdquo;
Ubuntu ones and pre-existing Java 6 packages will upgrade cleanly. You can
find the script and full usage instructions on github.&lt;/p>
&lt;div class="text-center">
&lt;iframe src="http://ghbtns.com/github-btn.html?user=flexiondotorg&amp;repo=oab-java6&amp;type=watch&amp;count=true&amp;size=large"
allowtransparency="true" frameborder="0" scrolling="0" width="260px" height="30px">&lt;/iframe>
&lt;iframe src="http://ghbtns.com/github-btn.html?user=flexiondotorg&amp;repo=oab-java6&amp;type=fork&amp;count=true&amp;size=large"
allowtransparency="true" frameborder="0" scrolling="0" width="260px" height="30px">&lt;/iframe>
&lt;/div>
&lt;p>Please read the &lt;a href="https://github.com/flexiondotorg/oab-java6/blob/master/README.rst">README&lt;/a>
file for a more detailed explanation of how the script works and how to use it.
If anyone has any problems, then please submit a ticket on my
&lt;a href="https://github.com/flexiondotorg/oab-java6/issues">Issue Tracker&lt;/a>.&lt;/p></description><summary>An alternative approach to install Sun Java 6 on Ubuntu</summary></item><item><title>Sun Java 1.6.0.30 packages for Ubuntu</title><link>https://wimpysworld.com/posts/sun-java-1.6.0.30-packages-for-ubuntu/</link><pubDate>Tue, 10 Jan 2012 10:53:50 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/sun-java-1.6.0.30-packages-for-ubuntu/</guid><description>&lt;h2 id="update-friday-13th-january-2012">Update Friday 13th January 2012&lt;/h2>
&lt;p>&lt;strong>My Java PPA has been disabled by Canonical, possibly because they violate the Ubuntu CoC and PPA terms of use, as Jef Spaleta noted in the comments below, although I&amp;rsquo;ve had no communication from Canonical at this time. I&amp;rsquo;m preparing an alternative solution, for those of you who need Sun Java 6, that doesn&amp;rsquo;t violate and copyrights, CoCs or terms of use. A new blog post will be made when that alternate solution is available.&lt;/strong>&lt;/p>
&lt;h2 id="update-monday-16th-january-2012">Update Monday 16th January 2012&lt;/h2>
&lt;p>&lt;strong>I&amp;rsquo;ve developed another solution for installing Java 6u30 on Ubuntu which
doesn&amp;rsquo;t infringe any copyrights, licenses, terms of use or CoC&amp;rsquo;s.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="2012-01-install-sun-java-6-jre-jdk-from-deb-packages.html">Install Sun Java 6 JRE and JDK from .deb packages&lt;/a>&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;del>Sun Java 6 packages are being removed from Ubuntu in the near future for the
following reasons:&lt;/del>&lt;/p>
&lt;ul>
&lt;li>&lt;del>As of August 24th 2011, Canonical no longer have permission to redistribute
new Java packages as Oracle has retired the &amp;ldquo;Operating System Distributor
License for Java&amp;rdquo;.&lt;/del>&lt;/li>
&lt;li>&lt;del>Oracle has published an advisory about security issues in the version of
Java currently in the partner archive. Some of these issues are currently
being exploited in the wild.&lt;/del>&lt;/li>
&lt;li>&lt;del>Due to the severity of the security risk, &lt;strong>Canonical released a security
update for the Sun JDK browser plugin which disables the plugin on all machines&lt;/strong>.&lt;/del>&lt;/li>
&lt;li>&lt;del>In the near future, &lt;strong>Canonical will remove all Sun JDK packages from the
Partner archive&lt;/strong>. This will be accomplished by pushing empty packages to
the archive, so that the Sun JDK will be removed from all users machines
when they do a software update. &lt;strong>Users of these packages who have not
migrated to an alternative solution will experience failures after the
package updates have removed Oracle Java from the system&lt;/strong>.&lt;/del>&lt;/li>
&lt;/ul>
&lt;p>&lt;del>See the full Canonical notice below.&lt;/del>&lt;/p>
&lt;ul>
&lt;li>&lt;del>&lt;a href="https://lists.ubuntu.com/archives/ubuntu-security-announce/2011-December/001528.html">https://lists.ubuntu.com/archives/ubuntu-security-announce/2011-December/001528.html&lt;/a>&lt;/del>&lt;/li>
&lt;/ul>
&lt;p>&lt;del>My personal motivations for creating this PPA are as follows:&lt;/del>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;del>I require Sun Java 6 for two enterprise applications we use at work. OpenJDK is not fully compatible.&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>I require Sun Java 6 for two desktop applications at home (so does my father-in-law). OpenJDK not compatible in one instance and not fully compatible in the other.&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>I require Sun Java 6 browser plugin for a web applications I use at home. OpenJDK is not compatible.&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>A friend of mine requires Sun Java 6 for building AOSP from source. OpenJDK is not compatible.&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Some friends of mine play Minecraft, apparently this will help ;-)&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Janusz Dziemidowicz made it easy for me - &lt;a href="https://github.com/rraptorr/sun-java6">https://github.com/rraptorr/sun-java6&lt;/a>&lt;/del>
&lt;del>The PPA currently publishes Sun Java 6 1.6.0.30 for:&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Lucid i386/amd64&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Maverick i386/amd64&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Natty i386/amd64&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Oneiric i386/amd64&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>Precise i386. However, amd64 is failing to build on Precise. I will try and fix this in due course.&lt;/del>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;del>To Sun Java 6 , previously installed via packages, do the following.&lt;/del>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:flexiondotorg/java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get dist-upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;del>To install Sun Java 6 JRE do the following:&lt;/del>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:flexiondotorg/java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install sun-java6-jre
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;del>To install Sun Java 6 browser plugin do the following:&lt;/del>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:flexiondotorg/java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install sun-java6-plugin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;del>To install Sun Java 6 JDK do the following:&lt;/del>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt-add-repository ppa:flexiondotorg/java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install sun-java6-jdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;del>You can take a look a round my PPA from the URL below:&lt;/del>&lt;/p>
&lt;ul>
&lt;li>&lt;del>&lt;a href="https://launchpad.net/~flexiondotorg/+archive/java">https://launchpad.net/~flexiondotorg/+archive/java&lt;/a>&lt;/del>&lt;/li>
&lt;/ul></description><summary>Get Sun Java 1.6.0 packages from a PPA</summary></item><item><title>BloGTK, a weblog client for Linux</title><link>https://wimpysworld.com/posts/blogtk-a-weblog-client-for-linux/</link><pubDate>Fri, 11 Jan 2008 13:44:07 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/blogtk-a-weblog-client-for-linux/</guid><description>&lt;p>I have been meaning to setup a weblog client for a while now. I have tested a
couple of blog clients and have settled on &lt;a href="http://blogtk.sourceforge.net/">BloGTK&lt;/a>.&lt;/p>
&lt;p>It has a simple user interface but comprehensive features, although I did need
to define a few Custom Tags before the editor supported all the formatting
options I wanted. Setting up BloGTK is very simple for Ubuntu and Debain users
requiring an &lt;code>aptitude install blogtk&lt;/code> to get it installed and the following
settings will connect to a Wordpress blog.&lt;/p>
&lt;ul>
&lt;li>Server URL: &lt;code>http://blog.example.org/xmlrpc.php&lt;/code>&lt;/li>
&lt;li>Account: &lt;em>Your Username&lt;/em>&lt;/li>
&lt;li>Password: &lt;em>Your Password&lt;/em>&lt;/li>
&lt;li>Blogging System: &lt;em>Moveable Type&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Now I can blog directly from my desktop, I am hoping it will encourage me to
post more often.&lt;/p></description><summary>Graphical blogging client for GNOME</summary></item><item><title>Conslidated RavenCore HOW-TOs</title><link>https://wimpysworld.com/posts/conslidated-ravencore-how-tos/</link><pubDate>Fri, 18 Aug 2006 12:37:07 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/conslidated-ravencore-how-tos/</guid><description>&lt;p>I have reorganized and consolidated my Debian and Ubuntu HOW-TOs for &lt;a href="http://sourceforge.net/projects/ravencore/">RavenCore&lt;/a> 0.2.3.&lt;/p></description><summary>RavenCore documentation for Debian &amp;amp; Ubuntu</summary></item><item><title>RavenCore 0.2.3 on Debian and Ubuntu</title><link>https://wimpysworld.com/posts/ravencore-0.2.3-on-debian-and-ubuntu/</link><pubDate>Thu, 17 Aug 2006 10:53:53 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/ravencore-0.2.3-on-debian-and-ubuntu/</guid><description>&lt;p>I have updated my HOW-TO for installing &lt;a href="http://sourceforge.net/projects/ravencore/">RavenCore&lt;/a>
on Debian (at the request of the RavenCore developer) and added a HOW-TO for
installing RavenCore on Ubuntu. The are still some minor compatibility issues
with Debian and Ubuntu and these HOW-TOs have been sent to the RavenCore
developer to help document the outstanding incompatibilities.&lt;/p></description><summary>Updated Debian &amp;amp; Ubuntu documentation for RavenCore</summary></item><item><title>RavenCore 0.1.5 on Debian</title><link>https://wimpysworld.com/posts/ravencore-0.1.5-on-debian/</link><pubDate>Sat, 29 Apr 2006 19:18:15 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/ravencore-0.1.5-on-debian/</guid><description>&lt;p>I have updated my HOW-TO for installing &lt;a href="http://sourceforge.net/projects/ravencore/">RavenCore&lt;/a>
0.1.5 on Debian. I&amp;rsquo;m pleased to report that the RavenCore developer has been
very responsive to my feedback and has significantly improved &amp;ldquo;out of the box&amp;rdquo;
Debian compatibility in this release. The are still some minor compatibility
issues and I&amp;rsquo;ve&amp;rsquo; sent feedback to the developer in the hope that things will
continue to improve with RavenCore 0.1.6.&lt;/p></description><summary>New RavenCore. New documentation for Debian users</summary></item><item><title>Flexion.Org Server Migrated</title><link>https://wimpysworld.com/posts/flexion.org-server-migrated/</link><pubDate>Tue, 04 Apr 2006 15:20:29 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/flexion.org-server-migrated/</guid><description>&lt;p>Today Flexion.Org was successfully migrated to a new server. I&amp;rsquo;ve been using
the same shared host for over 7 years but these days I really need much better
control over my server, mostly for spam/virus protection of e-mail but also to
ensure that periodic upgrades don&amp;rsquo;t screw up my website.&lt;/p>
&lt;p>So this time I opted for a virtual dedicated server and I had a choice of all
the popular Linux distros, which I can re-install via a web interface at will
in a few seconds. I choose. If you are looking for a low cost virtual dedicated
server then take a look at &lt;a href="http://www.quantact.com">Quantact&lt;/a>.&lt;/p></description><summary>After 7 shared on a shared host it&amp;rsquo;s time for a VPS</summary></item><item><title>RavenCore 0.1.4 on Debian</title><link>https://wimpysworld.com/posts/ravencore-0.1.4-on-debian/</link><pubDate>Wed, 22 Mar 2006 18:02:05 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/ravencore-0.1.4-on-debian/</guid><description>&lt;p>I set up my new server to use &lt;a href="http://sourceforge.net/projects/ravencore/">RavenCore&lt;/a>
so that managing my domains and e-mail accounts for friends and family will be
as easy as possible. RavenCore is designed for use on CentOS primarily and
therefore RavenCore 0.1.4 requires some tweaking in order to get it fully
working and compatible with Debian.&lt;/p>
&lt;p>I have been sharing my feedback with the RavenCore author and when RavenCore
0.1.5 is released &amp;ldquo;out of the box&amp;rdquo; Debian compatibility should be a reality.&lt;/p></description><summary>Managing virtual hosting on Debian with RavenCore</summary></item><item><title>Leading edge Fedora Core 4</title><link>https://wimpysworld.com/posts/leading-edge-fedora-core-4/</link><pubDate>Sat, 14 Jan 2006 11:32:31 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/leading-edge-fedora-core-4/</guid><description>&lt;p>Having spent all of 2005 using &lt;a href="http://www.ubuntu.com">Ubuntu&lt;/a> I have learnt a
lot about &lt;a href="http://www.debian.org">Debian&lt;/a> and even started using Debian for my
servers.&lt;/p>
&lt;p>Despite using Linux for over 10 years I had never previously used Debian and had
even avoided using it. I was surprised by how much I liked using Ubuntu and
Debian and decided that I give &lt;a href="http://fedoraproject.org/">Fedora&lt;/a> another try
as I have never warmed to &lt;a href="http://www.redhat.com/">redhat&lt;/a> in the same way I had
never previously warmed to Debian. For the longest time I used &lt;a href="http://www.slackware.com/">Slackware&lt;/a>
and then switched to &lt;a href="http://crux.nu/">Crux&lt;/a>.&lt;/p>
&lt;p>This week I have installed Fedora Core 4 on my home computer and been hugely
impressed, but this is mostly down to finding the nrpms.net repository. I was
already using the RPMforge.net group of repositories and nrpms.net is striving
for RPMforge compatibility, so far I haven&amp;rsquo;t experienced any package or
dependency breakage so they must be doing something right. Thanks to nrpms.net
I have effortlessly upgraded FC4 to GNOME 2.12.1, Firefox 1.5, mono 1.1.12 plus
numerous other GNOME applications I regularly use which aren&amp;rsquo;t available
elsewhere. The real bonus was to get NetworkManager 0.5.1 from nrpms.net which
actually works, and works reliably!&lt;/p>
&lt;p>As a result, this is a Linux distribution I can install on my wifes laptop
without fear of reprisals. I have found that installing proprietary
hardware drivers and software has been much simpler for Fedora than Ubuntu,
most notable are VMWare Player, Linuxant HSF modem drivers, ATI drivers, Opera
and Skype.&lt;/p>
&lt;p>I have been able to get my Smartphone and PocketPC working under Ubuntu
the amount of tweaking and constant manual intervention is cumbersome. So I
was staggered when after installing the SynCE packages on Fedora both devices
just worked when connected via USB, the whole process was completely seamless.&lt;/p>
&lt;p>So, after a few days tinkering I have everything I need installed, configured
and working reliably. Fedora is not perfect thought, &lt;code>yum&lt;/code> is still lagging
behind &lt;code>apt&lt;/code> and even that even after enabling a number of the excellent 3rd
party repositories the number and variety of packages available
to FC4 isn&amp;rsquo;t that great. Installing software is just so slow, what the bloody
hell is &lt;code>yum&lt;/code> doing? Using &lt;code>yumex&lt;/code> is coma inducing and &lt;code>up2date&lt;/code> just doesn&amp;rsquo;t
work.&lt;/p>
&lt;p>That said, there is some work being done in these areas for FC5 so maybe
the gap will be closed on &lt;code>apt&lt;/code> a little in the coming months. I do like the
fact that the official Fedora repositories update packages past the
final release date, something which Ubuntu doesn&amp;rsquo;t do. This means that on my
first &lt;code>yum update&lt;/code> OpenOffice was upgrade from 1.9.140 Beta to 2.0.1 final and
many other essential applications were also upgraded. Just when I thought it
couldn&amp;rsquo;t get any better I discovered the &amp;ldquo;Early Login&amp;rdquo; feature which is new to
Fedora Core 4. It is simply brilliant and I can not get from power button to
GNOME desktop in 20 seconds. I so wanted to not like Fedora but I have to say
I think I might be converted. I will have to see how long this enthusiasm for
Fedora will last, but I am already looking forward to FC5.&lt;/p></description><summary>Taking a look at Fedora Core 4</summary></item><item><title>RavenCore 0.0.6 on Debian</title><link>https://wimpysworld.com/posts/ravencore-0.0.6-on-debian/</link><pubDate>Thu, 05 Jan 2006 11:24:41 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/ravencore-0.0.6-on-debian/</guid><description>&lt;p>I have been testing a few virtual hosting control panels the last couple of
days and I am deeply impressed with &lt;a href="http://sourceforge.net/projects/ravencore/">RavenCore&lt;/a>,
so much so I will most likely use it for a project I am planning. However,
Debian is my server distro of choice and RavenCore needs a little tweaking in
order to work seamlessly with Debian. I have been keeping some notes that
explain how to get RavenCore to play nicely with Debian.&lt;/p>
&lt;p>I have submitted my notes in the RavenCore Forums and agreed to assist the
author with any future testing to work toward better &amp;ldquo;out of the box&amp;rdquo; Debian
integration.&lt;/p></description><summary>Virtual hosting on Debian with RavenCore</summary></item><item><title>Ubuntu</title><link>https://wimpysworld.com/projects/ubuntu/</link><pubDate>Sun, 01 Jan 2006 00:00:00 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/projects/ubuntu/</guid><description>&lt;p>Ubuntu comes with everything you need to run your organisation, school, home or
enterprise. All the essential applications, like an office suite, browsers,
email and media apps come pre-installed.&lt;/p>
&lt;p>Community contributor since 2006, worked for Canonical from 2016 to 2021
progressing from software engineer to director of engineering. I remain active
in the Ubuntu community.&lt;/p>
&lt;ul>
&lt;li>Organisation: &lt;a href="https://ubuntu-mate.org">Ubuntu Project&lt;/a> &amp;amp; &lt;a href="https://canonical.com">Canonical&lt;/a>&lt;/li>
&lt;li>Date: January 2006 - date&lt;/li>
&lt;li>Role: Community contributor&lt;/li>
&lt;/ul></description><summary>From community contributor to director of engineering and back again</summary></item><item><title>Handheld Linux</title><link>https://wimpysworld.com/posts/handheld-linux/</link><pubDate>Mon, 12 Sep 2005 10:27:05 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/handheld-linux/</guid><description>&lt;p>I have replaced the disk in my Libretto CT100 with a 20GB disk I had going
spare and re-installed Debian Sarge 3.1, this time I didn&amp;rsquo;t bother with the
2.6 kernel or Xfce because I&amp;rsquo;ve had my fun with those now. But playing
around with Linux on my Libretto has re-kindled my interested in running Linux
on small portable devices.&lt;/p>
&lt;p>Earlier this year I experimented with &lt;a href="http://familiar.handhelds.org/">Familiar Linux&lt;/a>
0.8.2 on my iPAQ 3970 and installed via a serial cable, which was very slow
going. So I&amp;rsquo;ve invested in a 512MB Compact Flash card to speed up my next
round of tinkering with Familiar but this time I intend to leave Familiar
installed and not re-flash the 3970 with PocketPC 2002. The
&lt;a href="http://familiar.handhelds.org/releases/v0.8.2/install/index.html">Familiar v0.8.2 Installation&lt;/a>
guide covers pretty much everything you need to know about the installation
process.&lt;/p></description><summary>Craving a handheld Linux device</summary></item><item><title>Debian 3.1 on Libretto CT100</title><link>https://wimpysworld.com/posts/debian-3.1-on-libretto-ct100/</link><pubDate>Fri, 09 Sep 2005 10:26:14 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/debian-3.1-on-libretto-ct100/</guid><description>&lt;p>I decided to stick with the 2.1GB hard disk in the end, but in order to
complete the initial install I fitted it in an old IBM Thinkpad 600X. This
allowed me to boot off the Debian 3.1 Net Install CD and get a basic system
installed. Once that was done I fitted the hard disk back in the Libretto and
installed the essential bits and pieces I needed. I am feeling a lot of love
for &lt;code>apt-get&lt;/code> today.&lt;/p>
&lt;p>Then I got carried away. I upgraded to the 2.6 kernel, installed X and
Xfce 4.2.2. Then I migrated to the testing repositories, the upgrade for which
has finished a few minutes ago. I found Quentin Stafford-Fraser&amp;rsquo;s
&lt;a href="http://www.qandr.org/quentin/libretto/">Linux on the Libretto 100CT&lt;/a> page very
helpful in finding the right Modeline settings to get X going. I don&amp;rsquo;t really
need Xfce on the Libretto but I couldn&amp;rsquo;t resist getting it running. Despite the
low spec processor and just 64MB of RAM it runs very well, even Firefox is
usable. I might have to bring this box along to the next HantsLUG meeting.&lt;/p></description><summary>Running Xfce &amp;amp; Firefox on the Toshiba Libretto CT100</summary></item><item><title>Server crash! But I have the perfect replacement</title><link>https://wimpysworld.com/posts/server-crash-but-i-have-the-perfect-replacement/</link><pubDate>Fri, 09 Sep 2005 10:18:22 +0000</pubDate><author>martin@wimpress.com (Martin Wimpress)</author><guid>https://wimpysworld.com/posts/server-crash-but-i-have-the-perfect-replacement/</guid><description>&lt;p>The CPU fan on my home server stopped spinning, which has rendered the computer
unusable until I find the time to replace it. I have my workstation, so I can
keep working for the most part, but the services I was running on the server
are critical so I need a server replacement ASAP. I have decided to setup a
dedicated server for those services.&lt;/p>
&lt;p>I always knew my Libretto CT100 would come in handy someday. With 64MB RAM
and a Pentium 166mhz MMX CPU I think it will make an excellent server. Although
I may upgrade the hard disk from 2.1GB to 20GB. I am undecided which distro I&amp;rsquo;ll
install, probably Ubuntu 5.10 or Debian 3.1, but because the Libretto CT100
has weird hardware this install is not straight forward. The following web pages
seem to be the most useful to me right now:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.geocities.com/davissharonforest/">Installing Debian Linux 3.1 Sarge on Toshiba Libretto 50&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.redgrittybrick.org/linux/libretto.html">Installing RedHat Linux on a Toshiba Libretto 100CT&lt;/a>
&lt;ul>
&lt;li>Has good background information on the hardware and hibernation partition&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>There are several other installs documented on the &lt;a href="http://www.linux-on-laptops.com/toshiba.html">Linux on Toshiba Laptop and Notebook Computers&lt;/a> page.&lt;/p></description><summary>Running a Linux server on a Libretto CT100</summary></item></channel></rss>